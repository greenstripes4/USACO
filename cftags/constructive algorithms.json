{"status":"OK","result":{"problems":[{"contestId":1572,"index":"B","name":"Xor of 3","type":"PROGRAMMING","points":1250.0,"tags":["constructive algorithms","constructive algorithms"]},{"contestId":1569,"index":"B","name":"Chess Tournament","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms"]},{"contestId":1567,"index":"F","name":"One-Four Overload","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation"]},{"contestId":1567,"index":"D","name":"Expression Evaluation Error","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1566,"index":"H","name":"Xor-quiz","type":"PROGRAMMING","points":3750.0,"rating":3200,"tags":["constructive algorithms","dp","interactive","math","number theory"]},{"contestId":1566,"index":"G","name":"Four Vertices","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["constructive algorithms","data structures","graphs","greedy","implementation","shortest paths"]},{"contestId":1566,"index":"E","name":"Buds Re-hanging","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","dp","greedy","math","trees"]},{"contestId":1566,"index":"C","name":"MAX-MEX Cut","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["bitmasks","constructive algorithms","dp","greedy"]},{"contestId":1566,"index":"B","name":"MIN-MEX Cut","type":"PROGRAMMING","points":750.0,"rating":800,"tags":["bitmasks","constructive algorithms","dp","greedy"]},{"contestId":1562,"index":"C","name":"Rings","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","math"]},{"contestId":1562,"index":"B","name":"Scenes From a Memory","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["brute force","constructive algorithms","implementation","math","number theory"]},{"contestId":1560,"index":"F2","name":"Nearest Beautiful Number (hard version)","type":"PROGRAMMING","rating":2100,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","greedy"]},{"contestId":1560,"index":"F1","name":"Nearest Beautiful Number (easy version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","bitmasks","brute force","constructive algorithms","dfs and similar","greedy"]},{"contestId":1559,"index":"D2","name":"Mocha and Diana (Hard Version)","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","trees","two pointers"]},{"contestId":1559,"index":"D1","name":"Mocha and Diana (Easy Version)","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["brute force","constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":1559,"index":"C","name":"Mocha and Hiking","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","graphs"]},{"contestId":1559,"index":"A","name":"Mocha and Math","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["bitmasks","constructive algorithms","math"]},{"contestId":1558,"index":"C","name":"Bottom-Tier Reversals","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":1557,"index":"E","name":"Assiut Chess","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["brute force","constructive algorithms","interactive"]},{"contestId":1556,"index":"D","name":"Take a Guess","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["bitmasks","constructive algorithms","interactive","math"]},{"contestId":1555,"index":"D","name":"Say No to Palindromes","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","dp","strings"]},{"contestId":1555,"index":"C","name":"Coin Rows","type":"PROGRAMMING","rating":1300,"tags":["brute force","constructive algorithms","dp","implementation"]},{"contestId":1554,"index":"D","name":"Diane","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["constructive algorithms","greedy","strings"]},{"contestId":1553,"index":"G","name":"Common Divisor Graph","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["brute force","constructive algorithms","dsu","graphs","hashing","math","number theory"]},{"contestId":1553,"index":"E","name":"Permutation Shift","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["brute force","combinatorics","constructive algorithms","dfs and similar","dsu","graphs","math"]},{"contestId":1552,"index":"E","name":"Colors and Intervals","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1552,"index":"D","name":"Array Differentiation","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["bitmasks","brute force","constructive algorithms","dfs and similar","dp","graphs","math"]},{"contestId":1552,"index":"C","name":"Maximize the Intersections","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["combinatorics","constructive algorithms","geometry","greedy","sortings"]},{"contestId":1551,"index":"D2","name":"Domino (hard version)","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms","implementation","math"]},{"contestId":1551,"index":"D1","name":"Domino (easy version)","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","math"]},{"contestId":1551,"index":"B2","name":"Wonderful Coloring - 2","type":"PROGRAMMING","rating":1400,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1550,"index":"D","name":"Excellent Arrays","type":"PROGRAMMING","rating":2300,"tags":["binary search","combinatorics","constructive algorithms","implementation","math","sortings","two pointers"]},{"contestId":1547,"index":"D","name":"Co-growing Sequence","type":"PROGRAMMING","rating":1300,"tags":["bitmasks","constructive algorithms","greedy"]},{"contestId":1545,"index":"D","name":"AquaMoon and Wrong Coordinate","type":"PROGRAMMING","points":2250.0,"rating":3000,"tags":["constructive algorithms","interactive","math"]},{"contestId":1545,"index":"C","name":"AquaMoon and Permutations","type":"PROGRAMMING","points":1500.0,"rating":2800,"tags":["2-sat","brute force","combinatorics","constructive algorithms","graph matchings","graphs"]},{"contestId":1543,"index":"E","name":"The Final Pursuit","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","graphs","greedy","math"]},{"contestId":1543,"index":"D2","name":"RPD and Rap Sheet (Hard Version)","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["brute force","constructive algorithms","interactive","math"]},{"contestId":1543,"index":"D1","name":"RPD and Rap Sheet (Easy Version)","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["bitmasks","constructive algorithms","interactive","math"]},{"contestId":1542,"index":"B","name":"Plus and Multiply","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","math","number theory"]},{"contestId":1541,"index":"A","name":"Pretty Permutations","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1540,"index":"A","name":"Great Graphs","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["constructive algorithms","graphs","greedy","shortest paths","sortings"]},{"contestId":1539,"index":"E","name":"Game with Cards","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1538,"index":"D","name":"Another Problem About Dividing Numbers","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","math","number theory"]},{"contestId":1537,"index":"F","name":"Figure Fixing","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","math"]},{"contestId":1537,"index":"C","name":"Challenging Cliffs","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1537,"index":"B","name":"Bad Boy","type":"PROGRAMMING","points":750.0,"rating":900,"tags":["constructive algorithms","greedy","math"]},{"contestId":1536,"index":"F","name":"Omkar and Akmar","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["chinese remainder theorem","combinatorics","constructive algorithms","fft","games","geometry","math","meet-in-the-middle","string suffix structures"]},{"contestId":1536,"index":"B","name":"Prinzessin der Verurteilung","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["brute force","constructive algorithms","strings"]},{"contestId":1536,"index":"A","name":"Omkar and Bad Story","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","constructive algorithms"]},{"contestId":1534,"index":"H","name":"Lost Nodes","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["constructive algorithms","dp","graphs","interactive","sortings","trees"]},{"contestId":1534,"index":"D","name":"Lost Tree","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","interactive","trees"]},{"contestId":1533,"index":"I","name":"Excursions","type":"PROGRAMMING","tags":["*special","constructive algorithms","dfs and similar","flows","graph matchings","graphs"]},{"contestId":1533,"index":"G","name":"Biome Map","type":"PROGRAMMING","tags":["*special","constructive algorithms","dfs and similar","graphs"]},{"contestId":1531,"index":"C","name":"Симметричный амфитеатр","type":"PROGRAMMING","tags":["*special","constructive algorithms","dp"]},{"contestId":1530,"index":"G","name":"What a Reversal","type":"PROGRAMMING","points":3750.0,"rating":3300,"tags":["constructive algorithms"]},{"contestId":1530,"index":"E","name":"Minimax","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","greedy","strings"]},{"contestId":1530,"index":"D","name":"Secret Santa","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","flows","graphs","greedy","math"]},{"contestId":1530,"index":"B","name":"Putting Plates","type":"PROGRAMMING","points":750.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":1529,"index":"A","name":"Eshag Loves Big Arrays","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy","math"]},{"contestId":1528,"index":"D","name":"It\u0027s a bird! No, it\u0027s a plane! No, it\u0027s AaParsa!","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms","graphs","shortest paths"]},{"contestId":1527,"index":"B2","name":"Palindrome Game (hard version)","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","games"]},{"contestId":1527,"index":"B1","name":"Palindrome Game (easy version)","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","games"]},{"contestId":1526,"index":"F","name":"Median Queries","type":"PROGRAMMING","points":3500.0,"rating":3000,"tags":["constructive algorithms","interactive","probabilities"]},{"contestId":1526,"index":"E","name":"Oolimry and Suffix Array","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["combinatorics","constructive algorithms","math"]},{"contestId":1526,"index":"D","name":"Kill Anton","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["brute force","constructive algorithms","data structures","math","strings"]},{"contestId":1526,"index":"A","name":"Mean Inequality","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","sortings"]},{"contestId":1525,"index":"B","name":"Permutation Sort","type":"PROGRAMMING","rating":900,"tags":["constructive algorithms","greedy"]},{"contestId":1523,"index":"B","name":"Lord of the Values","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms"]},{"contestId":1521,"index":"E","name":"Nastia and a Beautiful Matrix","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["binary search","constructive algorithms","dp","greedy"]},{"contestId":1521,"index":"D","name":"Nastia Plays with a Tree","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"contestId":1521,"index":"C","name":"Nastia and a Hidden Permutation","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","interactive"]},{"contestId":1521,"index":"B","name":"Nastia and a Good Array","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","math","number theory"]},{"contestId":1521,"index":"A","name":"Nastia and Nearly Good Numbers","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","math","number theory"]},{"contestId":1520,"index":"F2","name":"Guess the K-th Zero (Hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","constructive algorithms","data structures","interactive"]},{"contestId":1520,"index":"C","name":"Not Adjacent Matrix","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms"]},{"contestId":1519,"index":"E","name":"Off by One","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","dfs and similar","geometry","graphs","sortings","trees"]},{"contestId":1517,"index":"G","name":"Starry Night Camping","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["constructive algorithms","flows","graphs"]},{"contestId":1517,"index":"C","name":"Fillomino 2","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","dfs and similar","greedy","implementation"]},{"contestId":1517,"index":"B","name":"Morning Jogging","type":"PROGRAMMING","points":1250.0,"rating":1200,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":1516,"index":"C","name":"Baby Ehab Partitions Again","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["bitmasks","constructive algorithms","dp","math"]},{"contestId":1515,"index":"F","name":"Phoenix and Earthquake","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1515,"index":"C","name":"Phoenix and Towers","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1515,"index":"A","name":"Phoenix and Gold","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy","math"]},{"contestId":1513,"index":"F","name":"Swapping Problem","type":"PROGRAMMING","points":3500.0,"rating":2500,"tags":["brute force","constructive algorithms","data structures","sortings"]},{"contestId":1513,"index":"E","name":"Cost Equilibrium","type":"PROGRAMMING","points":2750.0,"rating":2300,"tags":["combinatorics","constructive algorithms","math","sortings"]},{"contestId":1513,"index":"D","name":"GCD and MST","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dsu","graphs","greedy","number theory","sortings"]},{"contestId":1513,"index":"B","name":"AND Sequences","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["bitmasks","combinatorics","constructive algorithms","math"]},{"contestId":1513,"index":"A","name":"Array and Peaks","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":1512,"index":"D","name":"Corrupted Array","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1512,"index":"C","name":"A-B Palindrome","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","implementation","strings"]},{"contestId":1511,"index":"D","name":"Min Cost String","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","graphs","greedy","strings"]},{"contestId":1511,"index":"B","name":"GCD Length","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","math","number theory"]},{"contestId":1510,"index":"J","name":"Japanese Game","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","math"]},{"contestId":1509,"index":"A","name":"Average Height","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms"]},{"contestId":1508,"index":"E","name":"Tree Calendar","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["brute force","constructive algorithms","data structures","dfs and similar","sortings","trees"]},{"contestId":1508,"index":"D","name":"Swap Pass","type":"PROGRAMMING","points":2250.0,"rating":3000,"tags":["constructive algorithms","geometry","sortings"]},{"contestId":1508,"index":"B","name":"Almost Sorted","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","combinatorics","constructive algorithms","implementation"]},{"contestId":1508,"index":"A","name":"Binary Literature","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["constructive algorithms","greedy","implementation","strings","two pointers"]},{"contestId":1506,"index":"F","name":"Triangular Paths","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","graphs","math","shortest paths","sortings"]},{"contestId":1506,"index":"E","name":"Restoring the Permutation","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":1506,"index":"D","name":"Epic Transformation","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1504,"index":"B","name":"Flip the Bits","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1504,"index":"A","name":" Déjà Vu","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","strings"]},{"contestId":1503,"index":"F","name":"Balance the Cards","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation"]},{"contestId":1503,"index":"D","name":"Flip the Cards","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["2-sat","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"contestId":1503,"index":"B","name":"3-Coloring","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","games","interactive"]},{"contestId":1503,"index":"A","name":"Balance the Bits","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":1500,"index":"C","name":"Matrix Sorting","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["bitmasks","brute force","constructive algorithms","greedy","two pointers"]},{"contestId":1499,"index":"A","name":"Domino on Windowsill","type":"PROGRAMMING","rating":800,"tags":["combinatorics","constructive algorithms","math"]},{"contestId":1497,"index":"C2","name":"k-LCM (hard version)","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","math"]},{"contestId":1497,"index":"C1","name":"k-LCM (easy version)","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","math"]},{"contestId":1497,"index":"B","name":"M-arrays","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","greedy","math"]},{"contestId":1496,"index":"A","name":"Split it!","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["brute force","constructive algorithms","greedy","strings"]},{"contestId":1495,"index":"F","name":"Squares","type":"PROGRAMMING","points":3250.0,"rating":3300,"tags":["constructive algorithms","data structures","dp","graphs","trees"]},{"contestId":1495,"index":"C","name":"Garden of the Sun","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","graphs"]},{"contestId":1494,"index":"F","name":"Delete The Edges","type":"PROGRAMMING","rating":2900,"tags":["brute force","constructive algorithms","dfs and similar","graphs","implementation"]},{"contestId":1494,"index":"E","name":"A-Z Graph","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","data structures","graphs","hashing"]},{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"contestId":1493,"index":"E","name":"Enormous XOR","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["bitmasks","constructive algorithms","greedy","math","strings","two pointers"]},{"contestId":1493,"index":"C","name":"K-beautiful Strings","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["binary search","brute force","constructive algorithms","greedy","strings"]},{"contestId":1493,"index":"A","name":"Anti-knapsack","type":"PROGRAMMING","points":750.0,"rating":800,"tags":["constructive algorithms","greedy"]},{"contestId":1492,"index":"E","name":"Almost Fault-Tolerant Database","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","greedy","implementation"]},{"contestId":1492,"index":"D","name":"Genius\u0027s Gambit","type":"PROGRAMMING","points":2250.0,"rating":1900,"tags":["bitmasks","constructive algorithms","greedy","math"]},{"contestId":1491,"index":"G","name":"Switch and Flip","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["constructive algorithms","graphs","math"]},{"contestId":1491,"index":"F","name":"Magnets","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["binary search","constructive algorithms","interactive"]},{"contestId":1491,"index":"D","name":"Zookeeper and The Infinite Zoo","type":"PROGRAMMING","points":1250.0,"rating":1800,"tags":["bitmasks","constructive algorithms","dp","greedy","math"]},{"contestId":1490,"index":"B","name":"Balanced Remainders","type":"PROGRAMMING","rating":1000,"tags":["brute force","constructive algorithms","math"]},{"contestId":1487,"index":"C","name":"Minimum Ties","type":"PROGRAMMING","rating":1500,"tags":["brute force","constructive algorithms","dfs and similar","graphs","greedy","implementation","math"]},{"contestId":1486,"index":"E","name":"Paired Payment","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["binary search","brute force","constructive algorithms","dp","flows","graphs","shortest paths"]},{"contestId":1485,"index":"D","name":"Multiples and Power Differences","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["constructive algorithms","graphs","math","number theory"]},{"contestId":1482,"index":"C","name":"Basic Diplomacy","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy","implementation"]},{"contestId":1481,"index":"D","name":"AB Graph","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["brute force","constructive algorithms","graphs","greedy","implementation"]},{"contestId":1481,"index":"C","name":"Fence Painting","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy"]},{"contestId":1479,"index":"C","name":"Continuous City","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["bitmasks","constructive algorithms"]},{"contestId":1479,"index":"B2","name":"Painting the Array II","type":"PROGRAMMING","points":750.0,"rating":2100,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1479,"index":"B1","name":"Painting the Array I","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1477,"index":"D","name":"Nezzar and Hidden Permutations","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":1477,"index":"C","name":"Nezzar and Nice Beatmap","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","geometry","greedy","math","sortings"]},{"contestId":1477,"index":"A","name":"Nezzar and Board","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","math","number theory"]},{"contestId":1476,"index":"A","name":"K-divisible Sum","type":"PROGRAMMING","rating":1000,"tags":["binary search","constructive algorithms","greedy","math"]},{"contestId":1475,"index":"F","name":"Unusual Matrix","type":"PROGRAMMING","rating":1900,"tags":["2-sat","brute force","constructive algorithms"]},{"contestId":1474,"index":"E","name":"What Is It?","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["constructive algorithms","greedy"]},{"contestId":1474,"index":"C","name":"Array Destruction","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["brute force","constructive algorithms","data structures","greedy","implementation","sortings"]},{"contestId":1474,"index":"B","name":"Different Divisors","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["binary search","constructive algorithms","greedy","math","number theory"]},{"contestId":1473,"index":"C","name":"No More Inversions","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","math"]},{"contestId":1470,"index":"D","name":"Strange Housing","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","graph matchings","graphs","greedy"]},{"contestId":1470,"index":"C","name":"Strange Shuffle","type":"PROGRAMMING","points":1000.0,"rating":2500,"tags":["binary search","brute force","constructive algorithms","interactive"]},{"contestId":1469,"index":"D","name":"Ceil Divisions","type":"PROGRAMMING","rating":1700,"tags":["brute force","constructive algorithms","math","number theory"]},{"contestId":1469,"index":"A","name":"Regular Bracket Sequence","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","greedy"]},{"contestId":1468,"index":"H","name":"K and Medians","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy","math"]},{"contestId":1467,"index":"C","name":"Three Bags","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","greedy"]},{"contestId":1467,"index":"A","name":"Wizard of Orz","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["constructive algorithms","greedy","math"]},{"contestId":1463,"index":"E","name":"Plan of Lectures","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation","sortings","trees"]},{"contestId":1463,"index":"D","name":"Pairs","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","greedy","two pointers"]},{"contestId":1463,"index":"B","name":"Find The Array","type":"PROGRAMMING","rating":1400,"tags":["bitmasks","constructive algorithms","greedy"]},{"contestId":1461,"index":"F","name":"Mathematical Expression","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1461,"index":"A","name":"String Generation","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy"]},{"contestId":1455,"index":"E","name":"Four Points","type":"PROGRAMMING","rating":2400,"tags":["brute force","constructive algorithms","flows","geometry","greedy","implementation","math","ternary search"]},{"contestId":1455,"index":"C","name":"Ping-pong","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","games","math"]},{"contestId":1455,"index":"B","name":"Jumps","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","math"]},{"contestId":1454,"index":"D","name":"Number into Sequence","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","math","number theory"]},{"contestId":1454,"index":"A","name":"Special Permutation","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","probabilities"]},{"contestId":1453,"index":"D","name":"Checkpoints","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","constructive algorithms","greedy","math","probabilities"]},{"contestId":1453,"index":"B","name":"Suffix Operations","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":1452,"index":"F","name":"Divide Powers","type":"PROGRAMMING","rating":2900,"tags":["constructive algorithms","greedy"]},{"contestId":1451,"index":"F","name":"Nullify The Matrix","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["constructive algorithms","games"]},{"contestId":1451,"index":"E2","name":"Bitwise Queries (Hard Version)","type":"PROGRAMMING","points":1000.0,"rating":2300,"tags":["bitmasks","constructive algorithms","interactive","math"]},{"contestId":1451,"index":"E1","name":"Bitwise Queries (Easy Version)","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["bitmasks","constructive algorithms","interactive","math"]},{"contestId":1450,"index":"F","name":"The Struggling Contestant","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["constructive algorithms","greedy"]},{"contestId":1450,"index":"E","name":"Capitalism","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","shortest paths"]},{"contestId":1450,"index":"C2","name":"Errich-Tac-Toe (Hard Version)","type":"PROGRAMMING","points":750.0,"rating":2300,"tags":["constructive algorithms","math"]},{"contestId":1450,"index":"C1","name":"Errich-Tac-Toe (Easy Version)","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["constructive algorithms","math"]},{"contestId":1450,"index":"A","name":"Avoid Trygub","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","sortings"]},{"contestId":1447,"index":"A","name":"Add Candies","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1446,"index":"E","name":"Long Recovery","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["constructive algorithms","dfs and similar"]},{"contestId":1446,"index":"A","name":"Knapsack","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":1444,"index":"D","name":"Rectangular Polyline","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["constructive algorithms","dp","geometry"]},{"contestId":1443,"index":"A","name":"Kids Seating","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1442,"index":"E","name":"Black, White and Grey Tree","type":"PROGRAMMING","points":1750.0,"rating":3000,"tags":["binary search","constructive algorithms","dfs and similar","dp","greedy","trees"]},{"contestId":1442,"index":"A","name":"Extreme Subtraction","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1439,"index":"B","name":"Graph Subset Problem","type":"PROGRAMMING","points":1250.0,"rating":2600,"tags":["constructive algorithms","data structures","graphs"]},{"contestId":1439,"index":"A2","name":"Binary Table (Hard Version)","type":"PROGRAMMING","points":500.0,"rating":1900,"tags":["constructive algorithms","graphs","greedy","implementation"]},{"contestId":1439,"index":"A1","name":"Binary Table (Easy Version)","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":1438,"index":"E","name":"Yurii Can Do Everything","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["binary search","bitmasks","brute force","constructive algorithms","divide and conquer","two pointers"]},{"contestId":1438,"index":"D","name":"Powerful Ksenia","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["bitmasks","constructive algorithms","math"]},{"contestId":1438,"index":"C","name":"Engineer Artem","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["2-sat","chinese remainder theorem","constructive algorithms","fft","flows"]},{"contestId":1438,"index":"B","name":"Valerii Against Everyone","type":"PROGRAMMING","points":750.0,"rating":1000,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1438,"index":"A","name":"Specific Tastes of Andre ","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":1437,"index":"E","name":"Make It Increasing","type":"PROGRAMMING","rating":2200,"tags":["binary search","constructive algorithms","data structures","dp","implementation"]},{"contestId":1437,"index":"B","name":"Reverse Binary Strings","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","greedy"]},{"contestId":1437,"index":"A","name":"Marketing Scheme","type":"PROGRAMMING","rating":800,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":1436,"index":"B","name":"Prime Square","type":"PROGRAMMING","points":1000.0,"rating":900,"tags":["constructive algorithms","math"]},{"contestId":1433,"index":"D","name":"Districts Connection","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","dfs and similar"]},{"contestId":1433,"index":"C","name":"Dominant Piranha","type":"PROGRAMMING","rating":900,"tags":["constructive algorithms","greedy"]},{"contestId":1430,"index":"C","name":"Numbers on Whiteboard","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","data structures","greedy","implementation","math"]},{"contestId":1430,"index":"A","name":"Number of Apartments","type":"PROGRAMMING","rating":900,"tags":["brute force","constructive algorithms","math"]},{"contestId":1428,"index":"D","name":"Bouncing Boomerangs","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1427,"index":"E","name":"Xum","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["bitmasks","constructive algorithms","math","matrices","number theory"]},{"contestId":1427,"index":"D","name":"Unshuffling a Deck","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","implementation"]},{"contestId":1426,"index":"E","name":"Rock, Paper, Scissors","type":"PROGRAMMING","rating":1800,"tags":["brute force","constructive algorithms","flows","greedy","math"]},{"contestId":1426,"index":"D","name":"Non-zero Segments","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1426,"index":"C","name":"Increase and Copy","type":"PROGRAMMING","rating":1100,"tags":["binary search","constructive algorithms","math"]},{"contestId":1425,"index":"H","name":"Huge Boxes of Animal Toys","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms"]},{"contestId":1423,"index":"J","name":"Bubble Cup hypothesis","type":"PROGRAMMING","rating":2400,"tags":["bitmasks","constructive algorithms","dp","math"]},{"contestId":1421,"index":"D","name":"Hexagons","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","constructive algorithms","greedy","implementation","math","shortest paths"]},{"contestId":1421,"index":"C","name":"Palindromifier","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","strings"]},{"contestId":1421,"index":"B","name":"Putting Bricks in the Wall","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","implementation"]},{"contestId":1420,"index":"C1","name":"Pokémon Army (easy version)","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1419,"index":"E","name":"Decryption","type":"PROGRAMMING","points":2250.0,"rating":2100,"tags":["constructive algorithms","implementation","math","number theory"]},{"contestId":1419,"index":"D2","name":"Sage\u0027s Birthday (hard version)","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["binary search","brute force","constructive algorithms","greedy","sortings","two pointers"]},{"contestId":1419,"index":"D1","name":"Sage\u0027s Birthday (easy version)","type":"PROGRAMMING","points":750.0,"rating":1000,"tags":["binary search","constructive algorithms","greedy","sortings"]},{"contestId":1419,"index":"B","name":"Stairs","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["brute force","constructive algorithms","greedy","implementation","math"]},{"contestId":1416,"index":"B","name":"Make Them Equal","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","greedy","math"]},{"contestId":1415,"index":"E","name":"New Game Plus!","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["constructive algorithms","greedy","math"]},{"contestId":1415,"index":"D","name":"XOR-gun","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["bitmasks","brute force","constructive algorithms"]},{"contestId":1413,"index":"A","name":"Finding Sasuke","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1408,"index":"F","name":"Two Different","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1408,"index":"B","name":"Arrays Sum","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","greedy","math"]},{"contestId":1408,"index":"A","name":"Circle Coloring","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms"]},{"contestId":1407,"index":"E","name":"Egor in the Republic of Dagestan","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},{"contestId":1407,"index":"C","name":"Chocolate Bunny","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","interactive","math","two pointers"]},{"contestId":1407,"index":"A","name":"Ahahahahahahahaha","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","math"]},{"contestId":1406,"index":"D","name":"Three Sequences","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":1406,"index":"C","name":"Link Cut Centroids","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":1405,"index":"B","name":"Array Cancellation","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","implementation"]},{"contestId":1405,"index":"A","name":"Permutation Forgery","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms"]},{"contestId":1404,"index":"D","name":"Game of Pairs","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["constructive algorithms","dfs and similar","interactive","math","number theory"]},{"contestId":1404,"index":"C","name":"Fixed Point Removal","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},{"contestId":1401,"index":"C","name":"Mere Array","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["constructive algorithms","math","number theory","sortings"]},{"contestId":1401,"index":"B","name":"Ternary Sequence","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","greedy","math"]},{"contestId":1401,"index":"A","name":"Distance and Axis","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["constructive algorithms","math"]},{"contestId":1400,"index":"C","name":"Binary String Reconstruction","type":"PROGRAMMING","rating":1500,"tags":["2-sat","brute force","constructive algorithms","greedy"]},{"contestId":1400,"index":"A","name":"String Similarity","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","strings"]},{"contestId":1399,"index":"D","name":"Binary String To Subsequences","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1396,"index":"E","name":"Distance Matching","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":1396,"index":"B","name":"Stoned Game","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["brute force","constructive algorithms","games","greedy"]},{"contestId":1396,"index":"A","name":"Multiples of Length","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","greedy","number theory"]},{"contestId":1395,"index":"B","name":"Boboniu Plays Chess","type":"PROGRAMMING","points":750.0,"rating":1100,"tags":["constructive algorithms"]},{"contestId":1393,"index":"C","name":"Pinkie Pie Eats Patty-cakes","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","greedy","math","sortings"]},{"contestId":1393,"index":"B","name":"Applejack and Storages","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1392,"index":"F","name":"Omkar and Landslide","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","constructive algorithms","data structures","greedy","math"]},{"contestId":1392,"index":"E","name":"Omkar and Duck","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["bitmasks","constructive algorithms","interactive","math"]},{"contestId":1391,"index":"E","name":"Pairs of Pairs","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1391,"index":"D","name":"505","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["bitmasks","brute force","constructive algorithms","dp","greedy","implementation"]},{"contestId":1391,"index":"A","name":"Suborrays","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1389,"index":"A","name":"LCM Problem","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy","math","number theory"]},{"contestId":1386,"index":"A","name":"Colors","type":"PROGRAMMING","rating":2700,"tags":["*special","binary search","constructive algorithms","interactive"]},{"contestId":1385,"index":"E","name":"Directing Edges","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":1384,"index":"B2","name":"Koa and the Beach (Hard Version)","type":"PROGRAMMING","points":750.0,"rating":2200,"tags":["constructive algorithms","dp","greedy","implementation"]},{"contestId":1384,"index":"A","name":"Common Prefixes","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","strings"]},{"contestId":1383,"index":"D","name":"Rearrange","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["brute force","constructive algorithms","graphs","greedy","sortings"]},{"contestId":1383,"index":"B","name":"GameGame","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["bitmasks","constructive algorithms","dp","games","greedy","math"]},{"contestId":1381,"index":"C","name":"Mastermind","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms","graph matchings","greedy","implementation","sortings","two pointers"]},{"contestId":1381,"index":"A2","name":"Prefix Flip (Hard Version)","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","data structures","implementation","strings","two pointers"]},{"contestId":1381,"index":"A1","name":"Prefix Flip (Easy Version)","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","data structures","strings"]},{"contestId":1380,"index":"D","name":"Berserk And Fireball","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","greedy","implementation","math","two pointers"]},{"contestId":1379,"index":"E","name":"Inverse Genealogy","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms","divide and conquer","dp","math","trees"]},{"contestId":1375,"index":"H","name":"Set Merging","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1375,"index":"G","name":"Tree Modification","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["brute force","constructive algorithms","dfs and similar","graph matchings","graphs","trees"]},{"contestId":1375,"index":"F","name":"Integer Game","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["constructive algorithms","games","interactive","math"]},{"contestId":1375,"index":"E","name":"Inversion SwapSort","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":1375,"index":"D","name":"Replace by MEX","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["brute force","constructive algorithms","sortings"]},{"contestId":1375,"index":"C","name":"Element Extermination","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1375,"index":"B","name":"Neighbor Grid","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","greedy"]},{"contestId":1375,"index":"A","name":"Sign Flipping","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","math"]},{"contestId":1374,"index":"F","name":"Cyclic Shifts Sorting","type":"PROGRAMMING","rating":2400,"tags":["brute force","constructive algorithms","implementation","sortings"]},{"contestId":1373,"index":"F","name":"Network Coverage","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1373,"index":"E","name":"Sum of Digits","type":"PROGRAMMING","rating":2200,"tags":["brute force","constructive algorithms","dp","greedy"]},{"contestId":1372,"index":"C","name":"Omkar and Baseball","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","math"]},{"contestId":1372,"index":"A","name":"Omkar and Completion","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":1371,"index":"D","name":"Grid-00100","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1370,"index":"E","name":"Binary Subsequence Rotation","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1370,"index":"B","name":"GCD Compression","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","math","number theory"]},{"contestId":1368,"index":"E","name":"Ski Accidents","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","graphs","greedy"]},{"contestId":1368,"index":"C","name":"Even Picture","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms"]},{"contestId":1368,"index":"B","name":"Codeforces Subsequences","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["brute force","constructive algorithms","greedy","math","strings"]},{"contestId":1367,"index":"D","name":"Task On The Board","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","implementation","sortings"]},{"contestId":1367,"index":"C","name":"Social Distance","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","greedy","math"]},{"contestId":1366,"index":"E","name":"Two Arrays","type":"PROGRAMMING","rating":2100,"tags":["binary search","brute force","combinatorics","constructive algorithms","dp","two pointers"]},{"contestId":1366,"index":"D","name":"Two Divisors","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","math","number theory"]},{"contestId":1365,"index":"G","name":"Secure Password","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["bitmasks","combinatorics","constructive algorithms","interactive","math"]},{"contestId":1365,"index":"F","name":"Swaps Again","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["constructive algorithms","implementation","sortings"]},{"contestId":1365,"index":"E","name":"Maximum Subsequence Value","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","constructive algorithms"]},{"contestId":1365,"index":"D","name":"Solve The Maze","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","shortest paths"]},{"contestId":1365,"index":"C","name":"Rotation Matching","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1365,"index":"B","name":"Trouble Sort","type":"PROGRAMMING","points":750.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":1364,"index":"E","name":"X-OR","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","interactive","probabilities"]},{"contestId":1364,"index":"D","name":"Ehab\u0027s Last Corollary","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","graphs","greedy","implementation","trees"]},{"contestId":1364,"index":"C","name":"Ehab and Prefix MEXs","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy"]},{"contestId":1361,"index":"C","name":"Johnny and Megan\u0027s Necklace","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":1361,"index":"A","name":"Johnny and Contribution","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","graphs","greedy","sortings"]},{"contestId":1360,"index":"H","name":"Binary Median","type":"PROGRAMMING","rating":2100,"tags":["binary search","bitmasks","brute force","constructive algorithms"]},{"contestId":1360,"index":"G","name":"A/B Matrix","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","greedy","math"]},{"contestId":1360,"index":"F","name":"Spy-string","type":"PROGRAMMING","rating":1700,"tags":["bitmasks","brute force","constructive algorithms","dp","hashing","strings"]},{"contestId":1360,"index":"C","name":"Similar Pairs","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","graph matchings","greedy","sortings"]},{"contestId":1358,"index":"F","name":"Tasty Cookie","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["binary search","constructive algorithms","greedy","implementation"]},{"contestId":1358,"index":"E","name":"Are You Fired?","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1355,"index":"F","name":"Guess Divisors Count","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["constructive algorithms","interactive","number theory"]},{"contestId":1355,"index":"D","name":"Game With Array","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","math"]},{"contestId":1354,"index":"F","name":"Summoning Minions","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","dp","flows","graph matchings","greedy","sortings"]},{"contestId":1353,"index":"D","name":"Constructing the Array","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","data structures","sortings"]},{"contestId":1353,"index":"A","name":"Most Unstable Array","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","greedy","math"]},{"contestId":1352,"index":"G","name":"Special Permutation","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms"]},{"contestId":1352,"index":"F","name":"Binary String Reconstruction","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","dfs and similar","math"]},{"contestId":1352,"index":"B","name":"Same Parity Summands","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","math"]},{"contestId":1349,"index":"E","name":"Slime and Hats","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1349,"index":"B","name":"Orac and Medians","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["constructive algorithms","greedy","math"]},{"contestId":1348,"index":"D","name":"Phoenix and Science","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","constructive algorithms","greedy","implementation","math"]},{"contestId":1348,"index":"C","name":"Phoenix and Distribution","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","greedy","sortings","strings"]},{"contestId":1348,"index":"B","name":"Phoenix and Beauty","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1344,"index":"B","name":"Monopole Magnets","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":1343,"index":"F","name":"Restore the Permutation by Sorted Segments","type":"PROGRAMMING","rating":2400,"tags":["brute force","constructive algorithms","data structures","greedy","implementation"]},{"contestId":1343,"index":"B","name":"Balanced Array","type":"PROGRAMMING","rating":800,"tags":["constructive algorithms","math"]},{"contestId":1342,"index":"D","name":"Multiple Testcases","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"contestId":1342,"index":"B","name":"Binary Period","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","strings"]},{"contestId":1340,"index":"D","name":"Nastya and Time Machine","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":1339,"index":"B","name":"Sorted Adjacent Differences","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","sortings"]},{"contestId":1338,"index":"D","name":"Nested Rubber Bands","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","dp","math","trees"]},{"contestId":1338,"index":"C","name":"Perfect Triples","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["bitmasks","brute force","constructive algorithms","divide and conquer","math"]},{"contestId":1338,"index":"B","name":"Edge Weight Assignment","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["bitmasks","constructive algorithms","dfs and similar","greedy","math","trees"]},{"contestId":1337,"index":"A","name":"Ichihime and Triangle","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1336,"index":"D","name":"Yui and Mahjong Set","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["constructive algorithms","interactive"]},{"contestId":1335,"index":"D","name":"Anti-Sudoku","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":1335,"index":"B","name":"Construct the String","type":"PROGRAMMING","rating":900,"tags":["constructive algorithms"]},{"contestId":1334,"index":"D","name":"Minimum Euler Cycle","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","graphs","greedy","implementation"]},{"contestId":1334,"index":"C","name":"Circle of Monsters","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":1333,"index":"E","name":"Road to 1600","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["brute force","constructive algorithms"]},{"contestId":1333,"index":"D","name":"Challenges in school №41","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["brute force","constructive algorithms","games","graphs","greedy","implementation","sortings"]},{"contestId":1333,"index":"A","name":"Little Artem","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms"]},{"contestId":1332,"index":"E","name":"Height All the Same","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["combinatorics","constructive algorithms","math","matrices"]},{"contestId":1332,"index":"D","name":"Walk on Matrix","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["bitmasks","constructive algorithms","math"]},{"contestId":1332,"index":"B","name":"Composite Coloring","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["brute force","constructive algorithms","greedy","math","number theory"]},{"contestId":1329,"index":"D","name":"Dreamoon Likes Strings","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["constructive algorithms","data structures"]},{"contestId":1329,"index":"C","name":"Drazil Likes Heap","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1329,"index":"A","name":"Dreamoon Likes Coloring","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1328,"index":"D","name":"Carousel","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","dp","graphs","greedy","math"]},{"contestId":1327,"index":"C","name":"Game with Chips","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","implementation"]},{"contestId":1326,"index":"A","name":"Bad Ugly Numbers","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","number theory"]},{"contestId":1325,"index":"F","name":"Ehab\u0027s Last Theorem","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"contestId":1325,"index":"D","name":"Ehab the Xorcist","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["bitmasks","constructive algorithms","greedy","number theory"]},{"contestId":1325,"index":"C","name":"Ehab and Path-etic MEXs","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1325,"index":"A","name":"EhAb AnD gCd","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy","number theory"]},{"contestId":1322,"index":"B","name":"Present","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["binary search","bitmasks","constructive algorithms","data structures","math","sortings"]},{"contestId":1321,"index":"C","name":"Remove Adjacent","type":"PROGRAMMING","points":1250.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy","strings"]},{"contestId":1316,"index":"D","name":"Nash Matrix","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","implementation"]},{"contestId":1316,"index":"C","name":"Primitive Primes","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","math","ternary search"]},{"contestId":1316,"index":"B","name":"String Modification","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["brute force","constructive algorithms","implementation","sortings","strings"]},{"contestId":1313,"index":"B","name":"Different Rules","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1312,"index":"B","name":"Bogosort","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","sortings"]},{"contestId":1311,"index":"E","name":"Construct the Binary Tree","type":"PROGRAMMING","rating":2200,"tags":["brute force","constructive algorithms","trees"]},{"contestId":1305,"index":"E","name":"Kuroni and the Score Distribution","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1305,"index":"D","name":"Kuroni and the Celebration","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["constructive algorithms","dfs and similar","interactive","trees"]},{"contestId":1305,"index":"B","name":"Kuroni and Simple Strings","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy","strings","two pointers"]},{"contestId":1305,"index":"A","name":"Kuroni and the Gifts","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","constructive algorithms","greedy","sortings"]},{"contestId":1304,"index":"D","name":"Shortest and Longest LIS","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["constructive algorithms","graphs","greedy","two pointers"]},{"contestId":1304,"index":"B","name":"Longest Palindrome","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["brute force","constructive algorithms","greedy","implementation","strings"]},{"contestId":1302,"index":"B","name":"DAG","type":"PROGRAMMING","tags":["constructive algorithms"]},{"contestId":1301,"index":"D","name":"Time to Run","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":1296,"index":"F","name":"Berland Beauty","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms","dfs and similar","greedy","sortings","trees"]},{"contestId":1296,"index":"E1","name":"String Coloring (easy version)","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","dp","graphs","greedy","sortings"]},{"contestId":1292,"index":"E","name":"Rin and The Unknown Flower","type":"PROGRAMMING","points":2250.0,"rating":3500,"tags":["constructive algorithms","greedy","interactive","math"]},{"contestId":1292,"index":"B","name":"Aroma\u0027s Search","type":"PROGRAMMING","points":750.0,"rating":1700,"tags":["brute force","constructive algorithms","geometry","greedy","implementation"]},{"contestId":1290,"index":"D","name":"Coffee Varieties (hard version)","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["constructive algorithms","graphs","interactive"]},{"contestId":1290,"index":"B","name":"Irreducible Anagrams","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","constructive algorithms","data structures","strings","two pointers"]},{"contestId":1288,"index":"F","name":"Red-Blue Graph","type":"PROGRAMMING","rating":2900,"tags":["constructive algorithms","flows"]},{"contestId":1286,"index":"F","name":"Harry The Potter","type":"PROGRAMMING","points":2750.0,"rating":3100,"tags":["brute force","constructive algorithms","dp","fft","implementation","math"]},{"contestId":1286,"index":"C2","name":"Madhouse (Hard version)","type":"PROGRAMMING","points":1000.0,"rating":2800,"tags":["brute force","constructive algorithms","hashing","interactive","math"]},{"contestId":1286,"index":"C1","name":"Madhouse (Easy version)","type":"PROGRAMMING","points":750.0,"rating":2400,"tags":["brute force","constructive algorithms","interactive","math"]},{"contestId":1286,"index":"B","name":"Numbers on Tree","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","trees"]},{"contestId":1285,"index":"E","name":"Delete a Segment","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["brute force","constructive algorithms","data structures","dp","graphs","sortings","trees","two pointers"]},{"contestId":1283,"index":"F","name":"DIY Garland","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy","trees"]},{"contestId":1283,"index":"C","name":"Friends and Gifts","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","math"]},{"contestId":1282,"index":"E","name":"The Cake Is a Lie","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","data structures","dfs and similar","graphs"]},{"contestId":1282,"index":"D","name":"Enchanted Artifact","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","interactive","strings"]},{"contestId":1280,"index":"F","name":"Intergalactic Sliding Puzzle","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["combinatorics","constructive algorithms","math"]},{"contestId":1278,"index":"E","name":"Tests for problem D","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","dfs and similar","divide and conquer","trees"]},{"contestId":1276,"index":"E","name":"Four Stones","type":"PROGRAMMING","points":2250.0,"rating":3500,"tags":["constructive algorithms"]},{"contestId":1276,"index":"C","name":"Beautiful Rectangle","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["brute force","combinatorics","constructive algorithms","data structures","greedy","math"]},{"contestId":1272,"index":"B","name":"Snow Walking Robot","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1270,"index":"I","name":"Xor on Figures","type":"PROGRAMMING","points":4500.0,"rating":3500,"tags":["constructive algorithms","fft","math"]},{"contestId":1270,"index":"G","name":"Subset with Zero Sum","type":"PROGRAMMING","points":3750.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","math"]},{"contestId":1270,"index":"E","name":"Divide Points","type":"PROGRAMMING","points":2750.0,"rating":2300,"tags":["constructive algorithms","geometry","math"]},{"contestId":1270,"index":"D","name":"Strange Device","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","interactive","math","sortings"]},{"contestId":1270,"index":"C","name":"Make Good","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["bitmasks","constructive algorithms","math"]},{"contestId":1270,"index":"B","name":"Interesting Subarray","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy","math"]},{"contestId":1268,"index":"A","name":"Long Beautiful Integer","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","greedy","implementation","strings"]},{"contestId":1267,"index":"L","name":"Lexicography","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","strings"]},{"contestId":1267,"index":"I","name":"Intriguing Selection","type":"PROGRAMMING","rating":2600,"tags":["brute force","constructive algorithms","implementation","interactive","sortings"]},{"contestId":1267,"index":"H","name":"Help BerLine","type":"PROGRAMMING","rating":3200,"tags":["constructive algorithms"]},{"contestId":1267,"index":"D","name":"DevOps Best Practices","type":"PROGRAMMING","rating":2800,"tags":["constructive algorithms"]},{"contestId":1267,"index":"C","name":"Cactus Revenge","type":"PROGRAMMING","rating":3500,"tags":["constructive algorithms"]},{"contestId":1266,"index":"D","name":"Decreasing Debts","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","data structures","graphs","greedy","implementation","math","two pointers"]},{"contestId":1266,"index":"C","name":"Diverse Matrix","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["constructive algorithms","greedy","math","number theory"]},{"contestId":1266,"index":"B","name":"Dice Tower","type":"PROGRAMMING","points":750.0,"rating":1000,"tags":["constructive algorithms","math"]},{"contestId":1265,"index":"A","name":"Beautiful String","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","greedy"]},{"contestId":1264,"index":"F","name":"Beautiful Fibonacci Problem","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["constructive algorithms","number theory"]},{"contestId":1264,"index":"E","name":"Beautiful League","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["constructive algorithms","flows","graph matchings"]},{"contestId":1264,"index":"B","name":"Beautiful Sequence","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["brute force","constructive algorithms","greedy"]},{"contestId":1256,"index":"F","name":"Equalizing Two Strings","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","sortings","strings"]},{"contestId":1255,"index":"C","name":"League of Leesins","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","implementation"]},{"contestId":1254,"index":"C","name":"Point Ordering","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","geometry","interactive","math"]},{"contestId":1254,"index":"B2","name":"Send Boxes to Alice (Hard Version)","type":"PROGRAMMING","points":750.0,"rating":2100,"tags":["constructive algorithms","greedy","math","number theory","ternary search","two pointers"]},{"contestId":1254,"index":"B1","name":"Send Boxes to Alice (Easy Version)","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","greedy","math","number theory","ternary search","two pointers"]},{"contestId":1254,"index":"A","name":"Feeding Chicken","type":"PROGRAMMING","points":750.0,"rating":1700,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1253,"index":"D","name":"Harmonious Graph","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","sortings"]},{"contestId":1250,"index":"M","name":"SmartGarden","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1250,"index":"B","name":"The Feast and the Bus","type":"PROGRAMMING","rating":1800,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":1245,"index":"B","name":"Restricted RPS","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1244,"index":"G","name":"Running in Pairs","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["constructive algorithms","greedy","math"]},{"contestId":1244,"index":"F","name":"Chips","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","implementation"]},{"contestId":1244,"index":"E","name":"Minimizing Difference","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["binary search","constructive algorithms","greedy","sortings","ternary search","two pointers"]},{"contestId":1244,"index":"D","name":"Paint the Tree","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["brute force","constructive algorithms","dp","graphs","implementation","trees"]},{"contestId":1242,"index":"E","name":"Planar Perimeter","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","graphs"]},{"contestId":1242,"index":"A","name":"Tile Painting","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","math","number theory"]},{"contestId":1237,"index":"H","name":"Balanced Reversals","type":"PROGRAMMING","points":4000.0,"rating":3300,"tags":["constructive algorithms"]},{"contestId":1237,"index":"C2","name":"Balanced Removals (Harder)","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["binary search","constructive algorithms","divide and conquer","greedy","implementation","sortings"]},{"contestId":1237,"index":"C1","name":"Balanced Removals (Easier)","type":"PROGRAMMING","points":750.0,"rating":1700,"tags":["constructive algorithms","geometry","greedy"]},{"contestId":1236,"index":"C","name":"Labs","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1231,"index":"E","name":"Middle-Out","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["constructive algorithms","greedy","strings"]},{"contestId":1228,"index":"F","name":"One Node is Gone","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["constructive algorithms","implementation","trees"]},{"contestId":1228,"index":"D","name":"Complete Tripartite","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["brute force","constructive algorithms","graphs","hashing","implementation"]},{"contestId":1227,"index":"G","name":"Not Same","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["constructive algorithms"]},{"contestId":1227,"index":"C","name":"Messy","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["constructive algorithms"]},{"contestId":1227,"index":"B","name":"Box","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms"]},{"contestId":1225,"index":"G","name":"To Make 1","type":"PROGRAMMING","points":3750.0,"rating":3100,"tags":["bitmasks","constructive algorithms","dp","greedy","number theory"]},{"contestId":1225,"index":"F","name":"Tree Factory","type":"PROGRAMMING","points":3250.0,"rating":2500,"tags":["constructive algorithms","greedy","trees"]},{"contestId":1221,"index":"B","name":"Knights","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","greedy"]},{"contestId":1218,"index":"G","name":"Alpha planetary system","type":"PROGRAMMING","rating":3000,"tags":["constructive algorithms","graphs","shortest paths"]},{"contestId":1217,"index":"D","name":"Coloring Edges","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":1215,"index":"C","name":"Swap Letters","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":1214,"index":"H","name":"Tiles Placement","type":"PROGRAMMING","points":3500.0,"rating":2800,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":1214,"index":"E","name":"Petya and Construction Set","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["constructive algorithms","graphs","math","sortings","trees"]},{"contestId":1213,"index":"E","name":"Two Small Strings","type":"PROGRAMMING","rating":1900,"tags":["brute force","constructive algorithms"]},{"contestId":1209,"index":"C","name":"Paint the Digits","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1208,"index":"C","name":"Magic Grid","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":1207,"index":"B","name":"Square Filling","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1205,"index":"F","name":"Beauty of a Permutation","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["constructive algorithms","math"]},{"contestId":1205,"index":"D","name":"Almost All","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","trees"]},{"contestId":1205,"index":"A","name":"Almost Equal","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","math"]},{"contestId":1202,"index":"D","name":"Print a 1337-string...","type":"PROGRAMMING","rating":1900,"tags":["combinatorics","constructive algorithms","math","strings"]},{"contestId":1198,"index":"C","name":"Matching vs  Independent Set","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["constructive algorithms","graphs","greedy","sortings"]},{"contestId":1196,"index":"F","name":"K-th Path","type":"PROGRAMMING","rating":2200,"tags":["brute force","constructive algorithms","shortest paths","sortings"]},{"contestId":1196,"index":"E","name":"Connected Component on a Chessboard","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","implementation"]},{"contestId":1196,"index":"B","name":"Odd Sum Segments","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","math"]},{"contestId":1196,"index":"A","name":"Three Piles of Candies","type":"PROGRAMMING","rating":800,"tags":["brute force","constructive algorithms","math"]},{"contestId":1193,"index":"C","name":"Scissors and Tape","type":"PROGRAMMING","tags":["*special","constructive algorithms","geometry"]},{"contestId":1188,"index":"A2","name":"Add on a Tree: Revolution","type":"PROGRAMMING","points":750.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","implementation","trees"]},{"contestId":1187,"index":"C","name":"Vasya And Array","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1186,"index":"D","name":"Vus the Cossack and Numbers","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["constructive algorithms","greedy","math"]},{"contestId":1182,"index":"D","name":"Complete Mirror","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","dfs and similar","dp","hashing","implementation","trees"]},{"contestId":1179,"index":"B","name":"Tolik and His Uncle","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":1178,"index":"E","name":"Archaeology","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","constructive algorithms","greedy","strings"]},{"contestId":1178,"index":"D","name":"Prime Graph","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["constructive algorithms","greedy","math","number theory"]},{"contestId":1174,"index":"F","name":"Ehab and the Big Finale","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","divide and conquer","graphs","implementation","interactive","trees"]},{"contestId":1174,"index":"D","name":"Ehab and the Expected XOR Problem","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["bitmasks","constructive algorithms"]},{"contestId":1174,"index":"C","name":"Ehab and a Special Coloring Problem","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["constructive algorithms","number theory"]},{"contestId":1174,"index":"A","name":"Ehab Fails to Be Thanos","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":1173,"index":"B","name":"Nauuo and Chess","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","greedy"]},{"contestId":1172,"index":"D","name":"Nauuo and Portals","type":"PROGRAMMING","points":1750.0,"rating":2900,"tags":["constructive algorithms"]},{"contestId":1170,"index":"H","name":"Longest Saw","type":"PROGRAMMING","tags":["*special","constructive algorithms"]},{"contestId":1168,"index":"E","name":"Xor Permutations","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["constructive algorithms","math"]},{"contestId":1167,"index":"D","name":"Bicolored RBS","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":1166,"index":"E","name":"The LCMs Must be Large","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["bitmasks","brute force","constructive algorithms","math","number theory"]},{"contestId":1166,"index":"B","name":"All the Vowels Please","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","math","number theory"]},{"contestId":1163,"index":"E","name":"Magical Permutation","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["bitmasks","brute force","constructive algorithms","data structures","graphs","math"]},{"contestId":1158,"index":"D","name":"Winding polygonal line","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["constructive algorithms","geometry","greedy","math"]},{"contestId":1158,"index":"C","name":"Permutation recovery","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","math","sortings"]},{"contestId":1158,"index":"B","name":"The minimal unique substring","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["constructive algorithms","math","strings"]},{"contestId":1158,"index":"A","name":"The Party and Sweets","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["binary search","constructive algorithms","greedy","implementation","math","sortings","two pointers"]},{"contestId":1157,"index":"G","name":"Inverse of Rows and Columns","type":"PROGRAMMING","rating":2200,"tags":["brute force","constructive algorithms"]},{"contestId":1157,"index":"F","name":"Maximum Balanced Circle","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","dp","greedy","two pointers"]},{"contestId":1157,"index":"D","name":"N Problems During K Days","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","greedy","math"]},{"contestId":1153,"index":"B","name":"Serval and Toy Bricks","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy"]},{"contestId":1152,"index":"E","name":"Neko and Flashback","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":1152,"index":"B","name":"Neko Performs Cat Furrier Transform","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["bitmasks","constructive algorithms","dfs and similar","math"]},{"contestId":1151,"index":"C","name":"Problem for Nazar","type":"PROGRAMMING","points":1250.0,"rating":1800,"tags":["constructive algorithms","math"]},{"contestId":1151,"index":"B","name":"Dima and a Bad XOR","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["bitmasks","brute force","constructive algorithms","dp"]},{"contestId":1149,"index":"A","name":"Prefix Sum Primes","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","math","number theory"]},{"contestId":1148,"index":"G","name":"Gold Experience","type":"PROGRAMMING","points":4000.0,"rating":3300,"tags":["constructive algorithms","graphs","math","number theory","probabilities"]},{"contestId":1148,"index":"F","name":"Foo Fighters","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["bitmasks","constructive algorithms"]},{"contestId":1148,"index":"E","name":"Earth Wind and Fire","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["constructive algorithms","greedy","math","sortings","two pointers"]},{"contestId":1148,"index":"C","name":"Crazy Diamond","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","sortings"]},{"contestId":1144,"index":"D","name":"Equalize Them All","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","greedy"]},{"contestId":1144,"index":"C","name":"Two Shuffled Sequences","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","sortings"]},{"contestId":1141,"index":"G","name":"Privatization of Roads in Treeland","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1137,"index":"D","name":"Cooperative Game","type":"PROGRAMMING","points":2250.0,"rating":2400,"tags":["constructive algorithms","interactive","number theory"]},{"contestId":1136,"index":"C","name":"Nastya Is Transposing Matrices","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","sortings"]},{"contestId":1136,"index":"B","name":"Nastya Is Playing Computer Games","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","math"]},{"contestId":1133,"index":"F2","name":"Spanning Tree with One Fixed Degree","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy"]},{"contestId":1131,"index":"F","name":"Asya And Kittens","type":"PROGRAMMING","points":3000.0,"rating":1700,"tags":["constructive algorithms","dsu"]},{"contestId":1129,"index":"B","name":"Wrong Answer","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms"]},{"contestId":1120,"index":"B","name":"Once in a casino","type":"PROGRAMMING","points":1000.0,"rating":2700,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1119,"index":"G","name":"Get Ready for the Battle","type":"PROGRAMMING","points":3500.0,"rating":3100,"tags":["constructive algorithms","implementation"]},{"contestId":1119,"index":"C","name":"Ramesses and Corner Inversion","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1118,"index":"E","name":"Yet Another Ball Problem","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","implementation"]},{"contestId":1118,"index":"C","name":"Palindromic Matrix","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","implementation"]},{"contestId":1117,"index":"E","name":"Decypher the String","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","chinese remainder theorem","constructive algorithms","interactive","math"]},{"contestId":1114,"index":"B","name":"Yet Another Array Partitioning Task","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":1110,"index":"G","name":"Tree-Tac-Toe ","type":"PROGRAMMING","points":3500.0,"rating":3100,"tags":["constructive algorithms","games","trees"]},{"contestId":1110,"index":"E","name":"Magic Stones","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["constructive algorithms","math","sortings"]},{"contestId":1110,"index":"C","name":"Meaningless Operations","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","math","number theory"]},{"contestId":1109,"index":"B","name":"Sasha and One More Name","type":"PROGRAMMING","points":1250.0,"rating":1800,"tags":["constructive algorithms","hashing","strings"]},{"contestId":1108,"index":"D","name":"Diverse Garland","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","dp","greedy"]},{"contestId":1107,"index":"G","name":"Vasya and Maximum Profit","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","dp","dsu"]},{"contestId":1104,"index":"A","name":"Splitting into digits","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation","math"]},{"contestId":1103,"index":"C","name":"Johnny Solving","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs","math"]},{"contestId":1103,"index":"B","name":"Game with modulo","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["binary search","constructive algorithms","interactive"]},{"contestId":1103,"index":"A","name":"Grid game","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":1100,"index":"D","name":"Dasha and Chess","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms","games","interactive"]},{"contestId":1099,"index":"C","name":"Postcard","type":"PROGRAMMING","points":1250.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":1099,"index":"B","name":"Squares and Segments","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["binary search","constructive algorithms","math"]},{"contestId":1098,"index":"C","name":"Construct a tree","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1098,"index":"B","name":"Nice table","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":1098,"index":"A","name":"Sum in the tree","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1097,"index":"E","name":"Egor and an RPG game","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["constructive algorithms","greedy"]},{"contestId":1093,"index":"B","name":"Letters Rearranging","type":"PROGRAMMING","rating":900,"tags":["constructive algorithms","greedy","sortings","strings"]},{"contestId":1092,"index":"E","name":"Minimal Diameter Forest","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1091,"index":"F","name":"New Year and the Mallard Expedition","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["constructive algorithms","greedy"]},{"contestId":1091,"index":"B","name":"New Year and the Treasure Geolocation","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["brute force","constructive algorithms","greedy","implementation"]},{"contestId":1090,"index":"F","name":"How to Learn You Score","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms","interactive"]},{"contestId":1090,"index":"D","name":"Similar Arrays","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms"]},{"contestId":1090,"index":"C","name":"New Year Presents","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","data structures"]},{"contestId":1089,"index":"M","name":"Minegraphed","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","graphs"]},{"contestId":1089,"index":"E","name":"Easy Chess","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms"]},{"contestId":1088,"index":"D","name":"Ehab and another another xor problem","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["bitmasks","constructive algorithms","implementation","interactive"]},{"contestId":1088,"index":"C","name":"Ehab and a 2-operation task","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","greedy","math"]},{"contestId":1088,"index":"A","name":"Ehab and another construction problem","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","constructive algorithms"]},{"contestId":1085,"index":"D","name":"Minimum Diameter Tree","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","implementation","trees"]},{"contestId":1082,"index":"D","name":"Maximum Diameter Graph","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":1081,"index":"F","name":"Tricky Interactor","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["constructive algorithms","implementation","interactive"]},{"contestId":1081,"index":"E","name":"Missing Numbers","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["binary search","constructive algorithms","greedy","math","number theory"]},{"contestId":1081,"index":"B","name":"Farewell Party","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":1081,"index":"A","name":"Definite Game","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":1080,"index":"D","name":"Olya and magical square","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","implementation","math"]},{"contestId":1078,"index":"E","name":"Negative Time Summation","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["constructive algorithms"]},{"contestId":1070,"index":"M","name":"Algoland and Berland","type":"PROGRAMMING","rating":3000,"tags":["constructive algorithms","divide and conquer","geometry"]},{"contestId":1070,"index":"L","name":"Odd Federalization","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms"]},{"contestId":1068,"index":"C","name":"Colored Rooks","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","graphs"]},{"contestId":1067,"index":"C","name":"Knights","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms"]},{"contestId":1065,"index":"B","name":"Vasya and Isolated Vertices","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","graphs"]},{"contestId":1063,"index":"E","name":"Lasers and Mirrors","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["constructive algorithms","math"]},{"contestId":1063,"index":"C","name":"Dwarves, Hats and Extrasensory Abilities","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","constructive algorithms","geometry","interactive"]},{"contestId":1063,"index":"A","name":"Oh Those Palindromes","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","strings"]},{"contestId":1060,"index":"H","name":"Sophisticated Device","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["constructive algorithms"]},{"contestId":1059,"index":"C","name":"Sequence Transformation","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","math"]},{"contestId":1056,"index":"D","name":"Decorate Apple Tree","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","sortings","trees"]},{"contestId":1054,"index":"G","name":"New Road Network","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["constructive algorithms","greedy","math"]},{"contestId":1054,"index":"E","name":"Chips Puzzle","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","implementation","math"]},{"contestId":1054,"index":"C","name":"Candies Distribution","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":1053,"index":"E","name":"Euler tour","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["constructive algorithms","trees"]},{"contestId":1045,"index":"E","name":"Ancient civilizations","type":"PROGRAMMING","rating":3200,"tags":["constructive algorithms","geometry"]},{"contestId":1043,"index":"E","name":"Train Hard, Win Easy","type":"PROGRAMMING","points":2250.0,"rating":1900,"tags":["constructive algorithms","greedy","math","sortings"]},{"contestId":1043,"index":"C","name":"Smallest Word","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":1042,"index":"C","name":"Array Product","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","greedy","math"]},{"contestId":1041,"index":"E","name":"Tree Reconstruction","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["constructive algorithms","data structures","graphs","greedy"]},{"contestId":1039,"index":"A","name":"Timetable","type":"PROGRAMMING","points":750.0,"rating":2300,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":1038,"index":"B","name":"Non-Coprime Partition","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","math"]},{"contestId":1037,"index":"A","name":"Packets","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","greedy","math"]},{"contestId":1034,"index":"B","name":"Little C Loves 3 II","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["brute force","constructive algorithms","flows","graph matchings"]},{"contestId":1033,"index":"E","name":"Hidden Bipartite Graph","type":"PROGRAMMING","points":2750.0,"rating":2800,"tags":["binary search","constructive algorithms","dfs and similar","graphs","interactive"]},{"contestId":1032,"index":"C","name":"Playing Piano","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dp"]},{"contestId":1031,"index":"E","name":"Triple Flips","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["constructive algorithms"]},{"contestId":1028,"index":"E","name":"Restore Array","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms"]},{"contestId":1028,"index":"B","name":"Unnatural Conditions","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","math"]},{"contestId":1025,"index":"G","name":"Company Acquisitions","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["constructive algorithms","math"]},{"contestId":1025,"index":"E","name":"Colored Cubes","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["constructive algorithms","implementation","matrices"]},{"contestId":1025,"index":"C","name":"Plasticine zebra","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","implementation"]},{"contestId":1023,"index":"E","name":"Down or Right","type":"PROGRAMMING","points":2750.0,"rating":2100,"tags":["constructive algorithms","interactive","matrices"]},{"contestId":1023,"index":"D","name":"Array Restoration","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["constructive algorithms","data structures"]},{"contestId":1019,"index":"C","name":"Sergey\u0027s problem","type":"PROGRAMMING","points":1750.0,"rating":3000,"tags":["constructive algorithms","graphs"]},{"contestId":1017,"index":"C","name":"The Phone Number","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":1016,"index":"D","name":"Vasya And The Matrix","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","flows","math"]},{"contestId":1015,"index":"D","name":"Walking Between Houses","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":1012,"index":"D","name":"AB-Strings","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["constructive algorithms","strings"]},{"contestId":1012,"index":"B","name":"Chemical table","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["constructive algorithms","dfs and similar","dsu","graphs","matrices"]},{"contestId":1009,"index":"D","name":"Relatively Prime Graph","type":"PROGRAMMING","rating":1700,"tags":["brute force","constructive algorithms","graphs","greedy","math"]},{"contestId":1004,"index":"D","name":"Sonya and Matrix","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":1004,"index":"C","name":"Sonya and Robots","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":1004,"index":"B","name":"Sonya and Exhibition","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":1003,"index":"E","name":"Tree Constructing","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms","graphs"]},{"contestId":1003,"index":"B","name":"Binary String Constructing","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms"]},{"contestId":998,"index":"A","name":"Balloons","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","implementation"]},{"contestId":995,"index":"A","name":"Tesla","type":"PROGRAMMING","points":500.0,"rating":2100,"tags":["constructive algorithms","implementation"]},{"contestId":990,"index":"D","name":"Graph And Its Complement","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":989,"index":"C","name":"A Mist of Florescence","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","graphs"]},{"contestId":989,"index":"B","name":"A Tide of Riverscape","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","strings"]},{"contestId":985,"index":"D","name":"Sand Fortress","type":"PROGRAMMING","rating":2100,"tags":["binary search","constructive algorithms","math"]},{"contestId":982,"index":"A","name":"Row","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["brute force","constructive algorithms"]},{"contestId":980,"index":"B","name":"Marlin","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms"]},{"contestId":976,"index":"D","name":"Degree Set","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":963,"index":"B","name":"Destruction of a Tree","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"contestId":962,"index":"E","name":"Byteland, Berland and Disputed Cities","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy"]},{"contestId":962,"index":"B","name":"Students in Railway Carriage","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":960,"index":"C","name":"Subsequence Counting","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["bitmasks","constructive algorithms","greedy","implementation"]},{"contestId":959,"index":"D","name":"Mahmoud and Ehab and another array construction task","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["constructive algorithms","greedy","math","number theory"]},{"contestId":959,"index":"C","name":"Mahmoud and Ehab and the wrong algorithm","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","trees"]},{"contestId":952,"index":"G","name":"Puzzling Language","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms"]},{"contestId":949,"index":"B","name":"A Leapfrog in the Array","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","math"]},{"contestId":940,"index":"C","name":"Phone Numbers","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","implementation","strings"]},{"contestId":938,"index":"C","name":"Constructing Tests","type":"PROGRAMMING","rating":1700,"tags":["binary search","brute force","constructive algorithms"]},{"contestId":936,"index":"C","name":"Lock Puzzle","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","implementation","strings"]},{"contestId":934,"index":"B","name":"A Prosperous Lot","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":933,"index":"E","name":"A Preponderant Reunion","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","dp"]},{"contestId":932,"index":"C","name":"Permutation Cycle","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms"]},{"contestId":932,"index":"A","name":"Palindromic Supersequence","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms"]},{"contestId":931,"index":"B","name":"World Cup","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":926,"index":"E","name":"Merge Equal Elements","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","data structures"]},{"contestId":925,"index":"D","name":"Aztec Catacombs","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["constructive algorithms"]},{"contestId":925,"index":"C","name":"Big Secret","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","math"]},{"contestId":923,"index":"F","name":"Public Service","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["constructive algorithms","graphs","trees"]},{"contestId":923,"index":"D","name":"Picking Strings","type":"PROGRAMMING","points":1750.0,"rating":2500,"tags":["constructive algorithms","implementation","strings"]},{"contestId":922,"index":"F","name":"Divisibility","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["constructive algorithms","dp","greedy","number theory"]},{"contestId":916,"index":"C","name":"Jamie and Interesting Graph","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","graphs","shortest paths"]},{"contestId":912,"index":"B","name":"New Year\u0027s Eve","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["bitmasks","constructive algorithms","number theory"]},{"contestId":911,"index":"F","name":"Tree Destruction","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":911,"index":"E","name":"Stack Sorting","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":911,"index":"C","name":"Three Garlands","type":"PROGRAMMING","rating":1400,"tags":["brute force","constructive algorithms"]},{"contestId":910,"index":"C","name":"Minimum Sum","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","greedy","math"]},{"contestId":909,"index":"F","name":"AND-permutations","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms"]},{"contestId":909,"index":"B","name":"Segments","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","math"]},{"contestId":906,"index":"B","name":"Seating of Students","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["brute force","constructive algorithms","math"]},{"contestId":901,"index":"D","name":"Weighting a Tree","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":901,"index":"B","name":"GCD of Polynomials","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["constructive algorithms","math"]},{"contestId":901,"index":"A","name":"Hashing Trees","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","trees"]},{"contestId":899,"index":"D","name":"Shovel Sale","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["constructive algorithms","math"]},{"contestId":899,"index":"C","name":"Dividing the numbers","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["constructive algorithms","graphs","math"]},{"contestId":899,"index":"A","name":"Splitting in Teams","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","greedy","math"]},{"contestId":898,"index":"E","name":"Squares and not squares","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":896,"index":"B","name":"Ithea Plays With Chtholly","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["binary search","constructive algorithms","games","greedy","interactive"]},{"contestId":894,"index":"C","name":"Marco and GCD Sequence","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","math"]},{"contestId":894,"index":"B","name":"Ralph And His Magic Field","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["combinatorics","constructive algorithms","math","number theory"]},{"contestId":891,"index":"B","name":"Gluttony","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":888,"index":"G","name":"Xor-MST","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","constructive algorithms","data structures"]},{"contestId":886,"index":"D","name":"Restoration of string","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":883,"index":"K","name":"Road Widening","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":883,"index":"J","name":"Renovation","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":883,"index":"B","name":"Berland Army","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms","graphs","greedy"]},{"contestId":878,"index":"A","name":"Short Program","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["bitmasks","constructive algorithms"]},{"contestId":877,"index":"C","name":"Slava and tanks","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms"]},{"contestId":873,"index":"D","name":"Merge Sort","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","divide and conquer"]},{"contestId":868,"index":"C","name":"Qualification Rounds","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["bitmasks","brute force","constructive algorithms","dp"]},{"contestId":865,"index":"D","name":"Buy Low Sell High","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":865,"index":"A","name":"Save the problem!","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["constructive algorithms"]},{"contestId":862,"index":"C","name":"Mahmoud and Ehab and the xor","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms"]},{"contestId":858,"index":"F","name":"Wizard\u0027s Tour","type":"PROGRAMMING","points":3000.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":856,"index":"A","name":"Set Theory","type":"PROGRAMMING","rating":1600,"tags":["brute force","constructive algorithms"]},{"contestId":854,"index":"B","name":"Maxim Buys an Apartment","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","math"]},{"contestId":854,"index":"A","name":"Fraction","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","constructive algorithms","math"]},{"contestId":850,"index":"D","name":"Tournament Construction","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["constructive algorithms","dp","graphs","greedy","math"]},{"contestId":848,"index":"B","name":"Rooter\u0027s Song","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","data structures","geometry","implementation","sortings","two pointers"]},{"contestId":848,"index":"A","name":"From Y to Y","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms"]},{"contestId":847,"index":"L","name":"Berland SU Computer Network","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","hashing","trees"]},{"contestId":847,"index":"D","name":"Dog Show","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":847,"index":"C","name":"Sum of Nestings","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms"]},{"contestId":843,"index":"C","name":"Upgrading Tree","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","math","trees"]},{"contestId":840,"index":"B","name":"Leha and another game about graph","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["constructive algorithms","data structures","dfs and similar","dp","graphs"]},{"contestId":835,"index":"E","name":"The penguin\u0027s game","type":"PROGRAMMING","points":2250.0,"rating":2400,"tags":["binary search","constructive algorithms","interactive"]},{"contestId":831,"index":"C","name":"Jury Marks","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["brute force","constructive algorithms"]},{"contestId":830,"index":"E","name":"Perpetual Motion Machine","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["constructive algorithms","dp","graphs","implementation","math","trees"]},{"contestId":827,"index":"B","name":"High Load","type":"PROGRAMMING","points":750.0,"rating":1800,"tags":["constructive algorithms","greedy","implementation","trees"]},{"contestId":822,"index":"F","name":"Madness","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":820,"index":"B","name":"Mister B and Angle in Polygon","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","geometry","math"]},{"contestId":819,"index":"E","name":"Mister B and Flight to the Moon","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms","graphs"]},{"contestId":815,"index":"E","name":"Karen and Neighborhood","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["binary search","constructive algorithms","implementation"]},{"contestId":815,"index":"B","name":"Karen and Test","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["brute force","combinatorics","constructive algorithms","math"]},{"contestId":814,"index":"B","name":"An express train to reveries","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms"]},{"contestId":814,"index":"A","name":"An abandoned sentiment from past","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["constructive algorithms","greedy","implementation","sortings"]},{"contestId":811,"index":"D","name":"Vladik and Favorite Game","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","graphs","interactive"]},{"contestId":808,"index":"C","name":"Tea Party","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":805,"index":"B","name":"3-palindrome","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms"]},{"contestId":804,"index":"E","name":"The same permutation ","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["constructive algorithms"]},{"contestId":804,"index":"C","name":"Ice cream coloring","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","greedy"]},{"contestId":804,"index":"A","name":"Find Amir","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","greedy","math"]},{"contestId":803,"index":"C","name":"Maximal GCD","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","greedy","math"]},{"contestId":803,"index":"B","name":"Distances to Zero","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms"]},{"contestId":803,"index":"A","name":"Maximal Binary Matrix","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms"]},{"contestId":802,"index":"H","name":"Fake News (medium)","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","strings"]},{"contestId":801,"index":"B","name":"Valued Keys","type":"PROGRAMMING","points":1000.0,"rating":900,"tags":["constructive algorithms","greedy","strings"]},{"contestId":798,"index":"E","name":"Mike and code of a permutation","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["constructive algorithms","data structures","graphs","sortings"]},{"contestId":798,"index":"D","name":"Mike and distribution","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","sortings"]},{"contestId":798,"index":"A","name":"Mike and palindrome","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["brute force","constructive algorithms","strings"]},{"contestId":796,"index":"D","name":"Police Stations","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","dp","graphs","shortest paths","trees"]},{"contestId":796,"index":"C","name":"Bank Hacking","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","data structures","dp","trees"]},{"contestId":793,"index":"E","name":"Problem of offices","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["constructive algorithms","dfs and similar","dp","trees"]},{"contestId":788,"index":"D","name":"Finding lines","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["constructive algorithms","divide and conquer","interactive"]},{"contestId":788,"index":"B","name":"Weird journey","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["combinatorics","constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":780,"index":"E","name":"Underground Lab","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":779,"index":"C","name":"Dishonest Sellers","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":779,"index":"A","name":"Pupils Redistribution","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","math"]},{"contestId":778,"index":"D","name":"Parquet Re-laying","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["constructive algorithms"]},{"contestId":777,"index":"A","name":"Shell Game","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","implementation","math"]},{"contestId":776,"index":"F","name":"Sherlock\u0027s bet to Moriarty","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation","trees"]},{"contestId":776,"index":"B","name":"Sherlock and his girlfriend","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","number theory"]},{"contestId":774,"index":"H","name":"Repairing Of String","type":"PROGRAMMING","rating":2200,"tags":["*special","constructive algorithms"]},{"contestId":774,"index":"D","name":"Lie or Truth","type":"PROGRAMMING","rating":1500,"tags":["*special","constructive algorithms","sortings"]},{"contestId":774,"index":"C","name":"Maximum Number","type":"PROGRAMMING","rating":1200,"tags":["*special","constructive algorithms","greedy","implementation"]},{"contestId":773,"index":"C","name":"Prairie Partition","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","constructive algorithms","greedy","math"]},{"contestId":772,"index":"C","name":"Vulnerable Kerbals","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["constructive algorithms","dp","graphs","math","number theory"]},{"contestId":771,"index":"B","name":"Bear and Different Names","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":768,"index":"B","name":"Code For 1","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","divide and conquer"]},{"contestId":768,"index":"A","name":"Oath of the Night\u0027s Watch","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["constructive algorithms","sortings"]},{"contestId":766,"index":"E","name":"Mahmoud and a xor trip","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["bitmasks","constructive algorithms","data structures","dfs and similar","dp","math","trees"]},{"contestId":766,"index":"B","name":"Mahmoud and a Triangle","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","geometry","greedy","math","number theory","sortings"]},{"contestId":766,"index":"A","name":"Mahmoud and Longest Uncommon Subsequence","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","strings"]},{"contestId":765,"index":"D","name":"Artsem and Saunders","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["constructive algorithms","dsu","math"]},{"contestId":764,"index":"B","name":"Timofey and cubes","type":"PROGRAMMING","points":1000.0,"rating":900,"tags":["constructive algorithms","implementation"]},{"contestId":763,"index":"B","name":"Timofey and rectangles","type":"PROGRAMMING","points":750.0,"rating":2100,"tags":["constructive algorithms","geometry"]},{"contestId":761,"index":"E","name":"Dasha and Puzzle","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":761,"index":"D","name":"Dasha and Very Difficult Problem","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["binary search","brute force","constructive algorithms","greedy","sortings"]},{"contestId":761,"index":"A","name":"Dasha and Stairs","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["brute force","constructive algorithms","implementation","math"]},{"contestId":758,"index":"D","name":"Ability To Convert","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","dp","greedy","math","strings"]},{"contestId":758,"index":"C","name":"Unfair Poll","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","constructive algorithms","implementation","math"]},{"contestId":756,"index":"A","name":"Pavel and barbecue","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar"]},{"contestId":755,"index":"E","name":"PolandBall and White-Red graph","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","graphs","shortest paths"]},{"contestId":754,"index":"C","name":"Vladik and chat","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["brute force","constructive algorithms","dp","implementation","strings"]},{"contestId":754,"index":"A","name":"Lesha and array splitting","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":753,"index":"C","name":"Interactive Bulls and Cows (Hard)","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","constructive algorithms","interactive"]},{"contestId":753,"index":"B","name":"Interactive Bulls and Cows (Easy)","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":750,"index":"F","name":"New Year and Finding Roots","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","implementation","interactive","trees"]},{"contestId":749,"index":"B","name":"Parallelogram is Back","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["brute force","constructive algorithms","geometry"]},{"contestId":748,"index":"F","name":"Santa Clauses and a Soccer Championship","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":748,"index":"D","name":"Santa Claus and a Palindrome","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":748,"index":"C","name":"Santa Claus and Robot","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","math"]},{"contestId":746,"index":"G","name":"New Roads","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["constructive algorithms","graphs","trees"]},{"contestId":746,"index":"D","name":"Green and Black Tea","type":"PROGRAMMING","points":2000.0,"rating":1500,"tags":["constructive algorithms","greedy","math"]},{"contestId":746,"index":"C","name":"Tram","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","implementation","math"]},{"contestId":743,"index":"C","name":"Vladik and fractions","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["brute force","constructive algorithms","math","number theory"]},{"contestId":743,"index":"B","name":"Chloe and the sequence ","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["binary search","bitmasks","constructive algorithms","implementation"]},{"contestId":743,"index":"A","name":"Vladik and flights","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":741,"index":"C","name":"Arpa’s overnight party and Mehrdad’s silent entering","type":"PROGRAMMING","points":1250.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":740,"index":"B","name":"Alyona and flowers","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms"]},{"contestId":739,"index":"A","name":"Alyona and mex","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","greedy"]},{"contestId":737,"index":"F","name":"Dirty plates","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["constructive algorithms","math"]},{"contestId":736,"index":"E","name":"Chess Championship","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["constructive algorithms","flows","greedy","math"]},{"contestId":735,"index":"C","name":"Tennis Championship","type":"PROGRAMMING","points":1750.0,"rating":1600,"tags":["combinatorics","constructive algorithms","greedy","math"]},{"contestId":734,"index":"F","name":"Anton and School","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["bitmasks","constructive algorithms","implementation","math"]},{"contestId":733,"index":"E","name":"Sleep in Class","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["constructive algorithms","data structures","math","two pointers"]},{"contestId":733,"index":"C","name":"Epidemic in Monstropolis","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["constructive algorithms","dp","greedy","two pointers"]},{"contestId":732,"index":"C","name":"Sanatorium","type":"PROGRAMMING","points":1500.0,"rating":1200,"tags":["binary search","constructive algorithms","greedy","implementation","math"]},{"contestId":732,"index":"A","name":"Buy a Shovel","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","constructive algorithms","implementation","math"]},{"contestId":731,"index":"B","name":"Coupons and Discounts","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","greedy"]},{"contestId":730,"index":"H","name":"Delete Them","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":730,"index":"B","name":"Minimum and Maximum","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","interactive"]},{"contestId":729,"index":"E","name":"Subordinates","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","data structures","graphs","greedy","sortings"]},{"contestId":729,"index":"D","name":"Sea Battle","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","greedy","math"]},{"contestId":727,"index":"D","name":"T-shirts Distribution","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","flows","greedy"]},{"contestId":727,"index":"C","name":"Guess the Array","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","interactive","math"]},{"contestId":725,"index":"C","name":"Hidden Word","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms","implementation","strings"]},{"contestId":723,"index":"E","name":"One-Way Reform","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","flows","graphs","greedy"]},{"contestId":721,"index":"D","name":"Maxim and Array","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":720,"index":"C","name":"Homework","type":"PROGRAMMING","rating":3100,"tags":["constructive algorithms"]},{"contestId":715,"index":"D","name":"Create a Maze","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["constructive algorithms"]},{"contestId":715,"index":"B","name":"Complete The Graph","type":"PROGRAMMING","points":1000.0,"rating":2300,"tags":["binary search","constructive algorithms","graphs","shortest paths"]},{"contestId":715,"index":"A","name":"Plus and Square Root","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","math"]},{"contestId":713,"index":"B","name":"Searching Rectangles","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["binary search","constructive algorithms","interactive"]},{"contestId":711,"index":"B","name":"Chris and Magic Square","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":710,"index":"C","name":"Magic Odd Square","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","math"]},{"contestId":708,"index":"B","name":"Recover the String","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":708,"index":"A","name":"Letters Cyclic Shift","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy","implementation","strings"]},{"contestId":698,"index":"B","name":"Fix a Tree","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","trees"]},{"contestId":690,"index":"F2","name":"Tree of Life (medium)","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","hashing","trees"]},{"contestId":689,"index":"A","name":"Mike and Cellphone","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":688,"index":"B","name":"Lovely Palindromes","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","math"]},{"contestId":686,"index":"B","name":"Little Robber Girl\u0027s Zoo","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","implementation","sortings"]},{"contestId":686,"index":"A","name":"Free Ice Cream","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":682,"index":"A","name":"Alyona and Numbers","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","math","number theory"]},{"contestId":681,"index":"D","name":"Gifts by the List","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":681,"index":"C","name":"Heap Operations","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":680,"index":"B","name":"Bear and Finding Criminals","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","implementation"]},{"contestId":680,"index":"A","name":"Bear and Five Cards","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":679,"index":"A","name":"Bear and Prime 100","type":"PROGRAMMING","points":750.0,"rating":1400,"tags":["constructive algorithms","interactive","math"]},{"contestId":676,"index":"A","name":"Nicholas and Permutation","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":675,"index":"C","name":"Money Transfers","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":675,"index":"B","name":"Restoring Painting","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["brute force","constructive algorithms","math"]},{"contestId":672,"index":"B","name":"Different is Good","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","implementation","strings"]},{"contestId":670,"index":"F","name":"Restore a Number","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["brute force","constructive algorithms","strings"]},{"contestId":670,"index":"A","name":"Holidays","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":667,"index":"B","name":"Coat of Anticubism","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","geometry"]},{"contestId":665,"index":"D","name":"Simple Subset","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","number theory"]},{"contestId":663,"index":"A","name":"Rebus","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","expression parsing","greedy","math"]},{"contestId":662,"index":"D","name":"International Olympiad","type":"PROGRAMMING","points":250.0,"rating":2000,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":659,"index":"B","name":"Qualifying Contest","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","sortings"]},{"contestId":652,"index":"F","name":"Ants on a Circle","type":"PROGRAMMING","rating":2800,"tags":["constructive algorithms","math"]},{"contestId":645,"index":"A","name":"Amity Assessment","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":644,"index":"B","name":"Processing Queries","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["*special","constructive algorithms","data structures","two pointers"]},{"contestId":644,"index":"A","name":"Parliament of Berland","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["*special","constructive algorithms"]},{"contestId":643,"index":"B","name":"Bear and Two Paths","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","graphs"]},{"contestId":641,"index":"C","name":"Little Artem and Dance","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":639,"index":"B","name":"Bear and Forgotten Tree 3","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["constructive algorithms","graphs","trees"]},{"contestId":638,"index":"A","name":"Home Numbers","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["*special","constructive algorithms","math"]},{"contestId":637,"index":"C","name":"Promocodes with Mistakes","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["*special","brute force","constructive algorithms","implementation"]},{"contestId":637,"index":"B","name":"Chat Order","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["*special","binary search","constructive algorithms","data structures","sortings"]},{"contestId":637,"index":"A","name":"Voting for Photos","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["*special","constructive algorithms","implementation"]},{"contestId":634,"index":"A","name":"Island Puzzle","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":633,"index":"E","name":"Startup Funding","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","constructive algorithms","data structures","probabilities","two pointers"]},{"contestId":633,"index":"B","name":"A Trivial Problem","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["brute force","constructive algorithms","math","number theory"]},{"contestId":632,"index":"B","name":"Alice, Bob, Two Teams","type":"PROGRAMMING","rating":1400,"tags":["brute force","constructive algorithms"]},{"contestId":631,"index":"B","name":"Print Check","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":629,"index":"A","name":"Far Relative’s Birthday Cake","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","combinatorics","constructive algorithms","implementation"]},{"contestId":626,"index":"B","name":"Cards","type":"PROGRAMMING","points":750.0,"rating":1300,"tags":["constructive algorithms","dp","math"]},{"contestId":625,"index":"D","name":"Finals in arithmetic","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","implementation","math"]},{"contestId":625,"index":"C","name":"K-special Tables","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":625,"index":"B","name":"War of the Corporations","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["constructive algorithms","greedy","strings"]},{"contestId":623,"index":"A","name":"Graph and String","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","graphs"]},{"contestId":622,"index":"D","name":"Optimal Number Permutation","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms"]},{"contestId":621,"index":"D","name":"Rat Kwesh and Cheese","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["brute force","constructive algorithms","math"]},{"contestId":618,"index":"F","name":"Double Knapsack","type":"PROGRAMMING","points":2750.0,"rating":3000,"tags":["constructive algorithms","two pointers"]},{"contestId":618,"index":"B","name":"Guess the Permutation","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms"]},{"contestId":617,"index":"D","name":"Polyline","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","implementation"]},{"contestId":613,"index":"C","name":"Necklace","type":"PROGRAMMING","points":1250.0,"rating":2500,"tags":["constructive algorithms","math"]},{"contestId":612,"index":"E","name":"Square Root of Permutation","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","constructive algorithms","dfs and similar","graphs","math"]},{"contestId":611,"index":"H","name":"New Year  and Forgotten Tree","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["constructive algorithms","flows","graphs"]},{"contestId":610,"index":"D","name":"Vika and Segments","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","data structures","geometry","two pointers"]},{"contestId":610,"index":"C","name":"Harmony Analysis","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":610,"index":"B","name":"Vika and Squares","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":609,"index":"B","name":"Книга - лучший подарок","type":"PROGRAMMING","rating":1100,"tags":["constructive algorithms","implementation"]},{"contestId":605,"index":"B","name":"Lazy Student","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","data structures","graphs"]},{"contestId":605,"index":"A","name":"Sorting Railway Cars","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":600,"index":"C","name":"Make Palindrome","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","greedy","strings"]},{"contestId":595,"index":"A","name":"Vitaly and Night","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":593,"index":"C","name":"Beautiful Function","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["constructive algorithms","math"]},{"contestId":584,"index":"E","name":"Anton and Ira","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","greedy","math"]},{"contestId":584,"index":"C","name":"Marina and Vasya","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","greedy","strings"]},{"contestId":582,"index":"B","name":"Once Again...","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["constructive algorithms","dp","matrices"]},{"contestId":582,"index":"A","name":"GCD Table","type":"PROGRAMMING","points":750.0,"rating":1700,"tags":["constructive algorithms","greedy","number theory"]},{"contestId":581,"index":"D","name":"Three Logos","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["bitmasks","brute force","constructive algorithms","geometry","implementation","math"]},{"contestId":578,"index":"E","name":"Walking!","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["constructive algorithms","greedy"]},{"contestId":576,"index":"C","name":"Points on Plane","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","divide and conquer","geometry","greedy","sortings"]},{"contestId":576,"index":"B","name":"Invariance of Tree","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":575,"index":"D","name":"Tablecity","type":"PROGRAMMING","rating":1700,"tags":["constructive algorithms","implementation"]},{"contestId":573,"index":"C","name":"Bear and Drawing","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":571,"index":"C","name":"CNF 2","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"contestId":570,"index":"D","name":"Tree Requests","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":570,"index":"C","name":"Replacement","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":570,"index":"B","name":"Simple Game","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","games","greedy","implementation","math"]},{"contestId":566,"index":"E","name":"Restoring Map","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["bitmasks","constructive algorithms","trees"]},{"contestId":566,"index":"B","name":"Replicating Processes","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["constructive algorithms","greedy"]},{"contestId":560,"index":"B","name":"Gerald is into Art","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":557,"index":"B","name":"Pasha and Tea","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["constructive algorithms","implementation","math","sortings"]},{"contestId":553,"index":"B","name":"Kyoya and Permutation","type":"PROGRAMMING","points":500.0,"rating":1900,"tags":["binary search","combinatorics","constructive algorithms","greedy","implementation","math"]},{"contestId":551,"index":"B","name":"ZgukistringZ","type":"PROGRAMMING","points":1250.0,"rating":1800,"tags":["brute force","constructive algorithms","implementation","strings"]},{"contestId":550,"index":"E","name":"Brackets in Implications","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":550,"index":"D","name":"Regular Bridge","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":549,"index":"G","name":"Happy Line","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":549,"index":"B","name":"Looksery Party","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","graphs","greedy"]},{"contestId":547,"index":"D","name":"Mike and Fish","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":546,"index":"D","name":"Soldier and Number Game","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dp","math","number theory"]},{"contestId":544,"index":"B","name":"Sea and Islands","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":543,"index":"E","name":"Listening to Music","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","data structures"]},{"contestId":543,"index":"B","name":"Destroying Roads","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["constructive algorithms","graphs","shortest paths"]},{"contestId":542,"index":"C","name":"Idempotent functions","type":"PROGRAMMING","points":750.0,"rating":2000,"tags":["constructive algorithms","graphs","math"]},{"contestId":538,"index":"G","name":"Berserk Robot ","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["constructive algorithms","math","sortings"]},{"contestId":538,"index":"D","name":"Weird Chess","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":538,"index":"B","name":"Quasi Binary","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","dp","greedy","implementation"]},{"contestId":534,"index":"E","name":"Berland Local Positioning System","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","greedy","hashing","implementation"]},{"contestId":534,"index":"D","name":"Handshakes","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":534,"index":"A","name":"Exam","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","implementation","math"]},{"contestId":533,"index":"E","name":"Correcting Mistakes","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms","dp","greedy","hashing","strings","two pointers"]},{"contestId":525,"index":"D","name":"Arthur and Walls","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["constructive algorithms","data structures","graphs","greedy","shortest paths"]},{"contestId":525,"index":"B","name":"Pasha and String","type":"PROGRAMMING","points":750.0,"rating":1400,"tags":["constructive algorithms","greedy","math","strings"]},{"contestId":518,"index":"C","name":"Anya and Smartphone","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":518,"index":"A","name":"Vitaly and Strings","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","strings"]},{"contestId":515,"index":"D","name":"Drazil and Tiles","type":"PROGRAMMING","points":3000.0,"rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":513,"index":"D2","name":"Constrained Tree","type":"PROGRAMMING","points":8.0,"rating":2600,"tags":["constructive algorithms","data structures"]},{"contestId":513,"index":"A","name":"Game","type":"PROGRAMMING","points":3.0,"rating":800,"tags":["constructive algorithms","math"]},{"contestId":512,"index":"E","name":"Fox And Polygon","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["constructive algorithms","divide and conquer"]},{"contestId":509,"index":"D","name":"Restoring Numbers","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","math"]},{"contestId":509,"index":"B","name":"Painting Pebbles","type":"PROGRAMMING","rating":1300,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":508,"index":"C","name":"Anya and Ghosts","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":501,"index":"C","name":"Misha and Forest","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","data structures","greedy","sortings","trees"]},{"contestId":500,"index":"C","name":"New Year Book Reading","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","greedy","implementation","math"]},{"contestId":496,"index":"C","name":"Removing Columns","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":496,"index":"B","name":"Secret Combination","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":493,"index":"D","name":"Vasya and Chess","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","games","math"]},{"contestId":491,"index":"A","name":"Up the hill","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","implementation"]},{"contestId":488,"index":"B","name":"Candy Boxes","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["brute force","constructive algorithms","math"]},{"contestId":487,"index":"C","name":"Prefix Product Sequence","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","math","number theory"]},{"contestId":484,"index":"E","name":"Sign on Fence","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["binary search","constructive algorithms","data structures"]},{"contestId":484,"index":"A","name":"Bits","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["bitmasks","constructive algorithms"]},{"contestId":482,"index":"B","name":"Interesting Array","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","data structures","trees"]},{"contestId":482,"index":"A","name":"Diverse Permutation","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","greedy"]},{"contestId":479,"index":"B","name":"Towers","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["brute force","constructive algorithms","greedy","implementation","sortings"]},{"contestId":478,"index":"B","name":"Random Teams","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["combinatorics","constructive algorithms","greedy","math"]},{"contestId":476,"index":"D","name":"Dreamoon and Sets","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","greedy","math"]},{"contestId":475,"index":"C","name":"Kamal-ol-molk\u0027s Painting","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["brute force","constructive algorithms","greedy"]},{"contestId":472,"index":"F","name":"Design Tutorial: Change the Goal","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["constructive algorithms","math","matrices"]},{"contestId":472,"index":"E","name":"Design Tutorial: Learn from a Game","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","implementation"]},{"contestId":468,"index":"C","name":"Hack it!","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["binary search","constructive algorithms","math"]},{"contestId":468,"index":"A","name":"24 Game","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","greedy","math"]},{"contestId":467,"index":"B","name":"Fedor and New Game","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["bitmasks","brute force","constructive algorithms","implementation"]},{"contestId":460,"index":"D","name":"Little Victor and Set","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["brute force","constructive algorithms","math"]},{"contestId":459,"index":"C","name":"Pashmak and Buses","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["combinatorics","constructive algorithms","math"]},{"contestId":457,"index":"E","name":"Flow Optimality","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["constructive algorithms","flows","math"]},{"contestId":453,"index":"C","name":"Little Pony and Summer Sun Celebration","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":452,"index":"B","name":"4-point polyline","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["brute force","constructive algorithms","geometry","trees"]},{"contestId":449,"index":"C","name":"Jzzhu and Apples","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["constructive algorithms","number theory"]},{"contestId":443,"index":"A","name":"Anton and Letters","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":441,"index":"D","name":"Valera and Swaps","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dsu","graphs","implementation","math","string suffix structures"]},{"contestId":441,"index":"C","name":"Valera and Tubes ","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","dfs and similar","implementation"]},{"contestId":439,"index":"C","name":"Devu and Partitioning of the Array","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["brute force","constructive algorithms","implementation","number theory"]},{"contestId":432,"index":"E","name":"Square Tiling","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","greedy"]},{"contestId":430,"index":"A","name":"Points and Segments (easy)","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","sortings"]},{"contestId":429,"index":"C","name":"Guess the Tree","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["bitmasks","constructive algorithms","dp","greedy","trees"]},{"contestId":424,"index":"D","name":"Biathlon Track","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["binary search","brute force","constructive algorithms","data structures","dp"]},{"contestId":421,"index":"A","name":"Pasha and Hamsters","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":417,"index":"E","name":"Square Table","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","math","probabilities"]},{"contestId":417,"index":"C","name":"Football","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":414,"index":"A","name":"Mashmokh and Numbers","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","number theory"]},{"contestId":409,"index":"H","name":"A + B Strikes Back","type":"PROGRAMMING","rating":1500,"tags":["*special","brute force","constructive algorithms","dsu","implementation"]},{"contestId":402,"index":"C","name":"Searching for Graph","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["brute force","constructive algorithms","graphs"]},{"contestId":401,"index":"C","name":"Team","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":398,"index":"C","name":"Tree and Array","type":"PROGRAMMING","points":1500.0,"tags":["constructive algorithms"]},{"contestId":398,"index":"A","name":"Cards","type":"PROGRAMMING","points":500.0,"tags":["constructive algorithms","implementation"]},{"contestId":397,"index":"B","name":"On Corruption and Numbers","type":"PROGRAMMING","points":1000.0,"tags":["constructive algorithms","implementation","math"]},{"contestId":394,"index":"C","name":"Dominoes","type":"PROGRAMMING","points":1500.0,"tags":["constructive algorithms","greedy"]},{"contestId":390,"index":"D","name":"Inna and Sweet Matrix","type":"PROGRAMMING","points":2000.0,"tags":["constructive algorithms"]},{"contestId":388,"index":"B","name":"Fox and Minimal path","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["bitmasks","constructive algorithms","graphs","implementation","math"]},{"contestId":379,"index":"B","name":"New Year Present","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":370,"index":"D","name":"Broken Monitor","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["brute force","constructive algorithms","greedy","implementation"]},{"contestId":370,"index":"C","name":"Mittens","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":369,"index":"B","name":"Valera and Contest","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","implementation","math"]},{"contestId":361,"index":"B","name":"Levko and Permutation","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","math","number theory"]},{"contestId":361,"index":"A","name":"Levko and Table","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","implementation"]},{"contestId":359,"index":"E","name":"Neatness","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","dfs and similar"]},{"contestId":359,"index":"B","name":"Permutation","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","dp","math"]},{"contestId":359,"index":"A","name":"Table","type":"PROGRAMMING","points":500.0,"rating":1000,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":358,"index":"C","name":"Dima and Containers","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":357,"index":"B","name":"Flag Day","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","implementation"]},{"contestId":356,"index":"D","name":"Bags and Coins","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["bitmasks","constructive algorithms","dp","greedy"]},{"contestId":356,"index":"C","name":"Compartments","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["combinatorics","constructive algorithms","greedy","implementation"]},{"contestId":355,"index":"A","name":"Vasya and Digital Root","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","implementation"]},{"contestId":354,"index":"E","name":"Lucky Number Representation","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","dp"]},{"contestId":353,"index":"D","name":"Queue","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["constructive algorithms","dp"]},{"contestId":353,"index":"B","name":"Two Heaps","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["combinatorics","constructive algorithms","greedy","implementation","math","sortings"]},{"contestId":350,"index":"E","name":"Wrong Floyd","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["brute force","constructive algorithms","dfs and similar","graphs"]},{"contestId":347,"index":"A","name":"Difference Row","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","implementation","sortings"]},{"contestId":341,"index":"E","name":"Candies Game","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["constructive algorithms","greedy"]},{"contestId":339,"index":"E","name":"Three Swaps","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","greedy"]},{"contestId":339,"index":"C","name":"Xenia and Weights","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","shortest paths"]},{"contestId":335,"index":"B","name":"Palindrome","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","dp"]},{"contestId":335,"index":"A","name":"Banana","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["binary search","constructive algorithms","greedy"]},{"contestId":333,"index":"C","name":"Lucky Tickets","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["brute force","constructive algorithms"]},{"contestId":331,"index":"E2","name":"Deja Vu","type":"PROGRAMMING","points":50.0,"rating":3100,"tags":["constructive algorithms","dp"]},{"contestId":331,"index":"E1","name":"Deja Vu","type":"PROGRAMMING","points":50.0,"rating":2900,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":330,"index":"B","name":"Road Construction","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["constructive algorithms","graphs"]},{"contestId":329,"index":"D","name":"The Evil Temple and the Moving Rocks","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["constructive algorithms"]},{"contestId":329,"index":"C","name":"Graph Reconstruction","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["constructive algorithms"]},{"contestId":329,"index":"A","name":"Purification","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":327,"index":"E","name":"Axis Walking","type":"PROGRAMMING","points":3000.0,"rating":2300,"tags":["bitmasks","combinatorics","constructive algorithms","dp","meet-in-the-middle"]},{"contestId":327,"index":"D","name":"Block Tower","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","dfs and similar","graphs"]},{"contestId":323,"index":"B","name":"Tournament-graph","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["constructive algorithms","graphs"]},{"contestId":323,"index":"A","name":"Black-and-White Cube","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["combinatorics","constructive algorithms"]},{"contestId":321,"index":"C","name":"Ciel the Commander","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","divide and conquer","greedy","trees"]},{"contestId":317,"index":"E","name":"Princess and Her Shadow","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["constructive algorithms","shortest paths"]},{"contestId":317,"index":"C","name":"Balance","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":316,"index":"F3","name":"Suns and Rays","type":"PROGRAMMING","points":30.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","implementation"]},{"contestId":313,"index":"E","name":"Ilya and Two Numbers","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","data structures","dsu","greedy"]},{"contestId":313,"index":"C","name":"Ilya and Matrix","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","greedy","implementation","sortings"]},{"contestId":311,"index":"A","name":"The Closest Pair","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":306,"index":"D","name":"Polygon","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["constructive algorithms","geometry"]},{"contestId":305,"index":"A","name":"Strange Addition","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":303,"index":"A","name":"Lucky Permutation Triple","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","implementation","math"]},{"contestId":301,"index":"C","name":"Yaroslav and Algorithm","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["constructive algorithms"]},{"contestId":301,"index":"A","name":"Yaroslav and Sequence","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":300,"index":"A","name":"Array","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":297,"index":"D","name":"Color the Carpet","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms"]},{"contestId":297,"index":"C","name":"Splitting the Uniqueness","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms"]},{"contestId":297,"index":"B","name":"Fish Weight","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":297,"index":"A","name":"Parity Game","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms"]},{"contestId":290,"index":"E","name":"HQ","type":"PROGRAMMING","rating":2500,"tags":["*special","constructive algorithms"]},{"contestId":286,"index":"E","name":"Ladies\u0027 Shop","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms","fft","math"]},{"contestId":286,"index":"A","name":"Lucky Permutation","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["constructive algorithms","math"]},{"contestId":283,"index":"A","name":"Cows and Sequence","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":282,"index":"C","name":"XOR and OR","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","implementation","math"]},{"contestId":277,"index":"B","name":"Set of Points","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","geometry"]},{"contestId":275,"index":"B","name":"Convex Shape","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","implementation"]},{"contestId":272,"index":"E","name":"Dima and Horses","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["combinatorics","constructive algorithms","graphs"]},{"contestId":271,"index":"E","name":"Three Horses","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["constructive algorithms","math","number theory"]},{"contestId":271,"index":"C","name":"Secret","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":269,"index":"C","name":"Flawed Flow","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","flows","graphs","greedy"]},{"contestId":268,"index":"C","name":"Beautiful Sets of Points","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","implementation"]},{"contestId":266,"index":"C","name":"Below the Diagonal","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["constructive algorithms","greedy","math"]},{"contestId":266,"index":"B","name":"Queue at the School","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["constructive algorithms","graph matchings","implementation","shortest paths"]},{"contestId":264,"index":"A","name":"Escape from Stones","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","data structures","implementation","two pointers"]},{"contestId":261,"index":"C","name":"Maxim and Matrix","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["constructive algorithms","dp","math"]},{"contestId":260,"index":"D","name":"Black and White Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":260,"index":"C","name":"Balls and Boxes","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":254,"index":"A","name":"Cards with Numbers","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","sortings"]},{"contestId":246,"index":"C","name":"Beauty Pageant","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy"]},{"contestId":246,"index":"A","name":"Buggy Sorting","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":245,"index":"D","name":"Restoring Table","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":241,"index":"G","name":"Challenging Balloons","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms"]},{"contestId":238,"index":"B","name":"Boring Partition","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":238,"index":"A","name":"Not Wool Sequences","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","math"]},{"contestId":234,"index":"H","name":"Merging Two Decks","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":234,"index":"G","name":"Practice","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","divide and conquer","implementation"]},{"contestId":232,"index":"C","name":"Doe Graphs","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["constructive algorithms","divide and conquer","dp","graphs","shortest paths"]},{"contestId":232,"index":"A","name":"Cycles","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["binary search","constructive algorithms","graphs","greedy"]},{"contestId":231,"index":"B","name":"Magic, Wizardry and Wonders","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["constructive algorithms","greedy"]},{"contestId":226,"index":"D","name":"The table","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","greedy"]},{"contestId":225,"index":"A","name":"Dice Tower","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["constructive algorithms","greedy"]},{"contestId":220,"index":"B","name":"Little Elephant and Array","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","data structures"]},{"contestId":218,"index":"A","name":"Mountain Scenery","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":214,"index":"B","name":"Hometask","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["brute force","constructive algorithms","greedy","math"]},{"contestId":213,"index":"D","name":"Stars","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["constructive algorithms","geometry"]},{"contestId":209,"index":"C","name":"Trails and Glades","type":"PROGRAMMING","points":1000.0,"rating":2400,"tags":["constructive algorithms","dsu","graphs","greedy"]},{"contestId":209,"index":"B","name":"Pixels","type":"PROGRAMMING","points":500.0,"rating":2100,"tags":["constructive algorithms","math"]},{"contestId":201,"index":"A","name":"Clear Symmetry","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","dp","math"]},{"contestId":199,"index":"A","name":"Hexadecimal\u0027s theorem","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["brute force","constructive algorithms","implementation","number theory"]},{"contestId":198,"index":"D","name":"Cube Snake","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms"]},{"contestId":197,"index":"A","name":"Plate Game","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","games","math"]},{"contestId":196,"index":"C","name":"Paint Tree","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","divide and conquer","geometry","sortings","trees"]},{"contestId":193,"index":"C","name":"Hamming Distance","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","greedy","math","matrices"]},{"contestId":193,"index":"A","name":"Cutting Figure","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","graphs","trees"]},{"contestId":183,"index":"A","name":"Headquarters","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","math"]},{"contestId":180,"index":"F","name":"Mathematical Analysis Rocks!","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","implementation","math"]},{"contestId":176,"index":"C","name":"Playing with Superglue","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["combinatorics","constructive algorithms"]},{"contestId":173,"index":"D","name":"Deputies","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms","graphs","greedy","implementation"]},{"contestId":171,"index":"A","name":"Mysterious numbers - 1","type":"PROGRAMMING","rating":1200,"tags":["*special","constructive algorithms"]},{"contestId":161,"index":"B","name":"Discounts","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":156,"index":"B","name":"Suspects","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":148,"index":"C","name":"Terse princess","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","greedy"]},{"contestId":148,"index":"A","name":"Insomnia cure","type":"PROGRAMMING","points":1000.0,"rating":800,"tags":["constructive algorithms","implementation","math"]},{"contestId":145,"index":"B","name":"Lucky Number 2","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms"]},{"contestId":142,"index":"B","name":"Help General","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":141,"index":"E","name":"Clearing Up","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","dp","dsu","graphs"]},{"contestId":141,"index":"C","name":"Queue","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["constructive algorithms","greedy","sortings"]},{"contestId":135,"index":"C","name":"Zero-One","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","games","greedy"]},{"contestId":134,"index":"C","name":"Swaps","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","graphs","greedy"]},{"contestId":132,"index":"D","name":"Constants in the language of Shakespeare","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dp","greedy"]},{"contestId":128,"index":"D","name":"Numbers","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","implementation"]},{"contestId":128,"index":"B","name":"String","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["brute force","constructive algorithms","hashing","implementation","string suffix structures","strings"]},{"contestId":126,"index":"C","name":"E-reader Display","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":125,"index":"D","name":"Two progressions","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["constructive algorithms","greedy"]},{"contestId":125,"index":"C","name":"Hobbits\u0027 Party","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["constructive algorithms","greedy"]},{"contestId":119,"index":"B","name":"Before Exam","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","implementation","sortings"]},{"contestId":118,"index":"B","name":"Present from Lena","type":"PROGRAMMING","points":1000.0,"rating":1000,"tags":["constructive algorithms","implementation"]},{"contestId":110,"index":"B","name":"Lucky String","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["constructive algorithms","strings"]},{"contestId":109,"index":"D","name":"Lucky Sorting","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","sortings"]},{"contestId":103,"index":"C","name":"Russian Roulette","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","greedy"]},{"contestId":98,"index":"D","name":"Help Monks","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["constructive algorithms"]},{"contestId":97,"index":"B","name":"Superset","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":91,"index":"D","name":"Grocer\u0027s Problem","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["constructive algorithms","graphs","greedy"]},{"contestId":86,"index":"B","name":"Tetris revisited","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["constructive algorithms","graph matchings","greedy","math"]},{"contestId":85,"index":"A","name":"Domino","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","implementation"]},{"contestId":82,"index":"B","name":"Sets","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","hashing","implementation"]},{"contestId":81,"index":"D","name":"Polycarp\u0027s Picture Gallery","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","greedy"]},{"contestId":78,"index":"B","name":"Easter Eggs","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["constructive algorithms","implementation"]},{"contestId":74,"index":"E","name":"Shift It!","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms"]},{"contestId":66,"index":"D","name":"Petya and His Friends","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["constructive algorithms","math","number theory"]},{"contestId":63,"index":"D","name":"Dividing Island","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms"]},{"contestId":59,"index":"D","name":"Team Arrangement","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","greedy","implementation"]},{"contestId":53,"index":"C","name":"Little Frog","type":"PROGRAMMING","points":1500.0,"rating":1200,"tags":["constructive algorithms"]},{"contestId":49,"index":"C","name":"Disposition","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","math"]},{"contestId":48,"index":"H","name":"Black and White","type":"PROGRAMMING","rating":2800,"tags":["constructive algorithms"]},{"contestId":45,"index":"J","name":"Planting Trees","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms"]},{"contestId":45,"index":"E","name":"Director","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":44,"index":"J","name":"Triminoes","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","greedy"]},{"contestId":43,"index":"D","name":"Journey","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["brute force","constructive algorithms","implementation"]},{"contestId":42,"index":"D","name":"Strange town","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["constructive algorithms","math"]},{"contestId":42,"index":"C","name":"Safe cracking","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["brute force","constructive algorithms"]},{"contestId":41,"index":"E","name":"3-cycles","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["constructive algorithms","graphs","greedy"]},{"contestId":40,"index":"A","name":"Find Color","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","geometry","implementation","math"]},{"contestId":36,"index":"E","name":"Two Paths","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["constructive algorithms","dsu","graphs","implementation"]},{"contestId":30,"index":"E","name":"Tricky and Clever Password","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","constructive algorithms","data structures","greedy","hashing","strings"]},{"contestId":29,"index":"D","name":"Ant on the Tree","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":27,"index":"C","name":"Unordered Subsequence","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["constructive algorithms","greedy"]},{"contestId":26,"index":"E","name":"Multithreading","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms"]},{"contestId":26,"index":"C","name":"Parquet","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["combinatorics","constructive algorithms","greedy","implementation"]},{"contestId":23,"index":"C","name":"Oranges and Apples","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","sortings"]},{"contestId":23,"index":"B","name":"Party","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","graphs","math"]},{"contestId":14,"index":"C","name":"Four Segments","type":"PROGRAMMING","rating":1700,"tags":["brute force","constructive algorithms","geometry","implementation","math"]},{"contestId":12,"index":"E","name":"Start of the session","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms"]},{"contestId":11,"index":"A","name":"Increasing Sequence","type":"PROGRAMMING","rating":900,"tags":["constructive algorithms","implementation","math"]},{"contestId":10,"index":"E","name":"Greedy Change","type":"PROGRAMMING","rating":2600,"tags":["constructive algorithms"]},{"contestId":8,"index":"B","name":"Obsession with Robots","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","graphs","implementation"]},{"contestId":7,"index":"A","name":"Kalevitch and Chess","type":"PROGRAMMING","rating":1100,"tags":["brute force","constructive algorithms"]},{"contestId":5,"index":"C","name":"Longest Regular Bracket Sequence","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","data structures","dp","greedy","sortings","strings"]},{"contestId":4,"index":"B","name":"Before an Exam","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","greedy"]}],"problemStatistics":[{"contestId":1572,"index":"B","solvedCount":242},{"contestId":1569,"index":"B","solvedCount":13160},{"contestId":1567,"index":"F","solvedCount":417},{"contestId":1567,"index":"D","solvedCount":3164},{"contestId":1566,"index":"H","solvedCount":31},{"contestId":1566,"index":"G","solvedCount":167},{"contestId":1566,"index":"E","solvedCount":2583},{"contestId":1566,"index":"C","solvedCount":11311},{"contestId":1566,"index":"B","solvedCount":13244},{"contestId":1562,"index":"C","solvedCount":8594},{"contestId":1562,"index":"B","solvedCount":14003},{"contestId":1560,"index":"F2","solvedCount":2766},{"contestId":1560,"index":"F1","solvedCount":3876},{"contestId":1559,"index":"D2","solvedCount":1630},{"contestId":1559,"index":"D1","solvedCount":8358},{"contestId":1559,"index":"C","solvedCount":12963},{"contestId":1559,"index":"A","solvedCount":17116},{"contestId":1558,"index":"C","solvedCount":2071},{"contestId":1557,"index":"E","solvedCount":512},{"contestId":1556,"index":"D","solvedCount":4254},{"contestId":1555,"index":"D","solvedCount":7212},{"contestId":1555,"index":"C","solvedCount":12591},{"contestId":1554,"index":"D","solvedCount":5913},{"contestId":1553,"index":"G","solvedCount":648},{"contestId":1553,"index":"E","solvedCount":2428},{"contestId":1552,"index":"E","solvedCount":1364},{"contestId":1552,"index":"D","solvedCount":4635},{"contestId":1552,"index":"C","solvedCount":4630},{"contestId":1551,"index":"D2","solvedCount":1869},{"contestId":1551,"index":"D1","solvedCount":4648},{"contestId":1551,"index":"B2","solvedCount":10145},{"contestId":1550,"index":"D","solvedCount":1315},{"contestId":1547,"index":"D","solvedCount":11029},{"contestId":1545,"index":"D","solvedCount":264},{"contestId":1545,"index":"C","solvedCount":384},{"contestId":1543,"index":"E","solvedCount":287},{"contestId":1543,"index":"D2","solvedCount":1538},{"contestId":1543,"index":"D1","solvedCount":6004},{"contestId":1542,"index":"B","solvedCount":13359},{"contestId":1541,"index":"A","solvedCount":22353},{"contestId":1540,"index":"A","solvedCount":10175},{"contestId":1539,"index":"E","solvedCount":617},{"contestId":1538,"index":"D","solvedCount":8867},{"contestId":1537,"index":"F","solvedCount":1704},{"contestId":1537,"index":"C","solvedCount":15828},{"contestId":1537,"index":"B","solvedCount":19275},{"contestId":1536,"index":"F","solvedCount":613},{"contestId":1536,"index":"B","solvedCount":13241},{"contestId":1536,"index":"A","solvedCount":17361},{"contestId":1534,"index":"H","solvedCount":77},{"contestId":1534,"index":"D","solvedCount":4218},{"contestId":1533,"index":"I","solvedCount":33},{"contestId":1533,"index":"G","solvedCount":57},{"contestId":1531,"index":"C","solvedCount":617},{"contestId":1530,"index":"G","solvedCount":70},{"contestId":1530,"index":"E","solvedCount":2249},{"contestId":1530,"index":"D","solvedCount":6378},{"contestId":1530,"index":"B","solvedCount":13893},{"contestId":1529,"index":"A","solvedCount":23485},{"contestId":1528,"index":"D","solvedCount":924},{"contestId":1527,"index":"B2","solvedCount":5702},{"contestId":1527,"index":"B1","solvedCount":16012},{"contestId":1526,"index":"F","solvedCount":120},{"contestId":1526,"index":"E","solvedCount":714},{"contestId":1526,"index":"D","solvedCount":1846},{"contestId":1526,"index":"A","solvedCount":19595},{"contestId":1525,"index":"B","solvedCount":18010},{"contestId":1523,"index":"B","solvedCount":9921},{"contestId":1521,"index":"E","solvedCount":455},{"contestId":1521,"index":"D","solvedCount":1183},{"contestId":1521,"index":"C","solvedCount":3572},{"contestId":1521,"index":"B","solvedCount":14118},{"contestId":1521,"index":"A","solvedCount":21636},{"contestId":1520,"index":"F2","solvedCount":2214},{"contestId":1520,"index":"C","solvedCount":20823},{"contestId":1519,"index":"E","solvedCount":609},{"contestId":1517,"index":"G","solvedCount":197},{"contestId":1517,"index":"C","solvedCount":9540},{"contestId":1517,"index":"B","solvedCount":10754},{"contestId":1516,"index":"C","solvedCount":7996},{"contestId":1515,"index":"F","solvedCount":1076},{"contestId":1515,"index":"C","solvedCount":11026},{"contestId":1515,"index":"A","solvedCount":17426},{"contestId":1513,"index":"F","solvedCount":666},{"contestId":1513,"index":"E","solvedCount":1085},{"contestId":1513,"index":"D","solvedCount":3163},{"contestId":1513,"index":"B","solvedCount":9253},{"contestId":1513,"index":"A","solvedCount":16813},{"contestId":1512,"index":"D","solvedCount":13719},{"contestId":1512,"index":"C","solvedCount":13468},{"contestId":1511,"index":"D","solvedCount":7800},{"contestId":1511,"index":"B","solvedCount":15828},{"contestId":1510,"index":"J","solvedCount":259},{"contestId":1509,"index":"A","solvedCount":20641},{"contestId":1508,"index":"E","solvedCount":209},{"contestId":1508,"index":"D","solvedCount":272},{"contestId":1508,"index":"B","solvedCount":2736},{"contestId":1508,"index":"A","solvedCount":4602},{"contestId":1506,"index":"F","solvedCount":2369},{"contestId":1506,"index":"E","solvedCount":8724},{"contestId":1506,"index":"D","solvedCount":12745},{"contestId":1504,"index":"B","solvedCount":12670},{"contestId":1504,"index":"A","solvedCount":17441},{"contestId":1503,"index":"F","solvedCount":68},{"contestId":1503,"index":"D","solvedCount":684},{"contestId":1503,"index":"B","solvedCount":5458},{"contestId":1503,"index":"A","solvedCount":9534},{"contestId":1500,"index":"C","solvedCount":504},{"contestId":1499,"index":"A","solvedCount":18281},{"contestId":1497,"index":"C2","solvedCount":10832},{"contestId":1497,"index":"C1","solvedCount":15020},{"contestId":1497,"index":"B","solvedCount":13590},{"contestId":1496,"index":"A","solvedCount":15934},{"contestId":1495,"index":"F","solvedCount":142},{"contestId":1495,"index":"C","solvedCount":1905},{"contestId":1494,"index":"F","solvedCount":248},{"contestId":1494,"index":"E","solvedCount":1230},{"contestId":1494,"index":"D","solvedCount":1930},{"contestId":1493,"index":"E","solvedCount":577},{"contestId":1493,"index":"C","solvedCount":3505},{"contestId":1493,"index":"A","solvedCount":16532},{"contestId":1492,"index":"E","solvedCount":967},{"contestId":1492,"index":"D","solvedCount":4786},{"contestId":1491,"index":"G","solvedCount":449},{"contestId":1491,"index":"F","solvedCount":636},{"contestId":1491,"index":"D","solvedCount":5133},{"contestId":1490,"index":"B","solvedCount":19157},{"contestId":1487,"index":"C","solvedCount":9448},{"contestId":1486,"index":"E","solvedCount":2067},{"contestId":1485,"index":"D","solvedCount":3762},{"contestId":1482,"index":"C","solvedCount":6949},{"contestId":1481,"index":"D","solvedCount":3507},{"contestId":1481,"index":"C","solvedCount":8356},{"contestId":1479,"index":"C","solvedCount":956},{"contestId":1479,"index":"B2","solvedCount":2993},{"contestId":1479,"index":"B1","solvedCount":5221},{"contestId":1477,"index":"D","solvedCount":311},{"contestId":1477,"index":"C","solvedCount":1708},{"contestId":1477,"index":"A","solvedCount":4440},{"contestId":1476,"index":"A","solvedCount":20517},{"contestId":1475,"index":"F","solvedCount":3817},{"contestId":1474,"index":"E","solvedCount":1022},{"contestId":1474,"index":"C","solvedCount":8738},{"contestId":1474,"index":"B","solvedCount":18083},{"contestId":1473,"index":"C","solvedCount":9857},{"contestId":1470,"index":"D","solvedCount":2527},{"contestId":1470,"index":"C","solvedCount":1024},{"contestId":1469,"index":"D","solvedCount":7009},{"contestId":1469,"index":"A","solvedCount":19235},{"contestId":1468,"index":"H","solvedCount":1280},{"contestId":1467,"index":"C","solvedCount":4948},{"contestId":1467,"index":"A","solvedCount":19471},{"contestId":1463,"index":"E","solvedCount":1059},{"contestId":1463,"index":"D","solvedCount":3282},{"contestId":1463,"index":"B","solvedCount":12446},{"contestId":1461,"index":"F","solvedCount":369},{"contestId":1461,"index":"A","solvedCount":16534},{"contestId":1455,"index":"E","solvedCount":1163},{"contestId":1455,"index":"C","solvedCount":15722},{"contestId":1455,"index":"B","solvedCount":15818},{"contestId":1454,"index":"D","solvedCount":14076},{"contestId":1454,"index":"A","solvedCount":27972},{"contestId":1453,"index":"D","solvedCount":3413},{"contestId":1453,"index":"B","solvedCount":10253},{"contestId":1452,"index":"F","solvedCount":197},{"contestId":1451,"index":"F","solvedCount":626},{"contestId":1451,"index":"E2","solvedCount":2136},{"contestId":1451,"index":"E1","solvedCount":3224},{"contestId":1450,"index":"F","solvedCount":1051},{"contestId":1450,"index":"E","solvedCount":662},{"contestId":1450,"index":"C2","solvedCount":2636},{"contestId":1450,"index":"C1","solvedCount":4318},{"contestId":1450,"index":"A","solvedCount":15401},{"contestId":1447,"index":"A","solvedCount":12161},{"contestId":1446,"index":"E","solvedCount":45},{"contestId":1446,"index":"A","solvedCount":10833},{"contestId":1444,"index":"D","solvedCount":286},{"contestId":1443,"index":"A","solvedCount":14616},{"contestId":1442,"index":"E","solvedCount":288},{"contestId":1442,"index":"A","solvedCount":6435},{"contestId":1439,"index":"B","solvedCount":991},{"contestId":1439,"index":"A2","solvedCount":4054},{"contestId":1439,"index":"A1","solvedCount":7531},{"contestId":1438,"index":"E","solvedCount":911},{"contestId":1438,"index":"D","solvedCount":3161},{"contestId":1438,"index":"C","solvedCount":7640},{"contestId":1438,"index":"B","solvedCount":14228},{"contestId":1438,"index":"A","solvedCount":16982},{"contestId":1437,"index":"E","solvedCount":2554},{"contestId":1437,"index":"B","solvedCount":14411},{"contestId":1437,"index":"A","solvedCount":16219},{"contestId":1436,"index":"B","solvedCount":16286},{"contestId":1433,"index":"D","solvedCount":15635},{"contestId":1433,"index":"C","solvedCount":20313},{"contestId":1430,"index":"C","solvedCount":15198},{"contestId":1430,"index":"A","solvedCount":16646},{"contestId":1428,"index":"D","solvedCount":3672},{"contestId":1427,"index":"E","solvedCount":875},{"contestId":1427,"index":"D","solvedCount":2868},{"contestId":1426,"index":"E","solvedCount":5657},{"contestId":1426,"index":"D","solvedCount":10640},{"contestId":1426,"index":"C","solvedCount":14996},{"contestId":1425,"index":"H","solvedCount":3111},{"contestId":1423,"index":"J","solvedCount":557},{"contestId":1421,"index":"D","solvedCount":3514},{"contestId":1421,"index":"C","solvedCount":9685},{"contestId":1421,"index":"B","solvedCount":11329},{"contestId":1420,"index":"C1","solvedCount":12719},{"contestId":1419,"index":"E","solvedCount":2622},{"contestId":1419,"index":"D2","solvedCount":10801},{"contestId":1419,"index":"D1","solvedCount":16760},{"contestId":1419,"index":"B","solvedCount":13328},{"contestId":1416,"index":"B","solvedCount":4475},{"contestId":1415,"index":"E","solvedCount":1846},{"contestId":1415,"index":"D","solvedCount":3706},{"contestId":1413,"index":"A","solvedCount":13102},{"contestId":1408,"index":"F","solvedCount":1809},{"contestId":1408,"index":"B","solvedCount":7744},{"contestId":1408,"index":"A","solvedCount":11572},{"contestId":1407,"index":"E","solvedCount":1176},{"contestId":1407,"index":"C","solvedCount":8648},{"contestId":1407,"index":"A","solvedCount":16709},{"contestId":1406,"index":"D","solvedCount":2746},{"contestId":1406,"index":"C","solvedCount":7388},{"contestId":1405,"index":"B","solvedCount":16891},{"contestId":1405,"index":"A","solvedCount":19170},{"contestId":1404,"index":"D","solvedCount":617},{"contestId":1404,"index":"C","solvedCount":1892},{"contestId":1401,"index":"C","solvedCount":17224},{"contestId":1401,"index":"B","solvedCount":17919},{"contestId":1401,"index":"A","solvedCount":21637},{"contestId":1400,"index":"C","solvedCount":13009},{"contestId":1400,"index":"A","solvedCount":22845},{"contestId":1399,"index":"D","solvedCount":13252},{"contestId":1396,"index":"E","solvedCount":202},{"contestId":1396,"index":"B","solvedCount":8172},{"contestId":1396,"index":"A","solvedCount":11381},{"contestId":1395,"index":"B","solvedCount":14335},{"contestId":1393,"index":"C","solvedCount":8474},{"contestId":1393,"index":"B","solvedCount":12910},{"contestId":1392,"index":"F","solvedCount":1588},{"contestId":1392,"index":"E","solvedCount":2693},{"contestId":1391,"index":"E","solvedCount":963},{"contestId":1391,"index":"D","solvedCount":3844},{"contestId":1391,"index":"A","solvedCount":21498},{"contestId":1389,"index":"A","solvedCount":25428},{"contestId":1386,"index":"A","solvedCount":177},{"contestId":1385,"index":"E","solvedCount":4740},{"contestId":1384,"index":"B2","solvedCount":2074},{"contestId":1384,"index":"A","solvedCount":15084},{"contestId":1383,"index":"D","solvedCount":415},{"contestId":1383,"index":"B","solvedCount":3867},{"contestId":1381,"index":"C","solvedCount":1166},{"contestId":1381,"index":"A2","solvedCount":10280},{"contestId":1381,"index":"A1","solvedCount":15987},{"contestId":1380,"index":"D","solvedCount":3728},{"contestId":1379,"index":"E","solvedCount":209},{"contestId":1375,"index":"H","solvedCount":204},{"contestId":1375,"index":"G","solvedCount":1140},{"contestId":1375,"index":"F","solvedCount":1500},{"contestId":1375,"index":"E","solvedCount":1986},{"contestId":1375,"index":"D","solvedCount":6941},{"contestId":1375,"index":"C","solvedCount":14881},{"contestId":1375,"index":"B","solvedCount":14570},{"contestId":1375,"index":"A","solvedCount":15967},{"contestId":1374,"index":"F","solvedCount":1053},{"contestId":1373,"index":"F","solvedCount":1302},{"contestId":1373,"index":"E","solvedCount":2340},{"contestId":1372,"index":"C","solvedCount":13308},{"contestId":1372,"index":"A","solvedCount":25867},{"contestId":1371,"index":"D","solvedCount":10704},{"contestId":1370,"index":"E","solvedCount":3924},{"contestId":1370,"index":"B","solvedCount":18926},{"contestId":1368,"index":"E","solvedCount":1529},{"contestId":1368,"index":"C","solvedCount":11004},{"contestId":1368,"index":"B","solvedCount":14247},{"contestId":1367,"index":"D","solvedCount":6703},{"contestId":1367,"index":"C","solvedCount":17736},{"contestId":1366,"index":"E","solvedCount":3184},{"contestId":1366,"index":"D","solvedCount":7019},{"contestId":1365,"index":"G","solvedCount":562},{"contestId":1365,"index":"F","solvedCount":3581},{"contestId":1365,"index":"E","solvedCount":6241},{"contestId":1365,"index":"D","solvedCount":10715},{"contestId":1365,"index":"C","solvedCount":16489},{"contestId":1365,"index":"B","solvedCount":19092},{"contestId":1364,"index":"E","solvedCount":758},{"contestId":1364,"index":"D","solvedCount":3059},{"contestId":1364,"index":"C","solvedCount":9955},{"contestId":1361,"index":"C","solvedCount":1023},{"contestId":1361,"index":"A","solvedCount":7052},{"contestId":1360,"index":"H","solvedCount":3569},{"contestId":1360,"index":"G","solvedCount":6057},{"contestId":1360,"index":"F","solvedCount":9120},{"contestId":1360,"index":"C","solvedCount":23073},{"contestId":1358,"index":"F","solvedCount":355},{"contestId":1358,"index":"E","solvedCount":1674},{"contestId":1355,"index":"F","solvedCount":555},{"contestId":1355,"index":"D","solvedCount":13533},{"contestId":1354,"index":"F","solvedCount":745},{"contestId":1353,"index":"D","solvedCount":12970},{"contestId":1353,"index":"A","solvedCount":28857},{"contestId":1352,"index":"G","solvedCount":12914},{"contestId":1352,"index":"F","solvedCount":11172},{"contestId":1352,"index":"B","solvedCount":22128},{"contestId":1349,"index":"E","solvedCount":44},{"contestId":1349,"index":"B","solvedCount":5995},{"contestId":1348,"index":"D","solvedCount":7050},{"contestId":1348,"index":"C","solvedCount":11766},{"contestId":1348,"index":"B","solvedCount":18312},{"contestId":1344,"index":"B","solvedCount":4968},{"contestId":1343,"index":"F","solvedCount":1027},{"contestId":1343,"index":"B","solvedCount":34372},{"contestId":1342,"index":"D","solvedCount":5104},{"contestId":1342,"index":"B","solvedCount":19674},{"contestId":1340,"index":"D","solvedCount":589},{"contestId":1339,"index":"B","solvedCount":19345},{"contestId":1338,"index":"D","solvedCount":556},{"contestId":1338,"index":"C","solvedCount":2474},{"contestId":1338,"index":"B","solvedCount":6544},{"contestId":1337,"index":"A","solvedCount":25555},{"contestId":1336,"index":"D","solvedCount":364},{"contestId":1335,"index":"D","solvedCount":20470},{"contestId":1335,"index":"B","solvedCount":27388},{"contestId":1334,"index":"D","solvedCount":5958},{"contestId":1334,"index":"C","solvedCount":12515},{"contestId":1333,"index":"E","solvedCount":1106},{"contestId":1333,"index":"D","solvedCount":3249},{"contestId":1333,"index":"A","solvedCount":20291},{"contestId":1332,"index":"E","solvedCount":2905},{"contestId":1332,"index":"D","solvedCount":6947},{"contestId":1332,"index":"B","solvedCount":13710},{"contestId":1329,"index":"D","solvedCount":223},{"contestId":1329,"index":"C","solvedCount":1319},{"contestId":1329,"index":"A","solvedCount":7400},{"contestId":1328,"index":"D","solvedCount":9460},{"contestId":1327,"index":"C","solvedCount":10844},{"contestId":1326,"index":"A","solvedCount":21501},{"contestId":1325,"index":"F","solvedCount":1216},{"contestId":1325,"index":"D","solvedCount":8731},{"contestId":1325,"index":"C","solvedCount":10502},{"contestId":1325,"index":"A","solvedCount":25919},{"contestId":1322,"index":"B","solvedCount":2819},{"contestId":1321,"index":"C","solvedCount":7651},{"contestId":1316,"index":"D","solvedCount":2722},{"contestId":1316,"index":"C","solvedCount":5993},{"contestId":1316,"index":"B","solvedCount":9063},{"contestId":1313,"index":"B","solvedCount":5594},{"contestId":1312,"index":"B","solvedCount":18254},{"contestId":1311,"index":"E","solvedCount":1561},{"contestId":1305,"index":"E","solvedCount":2379},{"contestId":1305,"index":"D","solvedCount":3862},{"contestId":1305,"index":"B","solvedCount":9534},{"contestId":1305,"index":"A","solvedCount":12432},{"contestId":1304,"index":"D","solvedCount":4998},{"contestId":1304,"index":"B","solvedCount":14933},{"contestId":1302,"index":"B","solvedCount":137},{"contestId":1301,"index":"D","solvedCount":3276},{"contestId":1296,"index":"F","solvedCount":2075},{"contestId":1296,"index":"E1","solvedCount":5390},{"contestId":1292,"index":"E","solvedCount":152},{"contestId":1292,"index":"B","solvedCount":4802},{"contestId":1290,"index":"D","solvedCount":341},{"contestId":1290,"index":"B","solvedCount":3840},{"contestId":1288,"index":"F","solvedCount":245},{"contestId":1286,"index":"F","solvedCount":144},{"contestId":1286,"index":"C2","solvedCount":432},{"contestId":1286,"index":"C1","solvedCount":928},{"contestId":1286,"index":"B","solvedCount":3562},{"contestId":1285,"index":"E","solvedCount":1299},{"contestId":1283,"index":"F","solvedCount":1120},{"contestId":1283,"index":"C","solvedCount":10015},{"contestId":1282,"index":"E","solvedCount":775},{"contestId":1282,"index":"D","solvedCount":1655},{"contestId":1280,"index":"F","solvedCount":39},{"contestId":1278,"index":"E","solvedCount":1329},{"contestId":1276,"index":"E","solvedCount":46},{"contestId":1276,"index":"C","solvedCount":1162},{"contestId":1272,"index":"B","solvedCount":11057},{"contestId":1270,"index":"I","solvedCount":117},{"contestId":1270,"index":"G","solvedCount":1082},{"contestId":1270,"index":"E","solvedCount":1730},{"contestId":1270,"index":"D","solvedCount":3744},{"contestId":1270,"index":"C","solvedCount":10588},{"contestId":1270,"index":"B","solvedCount":12775},{"contestId":1268,"index":"A","solvedCount":7003},{"contestId":1267,"index":"L","solvedCount":2078},{"contestId":1267,"index":"I","solvedCount":490},{"contestId":1267,"index":"H","solvedCount":57},{"contestId":1267,"index":"D","solvedCount":143},{"contestId":1267,"index":"C","solvedCount":345},{"contestId":1266,"index":"D","solvedCount":2924},{"contestId":1266,"index":"C","solvedCount":7939},{"contestId":1266,"index":"B","solvedCount":10887},{"contestId":1265,"index":"A","solvedCount":12305},{"contestId":1264,"index":"F","solvedCount":199},{"contestId":1264,"index":"E","solvedCount":333},{"contestId":1264,"index":"B","solvedCount":4784},{"contestId":1256,"index":"F","solvedCount":2372},{"contestId":1255,"index":"C","solvedCount":5491},{"contestId":1254,"index":"C","solvedCount":1008},{"contestId":1254,"index":"B2","solvedCount":2297},{"contestId":1254,"index":"B1","solvedCount":3446},{"contestId":1254,"index":"A","solvedCount":4272},{"contestId":1253,"index":"D","solvedCount":6675},{"contestId":1250,"index":"M","solvedCount":293},{"contestId":1250,"index":"B","solvedCount":2060},{"contestId":1245,"index":"B","solvedCount":11329},{"contestId":1244,"index":"G","solvedCount":1055},{"contestId":1244,"index":"F","solvedCount":1115},{"contestId":1244,"index":"E","solvedCount":3627},{"contestId":1244,"index":"D","solvedCount":5703},{"contestId":1242,"index":"E","solvedCount":75},{"contestId":1242,"index":"A","solvedCount":10175},{"contestId":1237,"index":"H","solvedCount":161},{"contestId":1237,"index":"C2","solvedCount":3439},{"contestId":1237,"index":"C1","solvedCount":5068},{"contestId":1236,"index":"C","solvedCount":8329},{"contestId":1231,"index":"E","solvedCount":490},{"contestId":1228,"index":"F","solvedCount":348},{"contestId":1228,"index":"D","solvedCount":4359},{"contestId":1227,"index":"G","solvedCount":578},{"contestId":1227,"index":"C","solvedCount":4520},{"contestId":1227,"index":"B","solvedCount":7447},{"contestId":1225,"index":"G","solvedCount":223},{"contestId":1225,"index":"F","solvedCount":649},{"contestId":1221,"index":"B","solvedCount":9903},{"contestId":1218,"index":"G","solvedCount":27},{"contestId":1217,"index":"D","solvedCount":3859},{"contestId":1215,"index":"C","solvedCount":8362},{"contestId":1214,"index":"H","solvedCount":284},{"contestId":1214,"index":"E","solvedCount":2100},{"contestId":1213,"index":"E","solvedCount":3969},{"contestId":1209,"index":"C","solvedCount":6014},{"contestId":1208,"index":"C","solvedCount":4987},{"contestId":1207,"index":"B","solvedCount":11205},{"contestId":1205,"index":"F","solvedCount":75},{"contestId":1205,"index":"D","solvedCount":438},{"contestId":1205,"index":"A","solvedCount":11850},{"contestId":1202,"index":"D","solvedCount":3870},{"contestId":1198,"index":"C","solvedCount":2502},{"contestId":1196,"index":"F","solvedCount":1721},{"contestId":1196,"index":"E","solvedCount":2917},{"contestId":1196,"index":"B","solvedCount":12727},{"contestId":1196,"index":"A","solvedCount":22279},{"contestId":1193,"index":"C","solvedCount":26},{"contestId":1188,"index":"A2","solvedCount":886},{"contestId":1187,"index":"C","solvedCount":5067},{"contestId":1186,"index":"D","solvedCount":7287},{"contestId":1182,"index":"D","solvedCount":620},{"contestId":1179,"index":"B","solvedCount":3627},{"contestId":1178,"index":"E","solvedCount":3518},{"contestId":1178,"index":"D","solvedCount":5902},{"contestId":1174,"index":"F","solvedCount":923},{"contestId":1174,"index":"D","solvedCount":3752},{"contestId":1174,"index":"C","solvedCount":9696},{"contestId":1174,"index":"A","solvedCount":13198},{"contestId":1173,"index":"B","solvedCount":7643},{"contestId":1172,"index":"D","solvedCount":325},{"contestId":1170,"index":"H","solvedCount":33},{"contestId":1168,"index":"E","solvedCount":147},{"contestId":1167,"index":"D","solvedCount":5727},{"contestId":1166,"index":"E","solvedCount":2209},{"contestId":1166,"index":"B","solvedCount":9768},{"contestId":1163,"index":"E","solvedCount":446},{"contestId":1158,"index":"D","solvedCount":479},{"contestId":1158,"index":"C","solvedCount":1326},{"contestId":1158,"index":"B","solvedCount":1754},{"contestId":1158,"index":"A","solvedCount":5269},{"contestId":1157,"index":"G","solvedCount":630},{"contestId":1157,"index":"F","solvedCount":1585},{"contestId":1157,"index":"D","solvedCount":2612},{"contestId":1153,"index":"B","solvedCount":7696},{"contestId":1152,"index":"E","solvedCount":750},{"contestId":1152,"index":"B","solvedCount":7378},{"contestId":1151,"index":"C","solvedCount":4169},{"contestId":1151,"index":"B","solvedCount":7559},{"contestId":1149,"index":"A","solvedCount":11349},{"contestId":1148,"index":"G","solvedCount":154},{"contestId":1148,"index":"F","solvedCount":711},{"contestId":1148,"index":"E","solvedCount":1411},{"contestId":1148,"index":"C","solvedCount":4306},{"contestId":1144,"index":"D","solvedCount":8004},{"contestId":1144,"index":"C","solvedCount":11730},{"contestId":1141,"index":"G","solvedCount":1677},{"contestId":1137,"index":"D","solvedCount":868},{"contestId":1136,"index":"C","solvedCount":6585},{"contestId":1136,"index":"B","solvedCount":9984},{"contestId":1133,"index":"F2","solvedCount":2116},{"contestId":1131,"index":"F","solvedCount":4717},{"contestId":1129,"index":"B","solvedCount":1797},{"contestId":1120,"index":"B","solvedCount":318},{"contestId":1119,"index":"G","solvedCount":220},{"contestId":1119,"index":"C","solvedCount":5887},{"contestId":1118,"index":"E","solvedCount":3102},{"contestId":1118,"index":"C","solvedCount":4591},{"contestId":1117,"index":"E","solvedCount":1173},{"contestId":1114,"index":"B","solvedCount":7822},{"contestId":1110,"index":"G","solvedCount":367},{"contestId":1110,"index":"E","solvedCount":3031},{"contestId":1110,"index":"C","solvedCount":7339},{"contestId":1109,"index":"B","solvedCount":3611},{"contestId":1108,"index":"D","solvedCount":11624},{"contestId":1107,"index":"G","solvedCount":721},{"contestId":1104,"index":"A","solvedCount":13720},{"contestId":1103,"index":"C","solvedCount":562},{"contestId":1103,"index":"B","solvedCount":2749},{"contestId":1103,"index":"A","solvedCount":8138},{"contestId":1100,"index":"D","solvedCount":708},{"contestId":1099,"index":"C","solvedCount":7328},{"contestId":1099,"index":"B","solvedCount":9254},{"contestId":1098,"index":"C","solvedCount":703},{"contestId":1098,"index":"B","solvedCount":1233},{"contestId":1098,"index":"A","solvedCount":6738},{"contestId":1097,"index":"E","solvedCount":303},{"contestId":1093,"index":"B","solvedCount":12442},{"contestId":1092,"index":"E","solvedCount":1114},{"contestId":1091,"index":"F","solvedCount":662},{"contestId":1091,"index":"B","solvedCount":9293},{"contestId":1090,"index":"F","solvedCount":145},{"contestId":1090,"index":"D","solvedCount":1269},{"contestId":1090,"index":"C","solvedCount":291},{"contestId":1089,"index":"M","solvedCount":427},{"contestId":1089,"index":"E","solvedCount":1549},{"contestId":1088,"index":"D","solvedCount":2129},{"contestId":1088,"index":"C","solvedCount":6832},{"contestId":1088,"index":"A","solvedCount":13511},{"contestId":1085,"index":"D","solvedCount":4558},{"contestId":1082,"index":"D","solvedCount":3016},{"contestId":1081,"index":"F","solvedCount":314},{"contestId":1081,"index":"E","solvedCount":2002},{"contestId":1081,"index":"B","solvedCount":3894},{"contestId":1081,"index":"A","solvedCount":9945},{"contestId":1080,"index":"D","solvedCount":1324},{"contestId":1078,"index":"E","solvedCount":65},{"contestId":1070,"index":"M","solvedCount":46},{"contestId":1070,"index":"L","solvedCount":152},{"contestId":1068,"index":"C","solvedCount":2689},{"contestId":1067,"index":"C","solvedCount":479},{"contestId":1065,"index":"B","solvedCount":8974},{"contestId":1063,"index":"E","solvedCount":216},{"contestId":1063,"index":"C","solvedCount":2265},{"contestId":1063,"index":"A","solvedCount":8687},{"contestId":1060,"index":"H","solvedCount":110},{"contestId":1059,"index":"C","solvedCount":5995},{"contestId":1056,"index":"D","solvedCount":4270},{"contestId":1054,"index":"G","solvedCount":123},{"contestId":1054,"index":"E","solvedCount":422},{"contestId":1054,"index":"C","solvedCount":3757},{"contestId":1053,"index":"E","solvedCount":131},{"contestId":1045,"index":"E","solvedCount":73},{"contestId":1043,"index":"E","solvedCount":2398},{"contestId":1043,"index":"C","solvedCount":5738},{"contestId":1042,"index":"C","solvedCount":3963},{"contestId":1041,"index":"E","solvedCount":2892},{"contestId":1039,"index":"A","solvedCount":665},{"contestId":1038,"index":"B","solvedCount":10282},{"contestId":1037,"index":"A","solvedCount":9284},{"contestId":1034,"index":"B","solvedCount":1782},{"contestId":1033,"index":"E","solvedCount":362},{"contestId":1032,"index":"C","solvedCount":2941},{"contestId":1031,"index":"E","solvedCount":347},{"contestId":1028,"index":"E","solvedCount":986},{"contestId":1028,"index":"B","solvedCount":6962},{"contestId":1025,"index":"G","solvedCount":317},{"contestId":1025,"index":"E","solvedCount":434},{"contestId":1025,"index":"C","solvedCount":5117},{"contestId":1023,"index":"E","solvedCount":1604},{"contestId":1023,"index":"D","solvedCount":3461},{"contestId":1019,"index":"C","solvedCount":713},{"contestId":1017,"index":"C","solvedCount":5137},{"contestId":1016,"index":"D","solvedCount":3762},{"contestId":1015,"index":"D","solvedCount":6071},{"contestId":1012,"index":"D","solvedCount":209},{"contestId":1012,"index":"B","solvedCount":2986},{"contestId":1009,"index":"D","solvedCount":5047},{"contestId":1004,"index":"D","solvedCount":1137},{"contestId":1004,"index":"C","solvedCount":6413},{"contestId":1004,"index":"B","solvedCount":7969},{"contestId":1003,"index":"E","solvedCount":1866},{"contestId":1003,"index":"B","solvedCount":8574},{"contestId":998,"index":"A","solvedCount":7958},{"contestId":995,"index":"A","solvedCount":1327},{"contestId":990,"index":"D","solvedCount":3184},{"contestId":989,"index":"C","solvedCount":3147},{"contestId":989,"index":"B","solvedCount":6264},{"contestId":985,"index":"D","solvedCount":1786},{"contestId":982,"index":"A","solvedCount":7696},{"contestId":980,"index":"B","solvedCount":4167},{"contestId":976,"index":"D","solvedCount":543},{"contestId":963,"index":"B","solvedCount":2107},{"contestId":962,"index":"E","solvedCount":891},{"contestId":962,"index":"B","solvedCount":6611},{"contestId":960,"index":"C","solvedCount":3286},{"contestId":959,"index":"D","solvedCount":2433},{"contestId":959,"index":"C","solvedCount":4799},{"contestId":952,"index":"G","solvedCount":170},{"contestId":949,"index":"B","solvedCount":3270},{"contestId":940,"index":"C","solvedCount":4708},{"contestId":938,"index":"C","solvedCount":2843},{"contestId":936,"index":"C","solvedCount":952},{"contestId":934,"index":"B","solvedCount":7377},{"contestId":933,"index":"E","solvedCount":120},{"contestId":932,"index":"C","solvedCount":3579},{"contestId":932,"index":"A","solvedCount":8810},{"contestId":931,"index":"B","solvedCount":6087},{"contestId":926,"index":"E","solvedCount":746},{"contestId":925,"index":"D","solvedCount":397},{"contestId":925,"index":"C","solvedCount":1082},{"contestId":923,"index":"F","solvedCount":44},{"contestId":923,"index":"D","solvedCount":962},{"contestId":922,"index":"F","solvedCount":484},{"contestId":916,"index":"C","solvedCount":4139},{"contestId":912,"index":"B","solvedCount":7908},{"contestId":911,"index":"F","solvedCount":943},{"contestId":911,"index":"E","solvedCount":1985},{"contestId":911,"index":"C","solvedCount":6144},{"contestId":910,"index":"C","solvedCount":1349},{"contestId":909,"index":"F","solvedCount":415},{"contestId":909,"index":"B","solvedCount":5503},{"contestId":906,"index":"B","solvedCount":967},{"contestId":901,"index":"D","solvedCount":292},{"contestId":901,"index":"B","solvedCount":1265},{"contestId":901,"index":"A","solvedCount":4499},{"contestId":899,"index":"D","solvedCount":2126},{"contestId":899,"index":"C","solvedCount":6655},{"contestId":899,"index":"A","solvedCount":8581},{"contestId":898,"index":"E","solvedCount":3756},{"contestId":896,"index":"B","solvedCount":1691},{"contestId":894,"index":"C","solvedCount":3612},{"contestId":894,"index":"B","solvedCount":3781},{"contestId":891,"index":"B","solvedCount":2433},{"contestId":888,"index":"G","solvedCount":1735},{"contestId":886,"index":"D","solvedCount":1552},{"contestId":883,"index":"K","solvedCount":853},{"contestId":883,"index":"J","solvedCount":433},{"contestId":883,"index":"B","solvedCount":261},{"contestId":878,"index":"A","solvedCount":4544},{"contestId":877,"index":"C","solvedCount":4879},{"contestId":873,"index":"D","solvedCount":2180},{"contestId":868,"index":"C","solvedCount":3654},{"contestId":865,"index":"D","solvedCount":2157},{"contestId":865,"index":"A","solvedCount":3766},{"contestId":862,"index":"C","solvedCount":3256},{"contestId":858,"index":"F","solvedCount":946},{"contestId":856,"index":"A","solvedCount":1098},{"contestId":854,"index":"B","solvedCount":7355},{"contestId":854,"index":"A","solvedCount":11163},{"contestId":850,"index":"D","solvedCount":246},{"contestId":848,"index":"B","solvedCount":1542},{"contestId":848,"index":"A","solvedCount":4494},{"contestId":847,"index":"L","solvedCount":264},{"contestId":847,"index":"D","solvedCount":805},{"contestId":847,"index":"C","solvedCount":1983},{"contestId":843,"index":"C","solvedCount":282},{"contestId":840,"index":"B","solvedCount":1769},{"contestId":835,"index":"E","solvedCount":750},{"contestId":831,"index":"C","solvedCount":3317},{"contestId":830,"index":"E","solvedCount":146},{"contestId":827,"index":"B","solvedCount":3010},{"contestId":822,"index":"F","solvedCount":215},{"contestId":820,"index":"B","solvedCount":4672},{"contestId":819,"index":"E","solvedCount":288},{"contestId":815,"index":"E","solvedCount":175},{"contestId":815,"index":"B","solvedCount":1199},{"contestId":814,"index":"B","solvedCount":5074},{"contestId":814,"index":"A","solvedCount":8810},{"contestId":811,"index":"D","solvedCount":1241},{"contestId":808,"index":"C","solvedCount":4645},{"contestId":805,"index":"B","solvedCount":11800},{"contestId":804,"index":"E","solvedCount":299},{"contestId":804,"index":"C","solvedCount":1462},{"contestId":804,"index":"A","solvedCount":12428},{"contestId":803,"index":"C","solvedCount":3558},{"contestId":803,"index":"B","solvedCount":5003},{"contestId":803,"index":"A","solvedCount":3698},{"contestId":802,"index":"H","solvedCount":312},{"contestId":801,"index":"B","solvedCount":8146},{"contestId":798,"index":"E","solvedCount":261},{"contestId":798,"index":"D","solvedCount":1475},{"contestId":798,"index":"A","solvedCount":14518},{"contestId":796,"index":"D","solvedCount":3152},{"contestId":796,"index":"C","solvedCount":2575},{"contestId":793,"index":"E","solvedCount":181},{"contestId":788,"index":"D","solvedCount":209},{"contestId":788,"index":"B","solvedCount":1926},{"contestId":780,"index":"E","solvedCount":1943},{"contestId":779,"index":"C","solvedCount":9333},{"contestId":779,"index":"A","solvedCount":8048},{"contestId":778,"index":"D","solvedCount":365},{"contestId":777,"index":"A","solvedCount":8346},{"contestId":776,"index":"F","solvedCount":300},{"contestId":776,"index":"B","solvedCount":12022},{"contestId":774,"index":"H","solvedCount":211},{"contestId":774,"index":"D","solvedCount":1669},{"contestId":774,"index":"C","solvedCount":2861},{"contestId":773,"index":"C","solvedCount":837},{"contestId":772,"index":"C","solvedCount":983},{"contestId":771,"index":"B","solvedCount":6014},{"contestId":768,"index":"B","solvedCount":4727},{"contestId":768,"index":"A","solvedCount":16349},{"contestId":766,"index":"E","solvedCount":2024},{"contestId":766,"index":"B","solvedCount":19093},{"contestId":766,"index":"A","solvedCount":17945},{"contestId":765,"index":"D","solvedCount":2227},{"contestId":764,"index":"B","solvedCount":9544},{"contestId":763,"index":"B","solvedCount":2273},{"contestId":761,"index":"E","solvedCount":1556},{"contestId":761,"index":"D","solvedCount":3226},{"contestId":761,"index":"A","solvedCount":12087},{"contestId":758,"index":"D","solvedCount":2388},{"contestId":758,"index":"C","solvedCount":3459},{"contestId":756,"index":"A","solvedCount":2765},{"contestId":755,"index":"E","solvedCount":675},{"contestId":754,"index":"C","solvedCount":799},{"contestId":754,"index":"A","solvedCount":6663},{"contestId":753,"index":"C","solvedCount":229},{"contestId":753,"index":"B","solvedCount":1006},{"contestId":750,"index":"F","solvedCount":348},{"contestId":749,"index":"B","solvedCount":7025},{"contestId":748,"index":"F","solvedCount":526},{"contestId":748,"index":"D","solvedCount":1541},{"contestId":748,"index":"C","solvedCount":4211},{"contestId":746,"index":"G","solvedCount":1078},{"contestId":746,"index":"D","solvedCount":4185},{"contestId":746,"index":"C","solvedCount":3370},{"contestId":743,"index":"C","solvedCount":8661},{"contestId":743,"index":"B","solvedCount":10869},{"contestId":743,"index":"A","solvedCount":9195},{"contestId":741,"index":"C","solvedCount":1605},{"contestId":740,"index":"B","solvedCount":6670},{"contestId":739,"index":"A","solvedCount":6142},{"contestId":737,"index":"F","solvedCount":51},{"contestId":736,"index":"E","solvedCount":149},{"contestId":735,"index":"C","solvedCount":6375},{"contestId":734,"index":"F","solvedCount":970},{"contestId":733,"index":"E","solvedCount":547},{"contestId":733,"index":"C","solvedCount":3008},{"contestId":732,"index":"C","solvedCount":7996},{"contestId":732,"index":"A","solvedCount":36485},{"contestId":731,"index":"B","solvedCount":6852},{"contestId":730,"index":"H","solvedCount":2557},{"contestId":730,"index":"B","solvedCount":1974},{"contestId":729,"index":"E","solvedCount":1851},{"contestId":729,"index":"D","solvedCount":3045},{"contestId":727,"index":"D","solvedCount":1538},{"contestId":727,"index":"C","solvedCount":4437},{"contestId":725,"index":"C","solvedCount":2382},{"contestId":723,"index":"E","solvedCount":1471},{"contestId":721,"index":"D","solvedCount":2046},{"contestId":720,"index":"C","solvedCount":64},{"contestId":715,"index":"D","solvedCount":152},{"contestId":715,"index":"B","solvedCount":1968},{"contestId":715,"index":"A","solvedCount":5090},{"contestId":713,"index":"B","solvedCount":1298},{"contestId":711,"index":"B","solvedCount":7415},{"contestId":710,"index":"C","solvedCount":4195},{"contestId":708,"index":"B","solvedCount":2795},{"contestId":708,"index":"A","solvedCount":7396},{"contestId":698,"index":"B","solvedCount":4601},{"contestId":690,"index":"F2","solvedCount":57},{"contestId":689,"index":"A","solvedCount":4678},{"contestId":688,"index":"B","solvedCount":19380},{"contestId":686,"index":"B","solvedCount":6636},{"contestId":686,"index":"A","solvedCount":21568},{"contestId":682,"index":"A","solvedCount":13998},{"contestId":681,"index":"D","solvedCount":1552},{"contestId":681,"index":"C","solvedCount":5117},{"contestId":680,"index":"B","solvedCount":16136},{"contestId":680,"index":"A","solvedCount":10462},{"contestId":679,"index":"A","solvedCount":8650},{"contestId":676,"index":"A","solvedCount":11451},{"contestId":675,"index":"C","solvedCount":3077},{"contestId":675,"index":"B","solvedCount":6378},{"contestId":672,"index":"B","solvedCount":13383},{"contestId":670,"index":"F","solvedCount":779},{"contestId":670,"index":"A","solvedCount":12910},{"contestId":667,"index":"B","solvedCount":4929},{"contestId":665,"index":"D","solvedCount":2286},{"contestId":663,"index":"A","solvedCount":2810},{"contestId":662,"index":"D","solvedCount":1499},{"contestId":659,"index":"B","solvedCount":5502},{"contestId":652,"index":"F","solvedCount":264},{"contestId":645,"index":"A","solvedCount":2798},{"contestId":644,"index":"B","solvedCount":2383},{"contestId":644,"index":"A","solvedCount":3912},{"contestId":643,"index":"B","solvedCount":2850},{"contestId":641,"index":"C","solvedCount":2623},{"contestId":639,"index":"B","solvedCount":5602},{"contestId":638,"index":"A","solvedCount":3172},{"contestId":637,"index":"C","solvedCount":2288},{"contestId":637,"index":"B","solvedCount":8109},{"contestId":637,"index":"A","solvedCount":4404},{"contestId":634,"index":"A","solvedCount":2775},{"contestId":633,"index":"E","solvedCount":499},{"contestId":633,"index":"B","solvedCount":5487},{"contestId":632,"index":"B","solvedCount":3244},{"contestId":631,"index":"B","solvedCount":6134},{"contestId":629,"index":"A","solvedCount":10355},{"contestId":626,"index":"B","solvedCount":5705},{"contestId":625,"index":"D","solvedCount":558},{"contestId":625,"index":"C","solvedCount":5939},{"contestId":625,"index":"B","solvedCount":8122},{"contestId":623,"index":"A","solvedCount":3772},{"contestId":622,"index":"D","solvedCount":2192},{"contestId":621,"index":"D","solvedCount":871},{"contestId":618,"index":"F","solvedCount":696},{"contestId":618,"index":"B","solvedCount":6574},{"contestId":617,"index":"D","solvedCount":3727},{"contestId":613,"index":"C","solvedCount":851},{"contestId":612,"index":"E","solvedCount":1018},{"contestId":611,"index":"H","solvedCount":349},{"contestId":610,"index":"D","solvedCount":1035},{"contestId":610,"index":"C","solvedCount":2594},{"contestId":610,"index":"B","solvedCount":5665},{"contestId":609,"index":"B","solvedCount":7035},{"contestId":605,"index":"B","solvedCount":2979},{"contestId":605,"index":"A","solvedCount":6109},{"contestId":600,"index":"C","solvedCount":4061},{"contestId":595,"index":"A","solvedCount":12157},{"contestId":593,"index":"C","solvedCount":228},{"contestId":584,"index":"E","solvedCount":1213},{"contestId":584,"index":"C","solvedCount":5140},{"contestId":582,"index":"B","solvedCount":2832},{"contestId":582,"index":"A","solvedCount":6067},{"contestId":581,"index":"D","solvedCount":2790},{"contestId":578,"index":"E","solvedCount":450},{"contestId":576,"index":"C","solvedCount":2112},{"contestId":576,"index":"B","solvedCount":1399},{"contestId":575,"index":"D","solvedCount":1705},{"contestId":573,"index":"C","solvedCount":853},{"contestId":571,"index":"C","solvedCount":490},{"contestId":570,"index":"D","solvedCount":4041},{"contestId":570,"index":"C","solvedCount":7690},{"contestId":570,"index":"B","solvedCount":12875},{"contestId":566,"index":"E","solvedCount":340},{"contestId":566,"index":"B","solvedCount":220},{"contestId":560,"index":"B","solvedCount":6729},{"contestId":557,"index":"B","solvedCount":6493},{"contestId":553,"index":"B","solvedCount":1931},{"contestId":551,"index":"B","solvedCount":3414},{"contestId":550,"index":"E","solvedCount":1239},{"contestId":550,"index":"D","solvedCount":2728},{"contestId":549,"index":"G","solvedCount":2074},{"contestId":549,"index":"B","solvedCount":1313},{"contestId":547,"index":"D","solvedCount":1434},{"contestId":546,"index":"D","solvedCount":8421},{"contestId":544,"index":"B","solvedCount":6309},{"contestId":543,"index":"E","solvedCount":143},{"contestId":543,"index":"B","solvedCount":3063},{"contestId":542,"index":"C","solvedCount":1019},{"contestId":538,"index":"G","solvedCount":311},{"contestId":538,"index":"D","solvedCount":2302},{"contestId":538,"index":"B","solvedCount":13606},{"contestId":534,"index":"E","solvedCount":306},{"contestId":534,"index":"D","solvedCount":2057},{"contestId":534,"index":"A","solvedCount":10046},{"contestId":533,"index":"E","solvedCount":1849},{"contestId":525,"index":"D","solvedCount":1286},{"contestId":525,"index":"B","solvedCount":7671},{"contestId":518,"index":"C","solvedCount":5366},{"contestId":518,"index":"A","solvedCount":7482},{"contestId":515,"index":"D","solvedCount":2496},{"contestId":513,"index":"D2","solvedCount":332},{"contestId":513,"index":"A","solvedCount":16722},{"contestId":512,"index":"E","solvedCount":302},{"contestId":509,"index":"D","solvedCount":657},{"contestId":509,"index":"B","solvedCount":8000},{"contestId":508,"index":"C","solvedCount":3934},{"contestId":501,"index":"C","solvedCount":4732},{"contestId":500,"index":"C","solvedCount":5259},{"contestId":496,"index":"C","solvedCount":6610},{"contestId":496,"index":"B","solvedCount":5000},{"contestId":493,"index":"D","solvedCount":7902},{"contestId":491,"index":"A","solvedCount":1797},{"contestId":488,"index":"B","solvedCount":1935},{"contestId":487,"index":"C","solvedCount":1764},{"contestId":484,"index":"E","solvedCount":1328},{"contestId":484,"index":"A","solvedCount":7777},{"contestId":482,"index":"B","solvedCount":4745},{"contestId":482,"index":"A","solvedCount":7846},{"contestId":479,"index":"B","solvedCount":6183},{"contestId":478,"index":"B","solvedCount":23576},{"contestId":476,"index":"D","solvedCount":3364},{"contestId":475,"index":"C","solvedCount":725},{"contestId":472,"index":"F","solvedCount":215},{"contestId":472,"index":"E","solvedCount":102},{"contestId":468,"index":"C","solvedCount":1181},{"contestId":468,"index":"A","solvedCount":6687},{"contestId":467,"index":"B","solvedCount":24239},{"contestId":460,"index":"D","solvedCount":818},{"contestId":459,"index":"C","solvedCount":5250},{"contestId":457,"index":"E","solvedCount":51},{"contestId":453,"index":"C","solvedCount":1317},{"contestId":452,"index":"B","solvedCount":1845},{"contestId":449,"index":"C","solvedCount":1813},{"contestId":443,"index":"A","solvedCount":46822},{"contestId":441,"index":"D","solvedCount":925},{"contestId":441,"index":"C","solvedCount":8799},{"contestId":439,"index":"C","solvedCount":3316},{"contestId":432,"index":"E","solvedCount":543},{"contestId":430,"index":"A","solvedCount":1948},{"contestId":429,"index":"C","solvedCount":729},{"contestId":424,"index":"D","solvedCount":486},{"contestId":421,"index":"A","solvedCount":4283},{"contestId":417,"index":"E","solvedCount":632},{"contestId":417,"index":"C","solvedCount":3976},{"contestId":414,"index":"A","solvedCount":8043},{"contestId":409,"index":"H","solvedCount":5931},{"contestId":402,"index":"C","solvedCount":4425},{"contestId":401,"index":"C","solvedCount":13943},{"contestId":398,"index":"C","solvedCount":196},{"contestId":398,"index":"A","solvedCount":863},{"contestId":397,"index":"B","solvedCount":684},{"contestId":394,"index":"C","solvedCount":466},{"contestId":390,"index":"D","solvedCount":420},{"contestId":388,"index":"B","solvedCount":1972},{"contestId":379,"index":"B","solvedCount":6240},{"contestId":370,"index":"D","solvedCount":526},{"contestId":370,"index":"C","solvedCount":1348},{"contestId":369,"index":"B","solvedCount":5068},{"contestId":361,"index":"B","solvedCount":6131},{"contestId":361,"index":"A","solvedCount":11907},{"contestId":359,"index":"E","solvedCount":392},{"contestId":359,"index":"B","solvedCount":5698},{"contestId":359,"index":"A","solvedCount":6731},{"contestId":358,"index":"C","solvedCount":1565},{"contestId":357,"index":"B","solvedCount":6300},{"contestId":356,"index":"D","solvedCount":649},{"contestId":356,"index":"C","solvedCount":1104},{"contestId":355,"index":"A","solvedCount":7394},{"contestId":354,"index":"E","solvedCount":761},{"contestId":353,"index":"D","solvedCount":2057},{"contestId":353,"index":"B","solvedCount":2008},{"contestId":350,"index":"E","solvedCount":641},{"contestId":347,"index":"A","solvedCount":6725},{"contestId":341,"index":"E","solvedCount":277},{"contestId":339,"index":"E","solvedCount":441},{"contestId":339,"index":"C","solvedCount":6819},{"contestId":335,"index":"B","solvedCount":1320},{"contestId":335,"index":"A","solvedCount":1638},{"contestId":333,"index":"C","solvedCount":311},{"contestId":331,"index":"E2","solvedCount":106},{"contestId":331,"index":"E1","solvedCount":81},{"contestId":330,"index":"B","solvedCount":12219},{"contestId":329,"index":"D","solvedCount":323},{"contestId":329,"index":"C","solvedCount":719},{"contestId":329,"index":"A","solvedCount":4074},{"contestId":327,"index":"E","solvedCount":961},{"contestId":327,"index":"D","solvedCount":1881},{"contestId":323,"index":"B","solvedCount":291},{"contestId":323,"index":"A","solvedCount":578},{"contestId":321,"index":"C","solvedCount":4262},{"contestId":317,"index":"E","solvedCount":111},{"contestId":317,"index":"C","solvedCount":381},{"contestId":316,"index":"F3","solvedCount":145},{"contestId":313,"index":"E","solvedCount":463},{"contestId":313,"index":"C","solvedCount":4742},{"contestId":311,"index":"A","solvedCount":3582},{"contestId":306,"index":"D","solvedCount":209},{"contestId":305,"index":"A","solvedCount":3519},{"contestId":303,"index":"A","solvedCount":5673},{"contestId":301,"index":"C","solvedCount":377},{"contestId":301,"index":"A","solvedCount":2635},{"contestId":300,"index":"A","solvedCount":14226},{"contestId":297,"index":"D","solvedCount":376},{"contestId":297,"index":"C","solvedCount":788},{"contestId":297,"index":"B","solvedCount":2999},{"contestId":297,"index":"A","solvedCount":3196},{"contestId":290,"index":"E","solvedCount":146},{"contestId":286,"index":"E","solvedCount":629},{"contestId":286,"index":"A","solvedCount":2741},{"contestId":283,"index":"A","solvedCount":5577},{"contestId":282,"index":"C","solvedCount":7173},{"contestId":277,"index":"B","solvedCount":657},{"contestId":275,"index":"B","solvedCount":2364},{"contestId":272,"index":"E","solvedCount":979},{"contestId":271,"index":"E","solvedCount":401},{"contestId":271,"index":"C","solvedCount":2567},{"contestId":269,"index":"C","solvedCount":1382},{"contestId":268,"index":"C","solvedCount":10567},{"contestId":266,"index":"C","solvedCount":1209},{"contestId":266,"index":"B","solvedCount":71070},{"contestId":264,"index":"A","solvedCount":8633},{"contestId":261,"index":"C","solvedCount":668},{"contestId":260,"index":"D","solvedCount":1042},{"contestId":260,"index":"C","solvedCount":2431},{"contestId":254,"index":"A","solvedCount":4993},{"contestId":246,"index":"C","solvedCount":2276},{"contestId":246,"index":"A","solvedCount":7118},{"contestId":245,"index":"D","solvedCount":1734},{"contestId":241,"index":"G","solvedCount":500},{"contestId":238,"index":"B","solvedCount":1057},{"contestId":238,"index":"A","solvedCount":1787},{"contestId":234,"index":"H","solvedCount":512},{"contestId":234,"index":"G","solvedCount":1216},{"contestId":232,"index":"C","solvedCount":207},{"contestId":232,"index":"A","solvedCount":2058},{"contestId":231,"index":"B","solvedCount":2958},{"contestId":226,"index":"D","solvedCount":821},{"contestId":225,"index":"A","solvedCount":6922},{"contestId":220,"index":"B","solvedCount":6016},{"contestId":218,"index":"A","solvedCount":5582},{"contestId":214,"index":"B","solvedCount":3954},{"contestId":213,"index":"D","solvedCount":295},{"contestId":209,"index":"C","solvedCount":505},{"contestId":209,"index":"B","solvedCount":268},{"contestId":201,"index":"A","solvedCount":2575},{"contestId":199,"index":"A","solvedCount":15402},{"contestId":198,"index":"D","solvedCount":69},{"contestId":197,"index":"A","solvedCount":4587},{"contestId":196,"index":"C","solvedCount":664},{"contestId":193,"index":"C","solvedCount":407},{"contestId":193,"index":"A","solvedCount":2665},{"contestId":183,"index":"A","solvedCount":444},{"contestId":180,"index":"F","solvedCount":1730},{"contestId":176,"index":"C","solvedCount":397},{"contestId":173,"index":"D","solvedCount":211},{"contestId":171,"index":"A","solvedCount":3155},{"contestId":161,"index":"B","solvedCount":1730},{"contestId":156,"index":"B","solvedCount":1829},{"contestId":148,"index":"C","solvedCount":2533},{"contestId":148,"index":"A","solvedCount":49847},{"contestId":145,"index":"B","solvedCount":1837},{"contestId":142,"index":"B","solvedCount":1862},{"contestId":141,"index":"E","solvedCount":580},{"contestId":141,"index":"C","solvedCount":1985},{"contestId":135,"index":"C","solvedCount":1148},{"contestId":134,"index":"C","solvedCount":368},{"contestId":132,"index":"D","solvedCount":535},{"contestId":128,"index":"D","solvedCount":915},{"contestId":128,"index":"B","solvedCount":1853},{"contestId":126,"index":"C","solvedCount":572},{"contestId":125,"index":"D","solvedCount":288},{"contestId":125,"index":"C","solvedCount":685},{"contestId":119,"index":"B","solvedCount":953},{"contestId":118,"index":"B","solvedCount":18435},{"contestId":110,"index":"B","solvedCount":7438},{"contestId":109,"index":"D","solvedCount":538},{"contestId":103,"index":"C","solvedCount":797},{"contestId":98,"index":"D","solvedCount":153},{"contestId":97,"index":"B","solvedCount":596},{"contestId":91,"index":"D","solvedCount":218},{"contestId":86,"index":"B","solvedCount":337},{"contestId":85,"index":"A","solvedCount":1498},{"contestId":82,"index":"B","solvedCount":1643},{"contestId":81,"index":"D","solvedCount":554},{"contestId":78,"index":"B","solvedCount":7361},{"contestId":74,"index":"E","solvedCount":103},{"contestId":66,"index":"D","solvedCount":2212},{"contestId":63,"index":"D","solvedCount":914},{"contestId":59,"index":"D","solvedCount":478},{"contestId":53,"index":"C","solvedCount":4568},{"contestId":49,"index":"C","solvedCount":1241},{"contestId":48,"index":"H","solvedCount":99},{"contestId":45,"index":"J","solvedCount":660},{"contestId":45,"index":"E","solvedCount":430},{"contestId":44,"index":"J","solvedCount":438},{"contestId":43,"index":"D","solvedCount":893},{"contestId":42,"index":"D","solvedCount":314},{"contestId":42,"index":"C","solvedCount":368},{"contestId":41,"index":"E","solvedCount":1413},{"contestId":40,"index":"A","solvedCount":2430},{"contestId":36,"index":"E","solvedCount":289},{"contestId":30,"index":"E","solvedCount":449},{"contestId":29,"index":"D","solvedCount":1545},{"contestId":27,"index":"C","solvedCount":2038},{"contestId":26,"index":"E","solvedCount":295},{"contestId":26,"index":"C","solvedCount":608},{"contestId":23,"index":"C","solvedCount":869},{"contestId":23,"index":"B","solvedCount":2134},{"contestId":14,"index":"C","solvedCount":2346},{"contestId":12,"index":"E","solvedCount":757},{"contestId":11,"index":"A","solvedCount":7456},{"contestId":10,"index":"E","solvedCount":482},{"contestId":8,"index":"B","solvedCount":2875},{"contestId":7,"index":"A","solvedCount":5019},{"contestId":5,"index":"C","solvedCount":7748},{"contestId":4,"index":"B","solvedCount":15260}]}}

