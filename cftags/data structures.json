{"status":"OK","result":{"problems":[{"contestId":1601,"index":"E","name":"Phys Ed Online","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["data structures","dp","greedy"]},{"contestId":1601,"index":"D","name":"Difficult Mountain","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["data structures","dp","greedy","sortings"]},{"contestId":1601,"index":"C","name":"Optimal Insertion","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["data structures","divide and conquer","dp","greedy","sortings"]},{"contestId":1601,"index":"B","name":"Frog Traveler","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["data structures","dfs and similar","dp","graphs","shortest paths","two pointers"]},{"contestId":1599,"index":"I","name":"Desert","type":"PROGRAMMING","rating":2700,"tags":["data structures","graphs"]},{"contestId":1599,"index":"E","name":"Two Arrays","type":"PROGRAMMING","rating":3200,"tags":["data structures","matrices"]},{"contestId":1598,"index":"F","name":"RBS","type":"PROGRAMMING","rating":2400,"tags":["binary search","bitmasks","brute force","data structures","dp"]},{"contestId":1598,"index":"E","name":"Staircases","type":"PROGRAMMING","rating":2100,"tags":["brute force","combinatorics","data structures","dfs and similar","dp","implementation","math"]},{"contestId":1598,"index":"D","name":"Training Session","type":"PROGRAMMING","rating":1700,"tags":["combinatorics","data structures","geometry","implementation","math"]},{"contestId":1598,"index":"C","name":"Delete Two Elements","type":"PROGRAMMING","rating":1200,"tags":["data structures","dp","implementation","math","two pointers"]},{"contestId":1593,"index":"G","name":"Changing Brackets","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","data structures","dp","greedy"]},{"contestId":1593,"index":"E","name":"Gardener and Tree","type":"PROGRAMMING","rating":1600,"tags":["brute force","data structures","dfs and similar","greedy","implementation","trees"]},{"contestId":1588,"index":"F","name":"Jumping Through the Array","type":"PROGRAMMING","points":3750.0,"rating":3500,"tags":["data structures","graphs","two pointers"]},{"contestId":1584,"index":"E","name":"Game with Stones","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["binary search","data structures","games","greedy"]},{"contestId":1583,"index":"H","name":"Omkar and Tours","type":"PROGRAMMING","points":3500.0,"rating":3300,"tags":["data structures","divide and conquer","sortings","trees"]},{"contestId":1583,"index":"G","name":"Omkar and Time Travel","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","math"]},{"contestId":1583,"index":"C","name":"Omkar and Determination","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","dp"]},{"contestId":1582,"index":"G","name":"Kuzya and Homework","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["data structures","number theory"]},{"contestId":1582,"index":"E","name":"Pchelyonok and Segments","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["binary search","data structures","dp","greedy","math"]},{"contestId":1582,"index":"C","name":"Grandma Capa Knits a Scarf","type":"PROGRAMMING","points":1500.0,"rating":1200,"tags":["brute force","data structures","greedy","strings","two pointers"]},{"contestId":1580,"index":"E","name":"Railway Construction","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["brute force","constructive algorithms","data structures","graphs","shortest paths"]},{"contestId":1580,"index":"C","name":"Train Maintenance","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["brute force","data structures","implementation"]},{"contestId":1580,"index":"A","name":"Portal","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["brute force","data structures","dp","greedy","implementation"]},{"contestId":1579,"index":"E2","name":"Array Optimization by Deque","type":"PROGRAMMING","rating":1700,"tags":["data structures","greedy"]},{"contestId":1578,"index":"J","name":"Just Kingdom","type":"PROGRAMMING","rating":3100,"tags":["brute force","data structures","dfs and similar"]},{"contestId":1578,"index":"B","name":"Building Forest Trails","type":"PROGRAMMING","rating":2800,"tags":["data structures","dsu"]},{"contestId":1575,"index":"M","name":"Managing Telephone Poles","type":"PROGRAMMING","rating":2400,"tags":["data structures","geometry"]},{"contestId":1575,"index":"L","name":"Longest Array Deconstruction","type":"PROGRAMMING","rating":2100,"tags":["data structures","divide and conquer","dp","sortings"]},{"contestId":1575,"index":"I","name":"Illusions of the Desert","type":"PROGRAMMING","rating":2300,"tags":["data structures","trees"]},{"contestId":1575,"index":"E","name":"Eye-Pleasing City Park Tour","type":"PROGRAMMING","rating":2600,"tags":["data structures","trees"]},{"contestId":1575,"index":"C","name":"Cyclic Sum","type":"PROGRAMMING","rating":3000,"tags":["data structures","fft","number theory"]},{"contestId":1575,"index":"A","name":"Another Sorting Problem","type":"PROGRAMMING","rating":1100,"tags":["data structures","sortings","strings"]},{"contestId":1574,"index":"D","name":"The Strongest Build","type":"PROGRAMMING","rating":2000,"tags":["binary search","brute force","data structures","dfs and similar","graphs","greedy","hashing","implementation"]},{"contestId":1572,"index":"F","name":"Stations","type":"PROGRAMMING","points":3250.0,"rating":3400,"tags":["data structures"]},{"contestId":1572,"index":"A","name":"Book","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["binary search","brute force","data structures","dp","graphs","implementation","sortings"]},{"contestId":1571,"index":"I","name":"Physical Examination","type":"PROGRAMMING","tags":["*special","binary search","data structures"]},{"contestId":1571,"index":"G","name":"A Battle Against a Dragon","type":"PROGRAMMING","tags":["*special","data structures","dp"]},{"contestId":1570,"index":"H","name":"Chainword","type":"PROGRAMMING","tags":["*special","data structures","strings"]},{"contestId":1569,"index":"D","name":"Inconvenient Pairs","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","implementation","sortings","two pointers"]},{"contestId":1567,"index":"E","name":"Non-Decreasing Dilemma","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","divide and conquer","math"]},{"contestId":1566,"index":"G","name":"Four Vertices","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["constructive algorithms","data structures","graphs","greedy","implementation","shortest paths"]},{"contestId":1566,"index":"F","name":"Points Movement","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dp","greedy","implementation","sortings"]},{"contestId":1566,"index":"D2","name":"Seating Arrangements (hard version) ","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","greedy","implementation","sortings","two pointers"]},{"contestId":1566,"index":"D1","name":"Seating Arrangements (easy version) ","type":"PROGRAMMING","points":750.0,"rating":1100,"tags":["data structures","greedy","sortings"]},{"contestId":1562,"index":"D2","name":"Two Hundred Twenty One (hard version)","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["data structures","math"]},{"contestId":1562,"index":"D1","name":"Two Hundred Twenty One (easy version)","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["data structures","dp","math"]},{"contestId":1561,"index":"D1","name":"Up the Strip (simplified version)","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["brute force","data structures","dp","math","number theory"]},{"contestId":1558,"index":"F","name":"Strange Sort","type":"PROGRAMMING","points":3500.0,"rating":3300,"tags":["data structures","sortings"]},{"contestId":1558,"index":"D","name":"Top-Notch Insertions","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["combinatorics","data structures"]},{"contestId":1557,"index":"D","name":"Ezzat and Grid","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dp","greedy"]},{"contestId":1556,"index":"G","name":"Gates to Another World","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["bitmasks","data structures","dsu","two pointers"]},{"contestId":1556,"index":"E","name":"Equilibrium","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures","dp","greedy"]},{"contestId":1555,"index":"F","name":"Good Graph","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1555,"index":"E","name":"Boring Segments","type":"PROGRAMMING","rating":2100,"tags":["data structures","sortings","trees","two pointers"]},{"contestId":1553,"index":"F","name":"Pairwise Modulo","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","math"]},{"contestId":1552,"index":"F","name":"Telepanting","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["binary search","data structures","dp","sortings"]},{"contestId":1552,"index":"E","name":"Colors and Intervals","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1551,"index":"B2","name":"Wonderful Coloring - 2","type":"PROGRAMMING","rating":1400,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1550,"index":"F","name":"Jumping Around","type":"PROGRAMMING","rating":2700,"tags":["binary search","data structures","divide and conquer","dp","dsu","graphs","shortest paths"]},{"contestId":1548,"index":"E","name":"Gregor and the Two Painters","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","graphs","greedy","math"]},{"contestId":1548,"index":"B","name":"Integers Have Friends","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","data structures","divide and conquer","math","number theory","two pointers"]},{"contestId":1547,"index":"F","name":"Array Stabilization (GCD version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","brute force","data structures","divide and conquer","number theory","two pointers"]},{"contestId":1547,"index":"E","name":"Air Conditioners","type":"PROGRAMMING","rating":1500,"tags":["data structures","dp","implementation","shortest paths","sortings","two pointers"]},{"contestId":1545,"index":"F","name":"AquaMoon and Potatoes","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["brute force","data structures","dp"]},{"contestId":1545,"index":"E2","name":"AquaMoon and Time Stop (hard version)","type":"PROGRAMMING","points":2000.0,"rating":3500,"tags":["data structures","dp"]},{"contestId":1545,"index":"E1","name":"AquaMoon and Time Stop (easy version)","type":"PROGRAMMING","points":2000.0,"rating":3500,"tags":["data structures","dp"]},{"contestId":1540,"index":"D","name":"Inverse Inversions","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["binary search","brute force","data structures"]},{"contestId":1539,"index":"F","name":"Strange Array","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","greedy","sortings"]},{"contestId":1539,"index":"E","name":"Game with Cards","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1538,"index":"E","name":"Funny Substrings","type":"PROGRAMMING","rating":2100,"tags":["data structures","hashing","implementation","matrices","strings"]},{"contestId":1538,"index":"C","name":"Number of Pairs","type":"PROGRAMMING","rating":1300,"tags":["binary search","data structures","math","two pointers"]},{"contestId":1537,"index":"E2","name":"Erase and Extend (Hard Version)","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","data structures","greedy","hashing","string suffix structures","strings","two pointers"]},{"contestId":1536,"index":"D","name":"Omkar and Medians","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","greedy","implementation"]},{"contestId":1536,"index":"C","name":"Diluc and Kaeya","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","dp","hashing","number theory"]},{"contestId":1535,"index":"F","name":"String Distance","type":"PROGRAMMING","rating":3000,"tags":["binary search","brute force","data structures","hashing","implementation","strings"]},{"contestId":1535,"index":"E","name":"Gold Transfer","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures","dp","greedy","interactive","trees"]},{"contestId":1535,"index":"D","name":"Playoff Tournament","type":"PROGRAMMING","rating":1800,"tags":["data structures","dfs and similar","dp","implementation","trees"]},{"contestId":1534,"index":"G","name":"A New Beginning","type":"PROGRAMMING","points":3250.0,"rating":3300,"tags":["data structures","dp","geometry","sortings"]},{"contestId":1533,"index":"H","name":"Submatrices","type":"PROGRAMMING","tags":["*special","bitmasks","data structures","dp"]},{"contestId":1533,"index":"E","name":"Chess Team Forming","type":"PROGRAMMING","tags":["*special","binary search","data structures","greedy"]},{"contestId":1533,"index":"C","name":"Sweets","type":"PROGRAMMING","tags":["*special","data structures","implementation"]},{"contestId":1530,"index":"H","name":"Turing\u0027s Award","type":"PROGRAMMING","points":4750.0,"rating":3400,"tags":["data structures","dp"]},{"contestId":1528,"index":"C","name":"Trees of Tranquillity","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1527,"index":"E","name":"Partition Game","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["binary search","data structures","divide and conquer","dp"]},{"contestId":1526,"index":"D","name":"Kill Anton","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["brute force","constructive algorithms","data structures","math","strings"]},{"contestId":1526,"index":"C2","name":"Potions (Hard Version)","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","greedy"]},{"contestId":1526,"index":"C1","name":"Potions (Easy Version)","type":"PROGRAMMING","points":750.0,"rating":1500,"tags":["brute force","data structures","dp","greedy"]},{"contestId":1525,"index":"C","name":"Robot Collisions","type":"PROGRAMMING","rating":2000,"tags":["data structures","greedy","implementation","sortings"]},{"contestId":1523,"index":"H","name":"Hopping Around the Array ","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["data structures","dp"]},{"contestId":1523,"index":"G","name":"Try Booking","type":"PROGRAMMING","points":3250.0,"rating":3200,"tags":["data structures","divide and conquer"]},{"contestId":1523,"index":"C","name":"Compression and Expansion","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","data structures","greedy","implementation","trees"]},{"contestId":1521,"index":"D","name":"Nastia Plays with a Tree","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"contestId":1520,"index":"F2","name":"Guess the K-th Zero (Hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","constructive algorithms","data structures","interactive"]},{"contestId":1520,"index":"D","name":"Same Differences","type":"PROGRAMMING","rating":1200,"tags":["data structures","hashing","math"]},{"contestId":1519,"index":"C","name":"Berland Regional","type":"PROGRAMMING","rating":1400,"tags":["brute force","data structures","greedy","number theory","sortings"]},{"contestId":1517,"index":"E","name":"Group Photo","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures","implementation","two pointers"]},{"contestId":1516,"index":"D","name":"Cut","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["binary search","data structures","dp","graphs","number theory","two pointers"]},{"contestId":1515,"index":"I","name":"Phoenix and Diamonds","type":"PROGRAMMING","points":5000.0,"rating":3400,"tags":["binary search","data structures","sortings"]},{"contestId":1515,"index":"H","name":"Phoenix and Bits","type":"PROGRAMMING","points":4250.0,"rating":3500,"tags":["bitmasks","brute force","data structures","sortings"]},{"contestId":1515,"index":"C","name":"Phoenix and Towers","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1514,"index":"D","name":"Cut and Stick","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","greedy","implementation","sortings"]},{"contestId":1513,"index":"F","name":"Swapping Problem","type":"PROGRAMMING","points":3500.0,"rating":2500,"tags":["brute force","constructive algorithms","data structures","sortings"]},{"contestId":1512,"index":"D","name":"Corrupted Array","type":"PROGRAMMING","rating":1200,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1511,"index":"G","name":"Chips on a Board","type":"PROGRAMMING","rating":2700,"tags":["bitmasks","brute force","data structures","dp","games","two pointers"]},{"contestId":1511,"index":"F","name":"Chainword","type":"PROGRAMMING","rating":2700,"tags":["brute force","data structures","dp","matrices","string suffix structures","strings"]},{"contestId":1511,"index":"C","name":"Yet Another Card Deck","type":"PROGRAMMING","rating":1100,"tags":["brute force","data structures","implementation","trees"]},{"contestId":1508,"index":"F","name":"Optimal Encoding","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["brute force","data structures"]},{"contestId":1508,"index":"E","name":"Tree Calendar","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["brute force","constructive algorithms","data structures","dfs and similar","sortings","trees"]},{"contestId":1508,"index":"C","name":"Complete the MST","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["bitmasks","brute force","data structures","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1506,"index":"G","name":"Maximize the Remaining String","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dp","greedy","strings"]},{"contestId":1506,"index":"D","name":"Epic Transformation","type":"PROGRAMMING","rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1503,"index":"F","name":"Balance the Cards","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation"]},{"contestId":1503,"index":"D","name":"Flip the Cards","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["2-sat","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"contestId":1503,"index":"C","name":"Travelling Salesman Problem","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["binary search","data structures","dp","greedy","shortest paths","sortings","two pointers"]},{"contestId":1500,"index":"E","name":"Subset Trick","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["binary search","data structures"]},{"contestId":1500,"index":"D","name":"Tiles for Bathroom","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","sortings","two pointers"]},{"contestId":1499,"index":"G","name":"Graph Coloring","type":"PROGRAMMING","rating":3100,"tags":["data structures","graphs","interactive"]},{"contestId":1499,"index":"C","name":"Minimum Grid Path","type":"PROGRAMMING","rating":1500,"tags":["brute force","data structures","greedy","math"]},{"contestId":1498,"index":"F","name":"Christmas Game","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["bitmasks","data structures","dfs and similar","dp","games","math","trees"]},{"contestId":1498,"index":"C","name":"Planar Reflections","type":"PROGRAMMING","points":1750.0,"rating":1600,"tags":["brute force","data structures","dp"]},{"contestId":1498,"index":"B","name":"Box Fitting","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["binary search","bitmasks","data structures","greedy"]},{"contestId":1497,"index":"E2","name":"Square-free division (hard version)","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["data structures","dp","greedy","math","number theory","two pointers"]},{"contestId":1497,"index":"E1","name":"Square-free division (easy version)","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","dp","greedy","math","number theory","two pointers"]},{"contestId":1497,"index":"A","name":"Meximization","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","data structures","greedy","sortings"]},{"contestId":1495,"index":"F","name":"Squares","type":"PROGRAMMING","points":3250.0,"rating":3300,"tags":["constructive algorithms","data structures","dp","graphs","trees"]},{"contestId":1495,"index":"E","name":"Qingshan and Daniel","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["brute force","data structures","greedy","implementation"]},{"contestId":1494,"index":"E","name":"A-Z Graph","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","data structures","graphs","hashing"]},{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"contestId":1493,"index":"D","name":"GCD of an Array","type":"PROGRAMMING","points":2250.0,"rating":2100,"tags":["brute force","data structures","hashing","implementation","math","number theory","sortings","two pointers"]},{"contestId":1492,"index":"C","name":"Maximum width","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["binary search","data structures","dp","greedy","two pointers"]},{"contestId":1492,"index":"B","name":"Card Deck","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["data structures","greedy","math"]},{"contestId":1491,"index":"I","name":"Ruler Of The Zoo","type":"PROGRAMMING","points":5000.0,"rating":3500,"tags":["brute force","data structures"]},{"contestId":1491,"index":"H","name":"Yuezheng Ling and Dynamic Tree","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["data structures","trees"]},{"contestId":1491,"index":"C","name":"Pekora and Trampoline","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["brute force","data structures","dp","greedy","implementation"]},{"contestId":1490,"index":"G","name":"Old Floppy Drive ","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","math"]},{"contestId":1490,"index":"F","name":"Equalize the Array","type":"PROGRAMMING","rating":1500,"tags":["binary search","data structures","greedy","math","sortings"]},{"contestId":1490,"index":"E","name":"Accidental Victory","type":"PROGRAMMING","rating":1400,"tags":["binary search","data structures","greedy"]},{"contestId":1488,"index":"J","name":"Flower Shop","type":"PROGRAMMING","rating":3100,"tags":["*special","data structures","fft","math"]},{"contestId":1488,"index":"H","name":"Build From Suffixes","type":"PROGRAMMING","rating":2800,"tags":["*special","combinatorics","data structures"]},{"contestId":1488,"index":"G","name":"Painting Numbers","type":"PROGRAMMING","rating":2500,"tags":["*special","data structures","greedy","number theory"]},{"contestId":1488,"index":"F","name":"Dogecoin","type":"PROGRAMMING","rating":2300,"tags":["*special","*special","binary search","data structures"]},{"contestId":1488,"index":"E","name":"Palindromic Doubles","type":"PROGRAMMING","rating":2200,"tags":["*special","data structures","dp"]},{"contestId":1487,"index":"E","name":"Cheap Dinner","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","graphs","greedy","implementation","sortings","two pointers"]},{"contestId":1486,"index":"F","name":"Pairs of Paths","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["combinatorics","data structures","dfs and similar","dp","trees"]},{"contestId":1486,"index":"D","name":"Max Median","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["binary search","data structures","dp"]},{"contestId":1485,"index":"F","name":"Copy or Prefix Sum","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["combinatorics","data structures","dp","sortings"]},{"contestId":1482,"index":"H","name":"Exam","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","string suffix structures","trees"]},{"contestId":1482,"index":"E","name":"Skyline Photo","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","divide and conquer","dp"]},{"contestId":1482,"index":"D","name":"Playlist","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","dsu","implementation","shortest paths"]},{"contestId":1481,"index":"E","name":"Sorting Books","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","dp","greedy"]},{"contestId":1479,"index":"D","name":"Odd Mineral Resource","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["binary search","bitmasks","brute force","data structures","probabilities","trees"]},{"contestId":1479,"index":"B2","name":"Painting the Array II","type":"PROGRAMMING","points":750.0,"rating":2100,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1479,"index":"B1","name":"Painting the Array I","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["constructive algorithms","data structures","dp","greedy","implementation"]},{"contestId":1477,"index":"E","name":"Nezzar and Tournaments","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["data structures","greedy"]},{"contestId":1477,"index":"B","name":"Nezzar and Binary String","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","greedy"]},{"contestId":1476,"index":"G","name":"Minimum Difference","type":"PROGRAMMING","rating":3100,"tags":["data structures","hashing","sortings","two pointers"]},{"contestId":1476,"index":"F","name":"Lanterns","type":"PROGRAMMING","rating":3000,"tags":["binary search","data structures","dp"]},{"contestId":1476,"index":"E","name":"Pattern Matching","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","data structures","dfs and similar","graphs","hashing","sortings","strings"]},{"contestId":1474,"index":"D","name":"Cleaning","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures","dp","greedy","math"]},{"contestId":1474,"index":"C","name":"Array Destruction","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["brute force","constructive algorithms","data structures","greedy","implementation","sortings"]},{"contestId":1473,"index":"D","name":"Program","type":"PROGRAMMING","rating":1700,"tags":["data structures","dp","implementation","strings"]},{"contestId":1472,"index":"E","name":"Correct Placement","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","dp","sortings","two pointers"]},{"contestId":1470,"index":"E","name":"Strange Permutation","type":"PROGRAMMING","points":2000.0,"rating":3200,"tags":["binary search","combinatorics","data structures","dp","graphs","implementation","two pointers"]},{"contestId":1469,"index":"F","name":"Power Sockets","type":"PROGRAMMING","rating":2600,"tags":["binary search","data structures","greedy"]},{"contestId":1468,"index":"M","name":"Similar Sets","type":"PROGRAMMING","rating":2300,"tags":["data structures","graphs","implementation"]},{"contestId":1468,"index":"C","name":"Berpizza","type":"PROGRAMMING","rating":1400,"tags":["data structures","implementation"]},{"contestId":1468,"index":"B","name":"Bakery","type":"PROGRAMMING","rating":2900,"tags":["data structures","dsu"]},{"contestId":1468,"index":"A","name":"LaIS","type":"PROGRAMMING","rating":2200,"tags":["data structures","dp","greedy"]},{"contestId":1467,"index":"E","name":"Distinctive Roots in a Tree","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":1466,"index":"I","name":"The Riddle of the Sphinx","type":"PROGRAMMING","points":4000.0,"rating":3400,"tags":["binary search","data structures","data structures","interactive"]},{"contestId":1466,"index":"D","name":"13th Labour of Heracles","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["data structures","greedy","sortings","trees"]},{"contestId":1464,"index":"F","name":"My Beautiful Madness","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["data structures","trees"]},{"contestId":1462,"index":"F","name":"The Treasure of The Segments","type":"PROGRAMMING","rating":1800,"tags":["binary search","data structures","greedy"]},{"contestId":1461,"index":"D","name":"Divide and Summarize","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["binary search","brute force","data structures","divide and conquer","implementation","sortings"]},{"contestId":1458,"index":"F","name":"Range Diameter Sum","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["data structures","trees"]},{"contestId":1458,"index":"E","name":"Nim Shortcuts","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["data structures","games"]},{"contestId":1458,"index":"D","name":"Flip and Reverse","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["data structures","graphs","greedy"]},{"contestId":1455,"index":"G","name":"Forbidden Value","type":"PROGRAMMING","rating":2900,"tags":["data structures","dp"]},{"contestId":1454,"index":"F","name":"Array Partition","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures","greedy","two pointers"]},{"contestId":1452,"index":"G","name":"Game On Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1450,"index":"D","name":"Rating Compression","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["binary search","data structures","greedy","implementation","two pointers"]},{"contestId":1446,"index":"F","name":"Line Distance","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["binary search","data structures","geometry"]},{"contestId":1446,"index":"D2","name":"Frequency Problem (Hard Version)","type":"PROGRAMMING","points":750.0,"rating":3000,"tags":["data structures","greedy","two pointers"]},{"contestId":1446,"index":"D1","name":"Frequency Problem (Easy Version)","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["data structures","greedy"]},{"contestId":1446,"index":"C","name":"Xor Tree","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["binary search","bitmasks","data structures","divide and conquer","dp","trees"]},{"contestId":1444,"index":"C","name":"Team-Building","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["data structures","dfs and similar","dsu","graphs"]},{"contestId":1442,"index":"D","name":"Sum","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["data structures","divide and conquer","dp","greedy"]},{"contestId":1442,"index":"B","name":"Identify the Operations","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["combinatorics","data structures","dsu","greedy","implementation"]},{"contestId":1439,"index":"E","name":"Cheat and Win","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["bitmasks","data structures","games","trees"]},{"contestId":1439,"index":"C","name":"Greedy Shopping","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["binary search","data structures","divide and conquer","greedy","implementation"]},{"contestId":1439,"index":"B","name":"Graph Subset Problem","type":"PROGRAMMING","points":1250.0,"rating":2600,"tags":["constructive algorithms","data structures","graphs"]},{"contestId":1438,"index":"B","name":"Valerii Against Everyone","type":"PROGRAMMING","points":750.0,"rating":1000,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1437,"index":"G","name":"Death DBMS","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":1437,"index":"E","name":"Make It Increasing","type":"PROGRAMMING","rating":2200,"tags":["binary search","constructive algorithms","data structures","dp","implementation"]},{"contestId":1436,"index":"E","name":"Complicated Computations","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","two pointers"]},{"contestId":1430,"index":"E","name":"String Reversal","type":"PROGRAMMING","rating":1900,"tags":["data structures","greedy","strings"]},{"contestId":1430,"index":"D","name":"String Deletion","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","greedy","two pointers"]},{"contestId":1430,"index":"C","name":"Numbers on Whiteboard","type":"PROGRAMMING","rating":1000,"tags":["constructive algorithms","data structures","greedy","implementation","math"]},{"contestId":1428,"index":"F","name":"Fruit Sequences","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"contestId":1428,"index":"E","name":"Carrots for Rabbits","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","data structures","greedy","math","sortings"]},{"contestId":1428,"index":"C","name":"ABBB","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["brute force","data structures","greedy","strings"]},{"contestId":1427,"index":"F","name":"Boring Card Game","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","greedy","trees"]},{"contestId":1426,"index":"D","name":"Non-zero Segments","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1425,"index":"I","name":"Impressive Harvesting of The Orchard","type":"PROGRAMMING","rating":2800,"tags":["data structures"]},{"contestId":1424,"index":"G","name":"Years","type":"PROGRAMMING","rating":1300,"tags":["data structures","sortings"]},{"contestId":1423,"index":"H","name":"Virus","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","dsu","graphs"]},{"contestId":1423,"index":"G","name":"Growing flowers","type":"PROGRAMMING","rating":3500,"tags":["data structures"]},{"contestId":1422,"index":"F","name":"Boring Queries","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["data structures","math","number theory"]},{"contestId":1420,"index":"D","name":"Rescue Nibel!","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["combinatorics","data structures","sortings"]},{"contestId":1420,"index":"C2","name":"Pokémon Army (hard version)","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["data structures","divide and conquer","dp","greedy","implementation"]},{"contestId":1419,"index":"F","name":"Rain of Fire","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["binary search","data structures","dfs and similar","dsu","graphs","implementation"]},{"contestId":1418,"index":"G","name":"Three Occurrences","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","hashing","two pointers"]},{"contestId":1418,"index":"F","name":"Equal Product","type":"PROGRAMMING","rating":3000,"tags":["data structures","math","number theory","two pointers"]},{"contestId":1418,"index":"D","name":"Trash Problem","type":"PROGRAMMING","rating":2100,"tags":["data structures","implementation"]},{"contestId":1416,"index":"E","name":"Split","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["binary search","data structures","dp","greedy"]},{"contestId":1416,"index":"D","name":"Graph and Queries","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","dsu","graphs","implementation","trees"]},{"contestId":1416,"index":"C","name":"XOR Inverse","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["bitmasks","data structures","divide and conquer","dp","greedy","math","sortings","strings","trees"]},{"contestId":1416,"index":"A","name":"k-Amazing Numbers","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["binary search","data structures","implementation","two pointers"]},{"contestId":1413,"index":"F","name":"Roads and Ramen","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","trees"]},{"contestId":1413,"index":"D","name":"Shurikens","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["data structures","greedy","implementation"]},{"contestId":1408,"index":"H","name":"Rainbow Triples","type":"PROGRAMMING","points":3750.0,"rating":3300,"tags":["binary search","data structures","flows","greedy"]},{"contestId":1408,"index":"E","name":"Avoid Rainbow Cycles","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dsu","graphs","greedy","sortings","trees"]},{"contestId":1408,"index":"D","name":"Searchlights","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","brute force","data structures","dp","implementation","sortings","two pointers"]},{"contestId":1407,"index":"D","name":"Discrete Centrifugal Jumps","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures","dp","graphs"]},{"contestId":1406,"index":"D","name":"Three Sequences","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":1404,"index":"C","name":"Fixed Point Removal","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","constructive algorithms","data structures","greedy","two pointers"]},{"contestId":1403,"index":"B","name":"Spring cleaning","type":"PROGRAMMING","rating":2300,"tags":["*special","data structures","dfs and similar","graphs","trees"]},{"contestId":1403,"index":"A","name":"The Potion of Great Power","type":"PROGRAMMING","rating":2400,"tags":["*special","2-sat","binary search","data structures","graphs","interactive","sortings","two pointers"]},{"contestId":1402,"index":"A","name":"Fancy Fence","type":"PROGRAMMING","rating":1800,"tags":["*special","data structures","dsu","implementation","math","sortings"]},{"contestId":1401,"index":"F","name":"Reverse and Swap","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","bitmasks","data structures"]},{"contestId":1401,"index":"E","name":"Divide Square","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","geometry","implementation","sortings"]},{"contestId":1400,"index":"E","name":"Clear the Multiset","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dp","greedy"]},{"contestId":1400,"index":"D","name":"Zigzags","type":"PROGRAMMING","rating":1900,"tags":["brute force","combinatorics","data structures","math","two pointers"]},{"contestId":1399,"index":"F","name":"Yet Another Segments Subset","type":"PROGRAMMING","rating":2300,"tags":["data structures","dp","graphs","sortings"]},{"contestId":1399,"index":"E1","name":"Weights Division (easy version)","type":"PROGRAMMING","rating":2000,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1399,"index":"D","name":"Binary String To Subsequences","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1398,"index":"F","name":"Controversial Rounds","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","greedy","two pointers"]},{"contestId":1398,"index":"E","name":"Two Types of Spells","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures","greedy","implementation","math","sortings"]},{"contestId":1398,"index":"C","name":"Good Subarrays","type":"PROGRAMMING","rating":1600,"tags":["data structures","dp","math"]},{"contestId":1396,"index":"D","name":"Rainbow Rectangles","type":"PROGRAMMING","points":2250.0,"rating":3300,"tags":["data structures","sortings","two pointers"]},{"contestId":1393,"index":"B","name":"Applejack and Storages","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1392,"index":"F","name":"Omkar and Landslide","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","constructive algorithms","data structures","greedy","math"]},{"contestId":1389,"index":"F","name":"Bicolored Segments","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","graph matchings","sortings"]},{"contestId":1388,"index":"E","name":"Uncle Bogdan and Projections","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["data structures","geometry","sortings"]},{"contestId":1388,"index":"D","name":"Captain Flint and Treasure","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","graphs","greedy","implementation","trees"]},{"contestId":1386,"index":"C","name":"Joker","type":"PROGRAMMING","rating":2800,"tags":["*special","bitmasks","data structures","divide and conquer","dsu"]},{"contestId":1386,"index":"B","name":"Mixture","type":"PROGRAMMING","rating":2900,"tags":["*special","data structures","geometry","math","sortings"]},{"contestId":1385,"index":"F","name":"Removing Leaves","type":"PROGRAMMING","rating":2300,"tags":["data structures","greedy","implementation","trees"]},{"contestId":1383,"index":"E","name":"Strange Operation","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["combinatorics","data structures","dp"]},{"contestId":1381,"index":"A2","name":"Prefix Flip (Hard Version)","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","data structures","implementation","strings","two pointers"]},{"contestId":1381,"index":"A1","name":"Prefix Flip (Easy Version)","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["constructive algorithms","data structures","strings"]},{"contestId":1380,"index":"F","name":"Strange Addition","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","matrices"]},{"contestId":1380,"index":"E","name":"Merging Towers","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","implementation","trees"]},{"contestId":1380,"index":"A","name":"Three Indices","type":"PROGRAMMING","rating":900,"tags":["brute force","data structures"]},{"contestId":1379,"index":"F2","name":"Chess Strikes Back (hard version)","type":"PROGRAMMING","points":1500.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":1379,"index":"F1","name":"Chess Strikes Back (easy version)","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["binary search","data structures"]},{"contestId":1379,"index":"D","name":"New Passenger Trams","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","brute force","data structures","sortings","two pointers"]},{"contestId":1379,"index":"C","name":"Choosing flowers","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["binary search","brute force","data structures","dfs and similar","dp","greedy","sortings","two pointers"]},{"contestId":1375,"index":"C","name":"Element Extermination","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":1374,"index":"E2","name":"Reading Books (hard version)","type":"PROGRAMMING","rating":2500,"tags":["data structures","greedy","implementation","sortings","ternary search","two pointers"]},{"contestId":1374,"index":"E1","name":"Reading Books (easy version)","type":"PROGRAMMING","rating":1600,"tags":["data structures","greedy","sortings"]},{"contestId":1373,"index":"G","name":"Pawns","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","greedy"]},{"contestId":1373,"index":"F","name":"Network Coverage","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1371,"index":"F","name":"Raging Thunder","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","divide and conquer","implementation"]},{"contestId":1370,"index":"E","name":"Binary Subsequence Rotation","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":1369,"index":"E","name":"DeadLee","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dfs and similar","greedy","implementation","sortings"]},{"contestId":1368,"index":"G","name":"Shifting Dominoes","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["data structures","geometry","graphs","trees"]},{"contestId":1367,"index":"F2","name":"Flying Sort (Hard Version)","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},{"contestId":1366,"index":"G","name":"Construct the String","type":"PROGRAMMING","rating":2700,"tags":["data structures","dp","strings"]},{"contestId":1365,"index":"C","name":"Rotation Matching","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1364,"index":"A","name":"XXXXX","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["brute force","data structures","number theory","two pointers"]},{"contestId":1361,"index":"F","name":"Johnny and New Toy","type":"PROGRAMMING","points":3500.0,"rating":3300,"tags":["data structures","implementation","math"]},{"contestId":1359,"index":"F","name":"RC Kaboom Show","type":"PROGRAMMING","rating":2900,"tags":["binary search","brute force","data structures","geometry","math"]},{"contestId":1359,"index":"D","name":"Yet Another Yet Another Task","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","implementation","two pointers"]},{"contestId":1358,"index":"E","name":"Are You Fired?","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1354,"index":"D","name":"Multiset","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures"]},{"contestId":1353,"index":"D","name":"Constructing the Array","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","data structures","sortings"]},{"contestId":1351,"index":"C","name":"Skier","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["data structures","implementation"]},{"contestId":1349,"index":"A","name":"Orac and LCM","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["data structures","math","number theory"]},{"contestId":1348,"index":"F","name":"Phoenix and Memory","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["data structures","dfs and similar","graphs","greedy"]},{"contestId":1348,"index":"B","name":"Phoenix and Beauty","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":1346,"index":"H","name":"Game with Segments","type":"PROGRAMMING","rating":2700,"tags":["*special","data structures","games"]},{"contestId":1346,"index":"F","name":"Dune II: Battle For Arrakis","type":"PROGRAMMING","rating":2000,"tags":["*special","data structures","greedy","math"]},{"contestId":1344,"index":"E","name":"Train Tracks","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","trees"]},{"contestId":1343,"index":"F","name":"Restore the Permutation by Sorted Segments","type":"PROGRAMMING","rating":2400,"tags":["brute force","constructive algorithms","data structures","greedy","implementation"]},{"contestId":1343,"index":"D","name":"Constant Palindrome Sum","type":"PROGRAMMING","rating":1700,"tags":["brute force","data structures","greedy","two pointers"]},{"contestId":1342,"index":"D","name":"Multiple Testcases","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","data structures","greedy","sortings","two pointers"]},{"contestId":1340,"index":"F","name":"Nastya and CBS","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["brute force","data structures","hashing"]},{"contestId":1340,"index":"A","name":"Nastya and Strange Generator","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["brute force","data structures","greedy","implementation"]},{"contestId":1336,"index":"F","name":"Journey","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":1335,"index":"F","name":"Robots on a Grid","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","dsu","graphs","greedy","matrices"]},{"contestId":1335,"index":"E2","name":"Three Blocks Palindrome (hard version)","type":"PROGRAMMING","rating":1800,"tags":["brute force","data structures","dp","two pointers"]},{"contestId":1335,"index":"E1","name":"Three Blocks Palindrome (easy version)","type":"PROGRAMMING","rating":1700,"tags":["binary search","brute force","data structures","dp","two pointers"]},{"contestId":1334,"index":"F","name":"Strange Function","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","dp","greedy"]},{"contestId":1333,"index":"C","name":"Eugene and an array","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["binary search","data structures","implementation","two pointers"]},{"contestId":1332,"index":"G","name":"No Monotone Triples","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures"]},{"contestId":1329,"index":"D","name":"Dreamoon Likes Strings","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["constructive algorithms","data structures"]},{"contestId":1329,"index":"C","name":"Drazil Likes Heap","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":1327,"index":"F","name":"AND Segments","type":"PROGRAMMING","rating":2500,"tags":["bitmasks","combinatorics","data structures","dp","two pointers"]},{"contestId":1326,"index":"E","name":"Bombs","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","two pointers"]},{"contestId":1324,"index":"D","name":"Pair of Topics","type":"PROGRAMMING","rating":1400,"tags":["binary search","data structures","sortings","two pointers"]},{"contestId":1324,"index":"C","name":"Frog Jumps","type":"PROGRAMMING","rating":1100,"tags":["binary search","data structures","dfs and similar","greedy","implementation"]},{"contestId":1322,"index":"E","name":"Median Mountain Range","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures"]},{"contestId":1322,"index":"B","name":"Present","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["binary search","bitmasks","constructive algorithms","data structures","math","sortings"]},{"contestId":1320,"index":"E","name":"Treeland and Viruses","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dfs and similar","dp","shortest paths","trees"]},{"contestId":1320,"index":"D","name":"Reachable Strings","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","hashing","strings"]},{"contestId":1320,"index":"C","name":"World of Darkraft: Battle for Azathoth","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["brute force","data structures","sortings"]},{"contestId":1320,"index":"A","name":"Journey Planning","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","dp","greedy","math","sortings"]},{"contestId":1316,"index":"F","name":"Battalion Strength","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","divide and conquer","probabilities"]},{"contestId":1313,"index":"E","name":"Concatenation with intersection","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","hashing","strings","two pointers"]},{"contestId":1313,"index":"C2","name":"Skyscrapers (hard version)","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","dp","greedy"]},{"contestId":1313,"index":"C1","name":"Skyscrapers (easy version)","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["brute force","data structures","dp","greedy"]},{"contestId":1312,"index":"G","name":"Autocompletion","type":"PROGRAMMING","rating":2600,"tags":["data structures","dfs and similar","dp"]},{"contestId":1311,"index":"F","name":"Moving Points","type":"PROGRAMMING","rating":1900,"tags":["data structures","divide and conquer","implementation","sortings"]},{"contestId":1310,"index":"A","name":"Recommendations","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["data structures","greedy","sortings"]},{"contestId":1307,"index":"D","name":"Cow and Fields","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","greedy","shortest paths","sortings"]},{"contestId":1304,"index":"F2","name":"Animal Observation (hard version)","type":"PROGRAMMING","points":1000.0,"rating":2400,"tags":["data structures","dp","greedy"]},{"contestId":1304,"index":"F1","name":"Animal Observation (easy version)","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["data structures","dp"]},{"contestId":1304,"index":"E","name":"1-Trees and Queries","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","shortest paths","trees"]},{"contestId":1303,"index":"G","name":"Sum of Prefix Sums","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","geometry","trees"]},{"contestId":1302,"index":"C","name":"Segment tree or Fenwick?","type":"PROGRAMMING","tags":["data structures"]},{"contestId":1301,"index":"E","name":"Nanosoft","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures","dp","implementation"]},{"contestId":1299,"index":"C","name":"Water Balance","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["data structures","geometry","greedy"]},{"contestId":1297,"index":"I","name":"Falling Blocks","type":"PROGRAMMING","tags":["*special","data structures"]},{"contestId":1297,"index":"F","name":"Movie Fan","type":"PROGRAMMING","tags":["*special","data structures","greedy","implementation","sortings"]},{"contestId":1296,"index":"E2","name":"String Coloring (hard version)","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp"]},{"contestId":1296,"index":"C","name":"Yet Another Walking Robot","type":"PROGRAMMING","rating":1500,"tags":["data structures","implementation"]},{"contestId":1295,"index":"E","name":"Permutation Separation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer"]},{"contestId":1294,"index":"D","name":"MEX maximizing","type":"PROGRAMMING","rating":1600,"tags":["data structures","greedy","implementation","math"]},{"contestId":1292,"index":"A","name":"NEKO\u0027s Maze Game","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","dsu","implementation"]},{"contestId":1290,"index":"E","name":"Cartesian Tree ","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["data structures"]},{"contestId":1290,"index":"B","name":"Irreducible Anagrams","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","constructive algorithms","data structures","strings","two pointers"]},{"contestId":1290,"index":"A","name":"Mind Control","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["brute force","data structures","implementation"]},{"contestId":1288,"index":"E","name":"Messenger Simulator","type":"PROGRAMMING","rating":2000,"tags":["data structures"]},{"contestId":1287,"index":"B","name":"Hyperset","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["brute force","data structures","implementation"]},{"contestId":1286,"index":"E","name":"Fedya the Potter Strikes Back","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","strings"]},{"contestId":1286,"index":"D","name":"LCC","type":"PROGRAMMING","points":1750.0,"rating":3100,"tags":["data structures","math","matrices","probabilities"]},{"contestId":1286,"index":"B","name":"Numbers on Tree","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","trees"]},{"contestId":1285,"index":"E","name":"Delete a Segment","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["brute force","constructive algorithms","data structures","dp","graphs","sortings","trees","two pointers"]},{"contestId":1284,"index":"F","name":"New Year and Social Network","type":"PROGRAMMING","points":4000.0,"rating":3200,"tags":["data structures","graph matchings","graphs","math","trees"]},{"contestId":1284,"index":"D","name":"New Year and Conference","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","hashing","sortings"]},{"contestId":1284,"index":"B","name":"New Year and Ascent Sequence","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["binary search","combinatorics","data structures","dp","implementation","sortings"]},{"contestId":1283,"index":"C","name":"Friends and Gifts","type":"PROGRAMMING","rating":1500,"tags":["constructive algorithms","data structures","math"]},{"contestId":1282,"index":"E","name":"The Cake Is a Lie","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","data structures","dfs and similar","graphs"]},{"contestId":1279,"index":"C","name":"Stack of Presents","type":"PROGRAMMING","rating":1400,"tags":["data structures","implementation"]},{"contestId":1278,"index":"D","name":"Segment Tree","type":"PROGRAMMING","rating":2100,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1278,"index":"C","name":"Berry Jam","type":"PROGRAMMING","rating":1700,"tags":["data structures","dp","greedy","implementation"]},{"contestId":1277,"index":"D","name":"Let\u0027s Play the Words?","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","hashing","implementation","math"]},{"contestId":1276,"index":"C","name":"Beautiful Rectangle","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["brute force","combinatorics","constructive algorithms","data structures","greedy","math"]},{"contestId":1271,"index":"D","name":"Portals","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["data structures","dp","greedy","implementation","sortings"]},{"contestId":1270,"index":"H","name":"Number of Components","type":"PROGRAMMING","points":4000.0,"rating":3300,"tags":["data structures"]},{"contestId":1268,"index":"C","name":"K Integers","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","data structures"]},{"contestId":1266,"index":"E","name":"Spaceship Solitaire","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","greedy","implementation"]},{"contestId":1266,"index":"D","name":"Decreasing Debts","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["constructive algorithms","data structures","graphs","greedy","implementation","math","two pointers"]},{"contestId":1265,"index":"E","name":"Beautiful Mirrors","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dp","math","probabilities"]},{"contestId":1265,"index":"B","name":"Beautiful Numbers","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","implementation","math","two pointers"]},{"contestId":1264,"index":"C","name":"Beautiful Mirrors with queries","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","probabilities"]},{"contestId":1263,"index":"F","name":"Economic Difficulties","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dfs and similar","dp","flows","graphs","trees"]},{"contestId":1263,"index":"E","name":"Editor","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","implementation"]},{"contestId":1260,"index":"F","name":"Colored Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","trees"]},{"contestId":1257,"index":"E","name":"The Contest","type":"PROGRAMMING","rating":2000,"tags":["data structures","dp","greedy"]},{"contestId":1257,"index":"D","name":"Yet Another Monster Killing Problem","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","dp","greedy","sortings","two pointers"]},{"contestId":1254,"index":"D","name":"Tree Queries","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","probabilities","trees"]},{"contestId":1253,"index":"E","name":"Antenna Coverage","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","dp","greedy","sortings"]},{"contestId":1252,"index":"K","name":"Addition Robot","type":"PROGRAMMING","rating":2100,"tags":["data structures","math","matrices"]},{"contestId":1252,"index":"G","name":"Performance Review","type":"PROGRAMMING","rating":2100,"tags":["data structures"]},{"contestId":1252,"index":"D","name":"Find String in a Grid","type":"PROGRAMMING","rating":3000,"tags":["data structures","dp","strings","trees"]},{"contestId":1252,"index":"C","name":"Even Path","type":"PROGRAMMING","rating":1600,"tags":["data structures","implementation"]},{"contestId":1251,"index":"E2","name":"Voting (Hard Version)","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","greedy"]},{"contestId":1251,"index":"E1","name":"Voting (Easy Version)","type":"PROGRAMMING","rating":2300,"tags":["data structures","dp","greedy"]},{"contestId":1250,"index":"C","name":"Trip to Saint Petersburg","type":"PROGRAMMING","rating":2100,"tags":["data structures"]},{"contestId":1249,"index":"D2","name":"Too Many Segments (hard version)","type":"PROGRAMMING","rating":1800,"tags":["data structures","greedy","sortings"]},{"contestId":1239,"index":"C","name":"Queue in the Train","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["data structures","greedy","implementation"]},{"contestId":1238,"index":"G","name":"Adilbek and the Watering System","type":"PROGRAMMING","rating":2700,"tags":["data structures","greedy","sortings"]},{"contestId":1237,"index":"G","name":"Balanced Distribution","type":"PROGRAMMING","points":3750.0,"rating":3500,"tags":["data structures","dp","greedy"]},{"contestId":1237,"index":"D","name":"Balanced Playlist","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","implementation"]},{"contestId":1237,"index":"B","name":"Balanced Tunnel","type":"PROGRAMMING","points":750.0,"rating":1300,"tags":["data structures","sortings","two pointers"]},{"contestId":1236,"index":"E","name":"Alice and the Unfair Game","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","data structures","dp","dsu"]},{"contestId":1236,"index":"D","name":"Alice and the Doll","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["brute force","data structures","greedy","implementation"]},{"contestId":1234,"index":"D","name":"Distinct Characters Queries","type":"PROGRAMMING","rating":1600,"tags":["data structures"]},{"contestId":1234,"index":"B2","name":"Social Network (hard version)","type":"PROGRAMMING","rating":1300,"tags":["data structures","implementation"]},{"contestId":1227,"index":"D2","name":"Optimal Subsequences (Hard Version)","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","greedy"]},{"contestId":1227,"index":"D1","name":"Optimal Subsequences (Easy Version)","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["data structures","greedy"]},{"contestId":1223,"index":"F","name":"Stack Exterminable Arrays","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["data structures","divide and conquer","dp","hashing"]},{"contestId":1221,"index":"F","name":"Choose a Square","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures","sortings"]},{"contestId":1220,"index":"F","name":"Gardener Alex","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["binary search","data structures"]},{"contestId":1218,"index":"F","name":"Workout plan","type":"PROGRAMMING","rating":1500,"tags":["data structures","greedy"]},{"contestId":1218,"index":"B","name":"Guarding warehouses","type":"PROGRAMMING","rating":3000,"tags":["data structures","geometry"]},{"contestId":1217,"index":"F","name":"Forced Online Queries Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu","graphs","trees"]},{"contestId":1217,"index":"E","name":"Sum Queries?","type":"PROGRAMMING","rating":2300,"tags":["data structures","greedy","implementation","math"]},{"contestId":1216,"index":"F","name":"Wi-Fi","type":"PROGRAMMING","rating":2100,"tags":["data structures","dp","greedy"]},{"contestId":1214,"index":"G","name":"Feeling Good","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["bitmasks","data structures"]},{"contestId":1214,"index":"C","name":"Bad Sequence","type":"PROGRAMMING","points":1500.0,"rating":1200,"tags":["data structures","greedy"]},{"contestId":1213,"index":"F","name":"Unstable String Sort","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","greedy","implementation","strings"]},{"contestId":1213,"index":"B","name":"Bad Prices","type":"PROGRAMMING","rating":1100,"tags":["data structures","implementation"]},{"contestId":1209,"index":"H","name":"Moving Walkways","type":"PROGRAMMING","points":4000.0,"rating":3300,"tags":["data structures","greedy","math"]},{"contestId":1209,"index":"G2","name":"Into Blocks (hard version)","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures"]},{"contestId":1209,"index":"G1","name":"Into Blocks (easy version)","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dsu","greedy","implementation","two pointers"]},{"contestId":1209,"index":"F","name":"Koala and Notebook","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dfs and similar","graphs","shortest paths","strings","trees"]},{"contestId":1208,"index":"H","name":"Red Blue Tree","type":"PROGRAMMING","points":3750.0,"rating":3500,"tags":["data structures","implementation","trees"]},{"contestId":1208,"index":"E","name":"Let Them Slide","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","implementation"]},{"contestId":1208,"index":"D","name":"Restore Permutation","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","data structures","greedy","implementation"]},{"contestId":1207,"index":"G","name":"Indie Album","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},{"contestId":1207,"index":"F","name":"Remainder Problem","type":"PROGRAMMING","rating":2100,"tags":["brute force","data structures","implementation"]},{"contestId":1204,"index":"D2","name":"Kirk and a Binary String (hard version)","type":"PROGRAMMING","points":750.0,"rating":2100,"tags":["data structures","greedy","math","strings"]},{"contestId":1202,"index":"C","name":"You Are Given a WASD-string...","type":"PROGRAMMING","rating":2100,"tags":["brute force","data structures","dp","greedy","implementation","math","strings"]},{"contestId":1200,"index":"F","name":"Graph Traveler","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["brute force","data structures","dfs and similar","dp","graphs","implementation","math","number theory"]},{"contestId":1200,"index":"D","name":"White Lines","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","data structures","dp","implementation","two pointers"]},{"contestId":1200,"index":"A","name":"Hotelier","type":"PROGRAMMING","points":500.0,"rating":800,"tags":["brute force","data structures","implementation"]},{"contestId":1198,"index":"B","name":"Welfare State","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["binary search","brute force","data structures","sortings"]},{"contestId":1197,"index":"E","name":"Culture Code","type":"PROGRAMMING","rating":2300,"tags":["binary search","combinatorics","data structures","dp","shortest paths","sortings"]},{"contestId":1196,"index":"D2","name":"RGB Substring (hard version)","type":"PROGRAMMING","rating":1600,"tags":["data structures","dp","implementation","two pointers"]},{"contestId":1195,"index":"F","name":"Geometers Anonymous Club","type":"PROGRAMMING","points":3500.0,"rating":2500,"tags":["data structures","geometry","math","sortings"]},{"contestId":1195,"index":"E","name":"OpenStreetMap","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["data structures","two pointers"]},{"contestId":1194,"index":"E","name":"Count The Rectangles","type":"PROGRAMMING","rating":2200,"tags":["bitmasks","brute force","data structures","geometry","sortings"]},{"contestId":1193,"index":"B","name":"Magic Tree","type":"PROGRAMMING","tags":["*special","data structures","dp","trees"]},{"contestId":1192,"index":"B","name":"Dynamic Diameter","type":"PROGRAMMING","tags":["*special","data structures","dfs and similar","divide and conquer","trees"]},{"contestId":1190,"index":"D","name":"Tokitsukaze and Strange Rectangle","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","divide and conquer","sortings","two pointers"]},{"contestId":1189,"index":"C","name":"Candies!","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["data structures","dp","implementation","math"]},{"contestId":1187,"index":"D","name":"Subarray Sorting","type":"PROGRAMMING","rating":2400,"tags":["data structures","sortings"]},{"contestId":1185,"index":"C2","name":"Exam in BerSU (hard version)","type":"PROGRAMMING","points":750.0,"rating":1700,"tags":["brute force","data structures","greedy","math"]},{"contestId":1184,"index":"E3","name":"Daleks\u0027 Invasion (hard)","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1184,"index":"C2","name":"Heidi and the Turing Test (Medium)","type":"PROGRAMMING","rating":2200,"tags":["data structures"]},{"contestId":1182,"index":"F","name":"Maximum Sine","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["binary search","data structures","number theory"]},{"contestId":1182,"index":"C","name":"Beautiful Lyrics","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["data structures","greedy","strings"]},{"contestId":1181,"index":"D","name":"Irrigation","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","data structures","implementation","sortings","trees","two pointers"]},{"contestId":1179,"index":"D","name":"Fedor Runs for President","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dp","trees"]},{"contestId":1179,"index":"C","name":"Serge and Dining Room","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["binary search","data structures","graph matchings","greedy","implementation","math","trees"]},{"contestId":1179,"index":"A","name":"Valeriy and Deque","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["data structures","implementation"]},{"contestId":1178,"index":"G","name":"The Awesomest Vertex","type":"PROGRAMMING","points":3250.0,"rating":3000,"tags":["data structures","dfs and similar"]},{"contestId":1175,"index":"G","name":"Yet Another Partiton Problem","type":"PROGRAMMING","rating":3000,"tags":["data structures","divide and conquer","dp","geometry","two pointers"]},{"contestId":1175,"index":"F","name":"The Number of Subpermutations","type":"PROGRAMMING","rating":2500,"tags":["brute force","data structures","divide and conquer","hashing","math"]},{"contestId":1175,"index":"E","name":"Minimal Segment Cover","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","divide and conquer","dp","greedy","implementation","trees"]},{"contestId":1175,"index":"B","name":"Catch Overflow!","type":"PROGRAMMING","rating":1600,"tags":["data structures","expression parsing","implementation"]},{"contestId":1172,"index":"F","name":"Nauuo and Bug","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["data structures"]},{"contestId":1172,"index":"E","name":"Nauuo and ODT","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures"]},{"contestId":1170,"index":"D","name":"Decoding of Integer Sequences","type":"PROGRAMMING","tags":["*special","data structures","implementation"]},{"contestId":1167,"index":"F","name":"Scalar Queries","type":"PROGRAMMING","rating":2300,"tags":["combinatorics","data structures","math","sortings"]},{"contestId":1167,"index":"E","name":"Range Deleting","type":"PROGRAMMING","rating":2100,"tags":["binary search","combinatorics","data structures","two pointers"]},{"contestId":1166,"index":"F","name":"Vicky\u0027s Delivery Service","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dsu","graphs","hashing"]},{"contestId":1165,"index":"B","name":"Polycarp Training","type":"PROGRAMMING","rating":1000,"tags":["data structures","greedy","sortings"]},{"contestId":1163,"index":"F","name":"Indecisive Taxi Fee","type":"PROGRAMMING","points":3250.0,"rating":3000,"tags":["data structures","graphs","shortest paths"]},{"contestId":1163,"index":"E","name":"Magical Permutation","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["bitmasks","brute force","constructive algorithms","data structures","graphs","math"]},{"contestId":1163,"index":"C2","name":"Power Transmission (Hard Edition)","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["data structures","geometry","implementation","math"]},{"contestId":1163,"index":"B2","name":"Cat Party (Hard Edition)","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["data structures","implementation"]},{"contestId":1163,"index":"B1","name":"Cat Party (Easy Edition)","type":"PROGRAMMING","points":750.0,"rating":1500,"tags":["data structures","implementation"]},{"contestId":1158,"index":"C","name":"Permutation recovery","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","math","sortings"]},{"contestId":1157,"index":"E","name":"Minimum Array","type":"PROGRAMMING","rating":1700,"tags":["binary search","data structures","greedy"]},{"contestId":1156,"index":"E","name":"Special Segments of Permutation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dsu","two pointers"]},{"contestId":1155,"index":"D","name":"Beautiful Array","type":"PROGRAMMING","rating":1900,"tags":["brute force","data structures","divide and conquer","dp","greedy"]},{"contestId":1154,"index":"E","name":"Two Teams","type":"PROGRAMMING","rating":1800,"tags":["data structures","implementation","sortings"]},{"contestId":1151,"index":"E","name":"Number of Components","type":"PROGRAMMING","points":2250.0,"rating":2100,"tags":["combinatorics","data structures","dp","math"]},{"contestId":1149,"index":"C","name":"Tree Generator™","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","implementation","trees"]},{"contestId":1148,"index":"H","name":"Holy Diver ","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["data structures"]},{"contestId":1146,"index":"E","name":"Hot is Cold","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","implementation"]},{"contestId":1142,"index":"B","name":"Lynyrd Skynyrd","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["data structures","dfs and similar","dp","math","trees"]},{"contestId":1141,"index":"F2","name":"Same Sum Blocks (Hard)","type":"PROGRAMMING","rating":1900,"tags":["data structures","greedy"]},{"contestId":1140,"index":"G","name":"Double Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","shortest paths","trees"]},{"contestId":1140,"index":"F","name":"Extending Set of Points","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu"]},{"contestId":1140,"index":"C","name":"Playlist","type":"PROGRAMMING","rating":1600,"tags":["brute force","data structures","sortings"]},{"contestId":1139,"index":"F","name":"Dish Shopping","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["data structures","divide and conquer"]},{"contestId":1137,"index":"F","name":"Matches Are Not a Child\u0027s Play ","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["data structures","trees"]},{"contestId":1137,"index":"E","name":"Train Car Selection","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","greedy"]},{"contestId":1136,"index":"E","name":"Nastya Hasn\u0027t Written a Legend","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures"]},{"contestId":1132,"index":"G","name":"Greedy Subsequences","type":"PROGRAMMING","rating":2400,"tags":["data structures","dp","trees"]},{"contestId":1131,"index":"G","name":"Most Dangerous Shark","type":"PROGRAMMING","points":3500.0,"rating":2700,"tags":["data structures","dp","two pointers"]},{"contestId":1129,"index":"D","name":"Isolation","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["data structures","dp"]},{"contestId":1129,"index":"C","name":"Morse Code","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["binary search","data structures","dp","hashing","sortings","string suffix structures","strings"]},{"contestId":1120,"index":"F","name":"Secret Letters","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures","dp","greedy"]},{"contestId":1119,"index":"F","name":"Niyaz and Small Degrees","type":"PROGRAMMING","points":3250.0,"rating":3400,"tags":["data structures","dp","trees"]},{"contestId":1117,"index":"G","name":"Recursive Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},{"contestId":1114,"index":"F","name":"Please, another Queries on Array?","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","math","number theory"]},{"contestId":1111,"index":"E","name":"Tree","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","dfs and similar","dp","graphs","trees"]},{"contestId":1110,"index":"F","name":"Nearest Leaf","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":1109,"index":"F","name":"Sasha and Algorithm of Silence\u0027s Sounds","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["data structures","trees"]},{"contestId":1109,"index":"E","name":"Sasha and a Very Easy Test","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["data structures","number theory"]},{"contestId":1109,"index":"C","name":"Sasha and a Patient Friend","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["binary search","data structures","implementation"]},{"contestId":1108,"index":"E2","name":"Array and Segments (Hard version)","type":"PROGRAMMING","rating":2100,"tags":["data structures","implementation"]},{"contestId":1107,"index":"G","name":"Vasya and Maximum Profit","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","dp","dsu"]},{"contestId":1106,"index":"E","name":"Lunar New Year and Red Envelopes","type":"PROGRAMMING","points":2250.0,"rating":2100,"tags":["data structures","dp"]},{"contestId":1106,"index":"D","name":"Lunar New Year and a Wander","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","dfs and similar","graphs","greedy","shortest paths"]},{"contestId":1106,"index":"B","name":"Lunar New Year and Food Ordering","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["data structures","implementation"]},{"contestId":1104,"index":"B","name":"Game with string","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["data structures","implementation","math"]},{"contestId":1101,"index":"D","name":"GCD Counting","type":"PROGRAMMING","rating":2000,"tags":["data structures","dfs and similar","dp","number theory","trees"]},{"contestId":1100,"index":"F","name":"Ivan and Burgers","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","divide and conquer","greedy","math"]},{"contestId":1100,"index":"B","name":"Build a Contest","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","implementation"]},{"contestId":1099,"index":"F","name":"Cookies","type":"PROGRAMMING","points":2250.0,"rating":2400,"tags":["binary search","data structures","dfs and similar","dp","games","trees"]},{"contestId":1098,"index":"D","name":"Eels","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["data structures"]},{"contestId":1093,"index":"G","name":"Multidimensional Queries","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","data structures"]},{"contestId":1093,"index":"E","name":"Intersection of Permutations","type":"PROGRAMMING","rating":2400,"tags":["data structures"]},{"contestId":1092,"index":"D2","name":"Great Vova Wall (Version 2)","type":"PROGRAMMING","rating":2200,"tags":["data structures","implementation"]},{"contestId":1091,"index":"E","name":"New Year and the Acquaintance Estimation","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["binary search","data structures","graphs","greedy","implementation","math","sortings"]},{"contestId":1090,"index":"C","name":"New Year Presents","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","data structures"]},{"contestId":1089,"index":"K","name":"King Kog\u0027s Reception","type":"PROGRAMMING","rating":2400,"tags":["data structures"]},{"contestId":1088,"index":"F","name":"Ehab and a weird weight formula","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","trees"]},{"contestId":1085,"index":"G","name":"Beautiful Matrix","type":"PROGRAMMING","points":3250.0,"rating":2900,"tags":["combinatorics","data structures","dp"]},{"contestId":1083,"index":"F","name":"The Fair Nut and Amusing Xor","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures"]},{"contestId":1083,"index":"E","name":"The Fair Nut and Rectangles","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dp","geometry"]},{"contestId":1083,"index":"D","name":"The Fair Nut\u0027s getting crazy","type":"PROGRAMMING","points":2000.0,"rating":3500,"tags":["data structures","implementation"]},{"contestId":1083,"index":"C","name":"Max Mex","type":"PROGRAMMING","points":1500.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":1083,"index":"A","name":"The Fair Nut and the Best Path","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["data structures","dp","trees"]},{"contestId":1081,"index":"H","name":"Palindromic Magic","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["data structures","hashing","strings"]},{"contestId":1080,"index":"F","name":"Katya and Segments Sets","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","interactive","sortings"]},{"contestId":1077,"index":"F2","name":"Pictures with Kittens (hard version)","type":"PROGRAMMING","rating":2100,"tags":["data structures","dp"]},{"contestId":1076,"index":"G","name":"Array Game","type":"PROGRAMMING","rating":3000,"tags":["data structures","games"]},{"contestId":1076,"index":"E","name":"Vasya and a Tree","type":"PROGRAMMING","rating":1900,"tags":["data structures","trees"]},{"contestId":1073,"index":"G","name":"Yet Another LCP Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures"]},{"contestId":1073,"index":"D","name":"Berland Fair","type":"PROGRAMMING","rating":1700,"tags":["binary search","brute force","data structures","greedy"]},{"contestId":1070,"index":"E","name":"Getting Deals Done","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures"]},{"contestId":1070,"index":"C","name":"Cloud Computing","type":"PROGRAMMING","rating":2000,"tags":["data structures","greedy"]},{"contestId":1070,"index":"B","name":"Berkomnadzor","type":"PROGRAMMING","rating":2400,"tags":["data structures","greedy"]},{"contestId":1066,"index":"E","name":"Binary Numbers AND Sum","type":"PROGRAMMING","rating":1700,"tags":["data structures","implementation","math"]},{"contestId":1063,"index":"F","name":"String Journey","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures","dp","string suffix structures"]},{"contestId":1062,"index":"E","name":"Company","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"contestId":1061,"index":"D","name":"TV Shows","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","greedy","implementation","sortings"]},{"contestId":1061,"index":"C","name":"Multiplicity","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","dp","implementation","math","number theory"]},{"contestId":1060,"index":"G","name":"Balls and Pockets","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["data structures"]},{"contestId":1059,"index":"E","name":"Split the Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","dp","greedy","trees"]},{"contestId":1056,"index":"H","name":"Detect Robots","type":"PROGRAMMING","points":4000.0,"rating":3200,"tags":["data structures","strings"]},{"contestId":1056,"index":"G","name":"Take Metro","type":"PROGRAMMING","points":3500.0,"rating":2900,"tags":["brute force","data structures","graphs"]},{"contestId":1056,"index":"E","name":"Check Transcription","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["brute force","data structures","hashing","strings"]},{"contestId":1051,"index":"G","name":"Distinctification","type":"PROGRAMMING","rating":2900,"tags":["data structures","dsu","greedy"]},{"contestId":1051,"index":"E","name":"Vasya and Big Integers","type":"PROGRAMMING","rating":2600,"tags":["binary search","data structures","dp","hashing","strings"]},{"contestId":1045,"index":"J","name":"Moonwalk challenge","type":"PROGRAMMING","rating":2600,"tags":["data structures","strings","trees"]},{"contestId":1045,"index":"G","name":"AI robots","type":"PROGRAMMING","rating":2200,"tags":["data structures"]},{"contestId":1045,"index":"A","name":"Last chance","type":"PROGRAMMING","rating":2500,"tags":["data structures","flows","graph matchings","graphs","trees"]},{"contestId":1044,"index":"F","name":"DFS","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["data structures"]},{"contestId":1044,"index":"D","name":"Deduction Queries","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dsu"]},{"contestId":1043,"index":"G","name":"Speckled Band","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["data structures","divide and conquer","hashing","string suffix structures","strings"]},{"contestId":1042,"index":"F","name":"Leaf Sets","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings","trees"]},{"contestId":1042,"index":"D","name":"Petya and Array","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","divide and conquer","two pointers"]},{"contestId":1041,"index":"F","name":"Ray in the tube","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["data structures","divide and conquer","dp","math"]},{"contestId":1041,"index":"E","name":"Tree Reconstruction","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["constructive algorithms","data structures","graphs","greedy"]},{"contestId":1041,"index":"D","name":"Glider","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["binary search","data structures","two pointers"]},{"contestId":1041,"index":"C","name":"Coffee Break","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["binary search","data structures","greedy","two pointers"]},{"contestId":1039,"index":"E","name":"Summer Oenothera Exhibition","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures"]},{"contestId":1039,"index":"D","name":"You Are Given a Tree","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["data structures","dp","trees"]},{"contestId":1039,"index":"A","name":"Timetable","type":"PROGRAMMING","points":750.0,"rating":2300,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":1037,"index":"H","name":"Security","type":"PROGRAMMING","points":4000.0,"rating":3200,"tags":["data structures","string suffix structures"]},{"contestId":1037,"index":"F","name":"Maximum Reduction","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["combinatorics","data structures","math"]},{"contestId":1034,"index":"D","name":"Intervals of Intervals","type":"PROGRAMMING","points":2000.0,"rating":3500,"tags":["binary search","data structures","two pointers"]},{"contestId":1030,"index":"F","name":"Putting Boxes Together","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures"]},{"contestId":1028,"index":"D","name":"Order book","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["combinatorics","data structures","greedy"]},{"contestId":1023,"index":"G","name":"Pisces","type":"PROGRAMMING","points":4000.0,"rating":3400,"tags":["data structures","flows","trees"]},{"contestId":1023,"index":"D","name":"Array Restoration","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["constructive algorithms","data structures"]},{"contestId":1019,"index":"E","name":"Raining season","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","divide and conquer","trees"]},{"contestId":1017,"index":"G","name":"The Tree","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["data structures"]},{"contestId":1017,"index":"D","name":"The Wu","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["bitmasks","brute force","data structures"]},{"contestId":1010,"index":"E","name":"Store","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["data structures"]},{"contestId":1009,"index":"F","name":"Dominant Indices","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","trees"]},{"contestId":1007,"index":"D","name":"Ants","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["2-sat","data structures","trees"]},{"contestId":1007,"index":"A","name":"Reorder the Array","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["combinatorics","data structures","math","sortings","two pointers"]},{"contestId":1006,"index":"C","name":"Three Parts of the Array","type":"PROGRAMMING","rating":1200,"tags":["binary search","data structures","two pointers"]},{"contestId":1004,"index":"F","name":"Sonya and Bitwise OR","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["bitmasks","data structures","divide and conquer"]},{"contestId":1004,"index":"E","name":"Sonya and Ice Cream","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","dp","greedy","shortest paths","trees"]},{"contestId":1000,"index":"G","name":"Two-Paths","type":"PROGRAMMING","rating":2700,"tags":["data structures","dp","trees"]},{"contestId":1000,"index":"F","name":"One Occurrence","type":"PROGRAMMING","rating":2400,"tags":["data structures","divide and conquer"]},{"contestId":1000,"index":"C","name":"Covered Points Count","type":"PROGRAMMING","rating":1700,"tags":["data structures","implementation","sortings"]},{"contestId":999,"index":"D","name":"Equalize the Remainders","type":"PROGRAMMING","rating":1900,"tags":["data structures","greedy","implementation"]},{"contestId":997,"index":"E","name":"Good Subsegments","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures"]},{"contestId":995,"index":"C","name":"Leaving the Bar","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["brute force","data structures","geometry","greedy","math","sortings"]},{"contestId":992,"index":"E","name":"Nastya and King-Shamans","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures"]},{"contestId":986,"index":"E","name":"Prince\u0027s Problem","type":"PROGRAMMING","points":2750.0,"rating":2800,"tags":["brute force","data structures","math","number theory","trees"]},{"contestId":985,"index":"E","name":"Pencils and Boxes","type":"PROGRAMMING","rating":2100,"tags":["binary search","data structures","dp","greedy","two pointers"]},{"contestId":983,"index":"E","name":"NN country","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","data structures","trees"]},{"contestId":983,"index":"D","name":"Arkady and Rectangles","type":"PROGRAMMING","points":2250.0,"rating":3300,"tags":["data structures"]},{"contestId":982,"index":"D","name":"Shark","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","data structures","dsu","trees"]},{"contestId":982,"index":"B","name":"Bus of Characters","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","greedy","implementation"]},{"contestId":981,"index":"H","name":"K Paths","type":"PROGRAMMING","points":3750.0,"rating":3100,"tags":["combinatorics","data structures","dp","fft","math"]},{"contestId":981,"index":"G","name":"Magic multisets","type":"PROGRAMMING","points":3250.0,"rating":2500,"tags":["data structures"]},{"contestId":981,"index":"E","name":"Addition on Segments","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["bitmasks","data structures","divide and conquer","dp"]},{"contestId":980,"index":"E","name":"The Number Games","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","greedy","trees"]},{"contestId":979,"index":"D","name":"Kuro and GCD and XOR and SUM","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","bitmasks","brute force","data structures","dp","dsu","greedy","math","number theory","strings","trees"]},{"contestId":978,"index":"F","name":"Mentors","type":"PROGRAMMING","rating":1500,"tags":["binary search","data structures","implementation"]},{"contestId":965,"index":"E","name":"Short Code","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dp","greedy","strings","trees"]},{"contestId":962,"index":"G","name":"Visible Black Areas","type":"PROGRAMMING","rating":2800,"tags":["data structures","dsu","geometry","trees"]},{"contestId":962,"index":"D","name":"Merge Equals","type":"PROGRAMMING","rating":1600,"tags":["data structures","implementation"]},{"contestId":961,"index":"E","name":"Tufurama","type":"PROGRAMMING","rating":1900,"tags":["data structures"]},{"contestId":961,"index":"B","name":"Lecture Sleep","type":"PROGRAMMING","rating":1200,"tags":["data structures","dp","implementation","two pointers"]},{"contestId":960,"index":"H","name":"Santa\u0027s Gift","type":"PROGRAMMING","points":3500.0,"rating":3100,"tags":["data structures","trees"]},{"contestId":960,"index":"F","name":"Pathwalks","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dp","graphs"]},{"contestId":960,"index":"B","name":"Minimize the error","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["data structures","greedy","sortings"]},{"contestId":958,"index":"C3","name":"Encryption (hard)","type":"PROGRAMMING","rating":2500,"tags":["data structures","dp"]},{"contestId":958,"index":"B2","name":"Maximum Control (medium)","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","graphs","greedy","trees"]},{"contestId":954,"index":"G","name":"Castle Defense","type":"PROGRAMMING","rating":2000,"tags":["binary search","data structures","greedy","two pointers"]},{"contestId":946,"index":"G","name":"Almost Increasing Array","type":"PROGRAMMING","rating":2500,"tags":["data structures","dp"]},{"contestId":940,"index":"F","name":"Machine Learning","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["brute force","data structures"]},{"contestId":940,"index":"E","name":"Cashback","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dp","greedy","math"]},{"contestId":939,"index":"F","name":"Cutlet","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["data structures","dp"]},{"contestId":938,"index":"G","name":"Shortest Path Queries","type":"PROGRAMMING","rating":2900,"tags":["bitmasks","data structures","dsu","graphs"]},{"contestId":938,"index":"D","name":"Buy a Ticket","type":"PROGRAMMING","rating":2000,"tags":["data structures","graphs","shortest paths"]},{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},{"contestId":935,"index":"F","name":"Fafa and Array","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["data structures","greedy"]},{"contestId":932,"index":"F","name":"Escape Through Leaf","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","dp","geometry"]},{"contestId":932,"index":"B","name":"Recursive Queries","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["binary search","data structures","dfs and similar"]},{"contestId":930,"index":"E","name":"Coins Exhibition","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","dp","math"]},{"contestId":930,"index":"D","name":"Game with Tokens","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","games","implementation"]},{"contestId":930,"index":"C","name":"Teodor is not a liar!","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","dp"]},{"contestId":926,"index":"J","name":"Segments","type":"PROGRAMMING","rating":2100,"tags":["data structures"]},{"contestId":926,"index":"E","name":"Merge Equal Elements","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","data structures"]},{"contestId":925,"index":"E","name":"May Holidays","type":"PROGRAMMING","points":2750.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":924,"index":"C","name":"Riverside Curio","type":"PROGRAMMING","points":1250.0,"rating":1700,"tags":["data structures","dp","greedy"]},{"contestId":923,"index":"C","name":"Perfect Security","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","greedy","strings","trees"]},{"contestId":923,"index":"B","name":"Producing Snow","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["binary search","data structures"]},{"contestId":920,"index":"F","name":"SUM and REPLACE","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dsu","number theory"]},{"contestId":920,"index":"E","name":"Connected Components?","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs"]},{"contestId":917,"index":"E","name":"Upside Down","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":916,"index":"E","name":"Jamie and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","trees"]},{"contestId":916,"index":"D","name":"Jamie and To-do List","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","interactive","trees"]},{"contestId":915,"index":"F","name":"Imbalance Value of a Tree","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":915,"index":"E","name":"Physical Education Lessons","type":"PROGRAMMING","rating":2300,"tags":["data structures","implementation","sortings"]},{"contestId":914,"index":"F","name":"Substrings in a String","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["bitmasks","brute force","data structures","string suffix structures","strings"]},{"contestId":914,"index":"E","name":"Palindromes in a Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","trees"]},{"contestId":914,"index":"D","name":"Bash and a Tough Math Puzzle","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","number theory"]},{"contestId":913,"index":"D","name":"Too Easy Problems","type":"PROGRAMMING","points":1250.0,"rating":1800,"tags":["binary search","brute force","data structures","greedy","sortings"]},{"contestId":912,"index":"D","name":"Fishes","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","graphs","greedy","probabilities","shortest paths"]},{"contestId":911,"index":"G","name":"Mass Change Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},{"contestId":911,"index":"E","name":"Stack Sorting","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","data structures","greedy","implementation"]},{"contestId":909,"index":"D","name":"Colorful Points","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["data structures","greedy","implementation"]},{"contestId":903,"index":"G","name":"Yet Another Maxflow Problem","type":"PROGRAMMING","rating":2700,"tags":["data structures","flows","graphs"]},{"contestId":903,"index":"D","name":"Almost Difference","type":"PROGRAMMING","rating":2200,"tags":["data structures","math"]},{"contestId":901,"index":"C","name":"Bipartite Segments","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["binary search","data structures","dfs and similar","dsu","graphs","two pointers"]},{"contestId":900,"index":"E","name":"Maximum Questions","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dp","strings"]},{"contestId":900,"index":"C","name":"Remove Extra One","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["brute force","data structures","math"]},{"contestId":899,"index":"F","name":"Letters Removing","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","strings"]},{"contestId":899,"index":"E","name":"Segments Removal","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["data structures","dsu","flows","implementation","two pointers"]},{"contestId":896,"index":"E","name":"Welcome home, Chtholly","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","dsu"]},{"contestId":896,"index":"C","name":"Willem, Chtholly and Seniorious","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["data structures","probabilities"]},{"contestId":895,"index":"E","name":"Eyes Closed","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["data structures","probabilities"]},{"contestId":894,"index":"D","name":"Ralph And His Tour in Binary Country","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["brute force","data structures","trees"]},{"contestId":893,"index":"F","name":"Subtree Minimum Query","type":"PROGRAMMING","rating":2300,"tags":["data structures","trees"]},{"contestId":893,"index":"D","name":"Credit Card","type":"PROGRAMMING","rating":1900,"tags":["data structures","dp","greedy","implementation"]},{"contestId":891,"index":"C","name":"Envy","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["data structures","dsu","graphs"]},{"contestId":888,"index":"G","name":"Xor-MST","type":"PROGRAMMING","rating":2300,"tags":["bitmasks","constructive algorithms","data structures"]},{"contestId":887,"index":"D","name":"Ratings and Reality Shows","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","two pointers"]},{"contestId":884,"index":"D","name":"Boxes And Balls","type":"PROGRAMMING","rating":2300,"tags":["data structures","greedy"]},{"contestId":883,"index":"L","name":"Berland.Taxi","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},{"contestId":879,"index":"B","name":"Table Tennis","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["data structures","implementation"]},{"contestId":878,"index":"C","name":"Tournament","type":"PROGRAMMING","points":1250.0,"rating":2700,"tags":["data structures","graphs"]},{"contestId":878,"index":"B","name":"Teams Formation","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["data structures","implementation"]},{"contestId":877,"index":"F","name":"Ann and Books","type":"PROGRAMMING","points":2750.0,"rating":2300,"tags":["data structures","flows","hashing"]},{"contestId":877,"index":"E","name":"Danil and a Part-time Job","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["bitmasks","data structures","trees"]},{"contestId":877,"index":"D","name":"Olya and Energy Drinks","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dfs and similar","graphs","shortest paths"]},{"contestId":875,"index":"E","name":"Delivery Club","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["binary search","data structures","dp"]},{"contestId":875,"index":"D","name":"High Cry","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","bitmasks","combinatorics","data structures","divide and conquer"]},{"contestId":873,"index":"E","name":"Awards For Contestants","type":"PROGRAMMING","rating":2300,"tags":["brute force","data structures","dp"]},{"contestId":870,"index":"F","name":"Paths","type":"PROGRAMMING","points":3250.0,"rating":2700,"tags":["data structures","number theory"]},{"contestId":869,"index":"E","name":"The Untended Antiquity","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","hashing"]},{"contestId":865,"index":"D","name":"Buy Low Sell High","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":863,"index":"E","name":"Turn Off The TV","type":"PROGRAMMING","rating":2000,"tags":["data structures","sortings"]},{"contestId":863,"index":"D","name":"Yet Another Array Queries Problem","type":"PROGRAMMING","rating":1800,"tags":["data structures","implementation"]},{"contestId":862,"index":"F","name":"Mahmoud and Ehab and the final stage","type":"PROGRAMMING","points":2750.0,"rating":2900,"tags":["data structures","strings"]},{"contestId":862,"index":"E","name":"Mahmoud and Ehab and the function","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["binary search","data structures","sortings"]},{"contestId":860,"index":"E","name":"Arkady and a Nobody-men","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["data structures","dfs and similar","trees"]},{"contestId":858,"index":"D","name":"Polycarp\u0027s phone book","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["data structures","implementation","sortings"]},{"contestId":855,"index":"F","name":"Nagini","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["binary search","data structures"]},{"contestId":855,"index":"B","name":"Marvolo Gaunt\u0027s Ring","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["brute force","data structures","dp"]},{"contestId":853,"index":"E","name":"Lada Malina","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","geometry"]},{"contestId":853,"index":"C","name":"Boredom","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["data structures"]},{"contestId":848,"index":"C","name":"Goodbye Souvenir","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["data structures","divide and conquer"]},{"contestId":848,"index":"B","name":"Rooter\u0027s Song","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","data structures","geometry","implementation","sortings","two pointers"]},{"contestId":847,"index":"D","name":"Dog Show","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":847,"index":"B","name":"Preparing for Merge Sort","type":"PROGRAMMING","rating":1600,"tags":["binary search","data structures"]},{"contestId":846,"index":"F","name":"Random Query","type":"PROGRAMMING","rating":1800,"tags":["data structures","math","probabilities","two pointers"]},{"contestId":846,"index":"D","name":"Monitor","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures"]},{"contestId":846,"index":"C","name":"Four Segments","type":"PROGRAMMING","rating":1800,"tags":["brute force","data structures","dp"]},{"contestId":845,"index":"E","name":"Fire in the City","type":"PROGRAMMING","rating":2400,"tags":["binary search","data structures"]},{"contestId":845,"index":"D","name":"Driving Test","type":"PROGRAMMING","rating":1800,"tags":["data structures","dp","greedy"]},{"contestId":845,"index":"C","name":"Two TVs","type":"PROGRAMMING","rating":1500,"tags":["data structures","greedy","sortings"]},{"contestId":842,"index":"D","name":"Vitya and Strange Lesson","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures"]},{"contestId":840,"index":"D","name":"Destiny","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","probabilities"]},{"contestId":840,"index":"B","name":"Leha and another game about graph","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["constructive algorithms","data structures","dfs and similar","dp","graphs"]},{"contestId":838,"index":"B","name":"Diverging Directions","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","trees"]},{"contestId":837,"index":"G","name":"Functions On The Segments","type":"PROGRAMMING","rating":2500,"tags":["data structures"]},{"contestId":834,"index":"B","name":"The Festive Evening","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["data structures","implementation"]},{"contestId":833,"index":"E","name":"Caramel Clouds","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","dp","sortings"]},{"contestId":833,"index":"D","name":"Red-Black Cobweb","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":833,"index":"B","name":"The Bakery","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"contestId":830,"index":"C","name":"Bamboo Partition","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["brute force","data structures","implementation","math","number theory","sortings","two pointers"]},{"contestId":830,"index":"B","name":"Cards Sorting","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","implementation","sortings"]},{"contestId":827,"index":"F","name":"Dirty Arkady\u0027s Kitchen","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dp","graphs","shortest paths"]},{"contestId":827,"index":"D","name":"Best Edge Weight","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":827,"index":"C","name":"DNA Evolution","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["data structures","strings"]},{"contestId":827,"index":"A","name":"String Reconstruction","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["data structures","greedy","sortings","strings"]},{"contestId":825,"index":"E","name":"Minimal Labels","type":"PROGRAMMING","rating":2300,"tags":["data structures","dfs and similar","graphs","greedy"]},{"contestId":821,"index":"C","name":"Okabe and Boxes","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","greedy","trees"]},{"contestId":819,"index":"B","name":"Mister B and PR Shifts","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","implementation","math"]},{"contestId":818,"index":"E","name":"Card Game Again","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","number theory","two pointers"]},{"contestId":818,"index":"D","name":"Multicolored Cars","type":"PROGRAMMING","rating":1700,"tags":["data structures","implementation"]},{"contestId":817,"index":"F","name":"MEX Queries","type":"PROGRAMMING","rating":2300,"tags":["binary search","data structures","trees"]},{"contestId":817,"index":"E","name":"Choosing The Commander","type":"PROGRAMMING","rating":2000,"tags":["bitmasks","data structures","trees"]},{"contestId":817,"index":"D","name":"Imbalanced Array","type":"PROGRAMMING","rating":1900,"tags":["data structures","divide and conquer","dsu","sortings"]},{"contestId":816,"index":"B","name":"Karen and Coffee","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["binary search","data structures","implementation"]},{"contestId":815,"index":"D","name":"Karen and Cards","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["binary search","combinatorics","data structures","geometry"]},{"contestId":813,"index":"F","name":"Bipartite Checking","type":"PROGRAMMING","rating":2500,"tags":["data structures","dsu","graphs"]},{"contestId":813,"index":"E","name":"Army Creation","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures"]},{"contestId":811,"index":"E","name":"Vladik and Entertaining Flags","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dsu","graphs"]},{"contestId":809,"index":"D","name":"Hitchhiking in the Baltic States","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","dp"]},{"contestId":808,"index":"D","name":"Array Division","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","implementation"]},{"contestId":808,"index":"B","name":"Average Sleep Time","type":"PROGRAMMING","rating":1300,"tags":["data structures","implementation","math"]},{"contestId":803,"index":"G","name":"Periodic RMQ Problem","type":"PROGRAMMING","rating":2300,"tags":["data structures"]},{"contestId":802,"index":"O","name":"April Fools\u0027 Problem (hard)","type":"PROGRAMMING","rating":2900,"tags":["binary search","data structures","flows"]},{"contestId":802,"index":"B","name":"Heidi and Library (medium)","type":"PROGRAMMING","rating":1800,"tags":["data structures","greedy"]},{"contestId":799,"index":"G","name":"Cut the pie","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["binary search","data structures","geometry"]},{"contestId":799,"index":"F","name":"Beautiful fountains rows","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["data structures"]},{"contestId":799,"index":"E","name":"Aquarium decoration","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","greedy","two pointers"]},{"contestId":799,"index":"C","name":"Fountains","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["binary search","data structures","implementation"]},{"contestId":799,"index":"B","name":"T-shirt buying","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["data structures","implementation"]},{"contestId":798,"index":"E","name":"Mike and code of a permutation","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["constructive algorithms","data structures","graphs","sortings"]},{"contestId":797,"index":"F","name":"Mice and Holes","type":"PROGRAMMING","rating":2600,"tags":["data structures","dp","greedy","sortings"]},{"contestId":797,"index":"E","name":"Array Queries","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dp"]},{"contestId":797,"index":"D","name":"Broken BST","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar"]},{"contestId":797,"index":"C","name":"Minimal string","type":"PROGRAMMING","rating":1700,"tags":["data structures","greedy","strings"]},{"contestId":796,"index":"F","name":"Sequence Recovery","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["bitmasks","data structures","greedy"]},{"contestId":796,"index":"C","name":"Bank Hacking","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","data structures","dp","trees"]},{"contestId":794,"index":"F","name":"Leha and security system","type":"PROGRAMMING","points":2750.0,"rating":2800,"tags":["data structures"]},{"contestId":793,"index":"G","name":"Oleg and chess","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","flows","graph matchings"]},{"contestId":793,"index":"F","name":"Julia the snail","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dp"]},{"contestId":792,"index":"F","name":"Mages and Monsters","type":"PROGRAMMING","rating":3100,"tags":["data structures","geometry"]},{"contestId":788,"index":"E","name":"New task","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["data structures"]},{"contestId":786,"index":"E","name":"ALT","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","flows","graphs","trees"]},{"contestId":786,"index":"D","name":"Rap God","type":"PROGRAMMING","points":2000.0,"rating":3400,"tags":["data structures","dfs and similar","hashing","strings","trees"]},{"contestId":786,"index":"C","name":"Till I Collapse","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","divide and conquer"]},{"contestId":786,"index":"B","name":"Legacy","type":"PROGRAMMING","points":1000.0,"rating":2300,"tags":["data structures","graphs","shortest paths"]},{"contestId":785,"index":"E","name":"Anton and Permutation","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["brute force","data structures"]},{"contestId":780,"index":"G","name":"Andryusha and Nervous Barriers","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["data structures","dp"]},{"contestId":777,"index":"E","name":"Hanoi Factory","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["brute force","data structures","dp","greedy","sortings"]},{"contestId":777,"index":"C","name":"Alyona and Spreadsheet","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["binary search","data structures","dp","greedy","implementation","two pointers"]},{"contestId":777,"index":"B","name":"Game of Credit Cards","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","dp","greedy","sortings"]},{"contestId":776,"index":"F","name":"Sherlock\u0027s bet to Moriarty","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation","trees"]},{"contestId":776,"index":"C","name":"Molly\u0027s Chemicals","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["binary search","brute force","data structures","implementation","math"]},{"contestId":774,"index":"B","name":"Significant Cups","type":"PROGRAMMING","rating":2100,"tags":["*special","binary search","data structures","two pointers"]},{"contestId":773,"index":"E","name":"Blog Post Rating","type":"PROGRAMMING","points":2750.0,"rating":3000,"tags":["data structures","sortings"]},{"contestId":768,"index":"G","name":"The Winds of Winter","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["binary search","data structures"]},{"contestId":767,"index":"D","name":"Cartons of milk","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["binary search","data structures","greedy","sortings","two pointers"]},{"contestId":767,"index":"A","name":"Snacktower","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["data structures","implementation"]},{"contestId":766,"index":"E","name":"Mahmoud and a xor trip","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["bitmasks","constructive algorithms","data structures","dfs and similar","dp","math","trees"]},{"contestId":766,"index":"D","name":"Mahmoud and a Dictionary","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","dp","dsu","graphs"]},{"contestId":765,"index":"F","name":"Souvenirs","type":"PROGRAMMING","points":3250.0,"rating":3100,"tags":["data structures"]},{"contestId":763,"index":"E","name":"Timofey and our friends animals","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","dsu"]},{"contestId":763,"index":"D","name":"Timofey and a flat tree","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","graphs","hashing","shortest paths","trees"]},{"contestId":762,"index":"E","name":"Radio stations","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures"]},{"contestId":761,"index":"F","name":"Dasha and Photos","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["brute force","data structures","dp","implementation"]},{"contestId":757,"index":"G","name":"Can Bash Save the Day?","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":757,"index":"F","name":"Team Rocket Rises Again","type":"PROGRAMMING","points":2750.0,"rating":2800,"tags":["data structures","graphs","shortest paths"]},{"contestId":757,"index":"C","name":"Felicity is Coming!","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","hashing","sortings","strings"]},{"contestId":756,"index":"C","name":"Nikita and stack","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures"]},{"contestId":755,"index":"D","name":"PolandBall and Polygon","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["data structures"]},{"contestId":755,"index":"B","name":"PolandBall and Game","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["binary search","data structures","games","greedy","sortings","strings"]},{"contestId":754,"index":"D","name":"Fedor and coupons","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["binary search","data structures","greedy","sortings"]},{"contestId":750,"index":"E","name":"New Year and Old Subsequence","type":"PROGRAMMING","points":2250.0,"rating":2600,"tags":["data structures","divide and conquer","dp","matrices"]},{"contestId":750,"index":"D","name":"New Year and Fireworks","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["brute force","data structures","dfs and similar","dp","implementation"]},{"contestId":749,"index":"E","name":"Inversions After Shuffle","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","probabilities"]},{"contestId":749,"index":"D","name":"Leaving Auction","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures"]},{"contestId":748,"index":"E","name":"Santa Claus and Tangerines","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","greedy","two pointers"]},{"contestId":748,"index":"D","name":"Santa Claus and a Palindrome","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":746,"index":"F","name":"Music in Car","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","greedy","two pointers"]},{"contestId":741,"index":"E","name":"Arpa’s abnormal DNA and Mehrdad’s deep interest","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","string suffix structures"]},{"contestId":741,"index":"D","name":"Arpa’s letter-marked tree and Mehrdad’s Dokhtar-kosh paths","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","dfs and similar","trees"]},{"contestId":739,"index":"E","name":"Gosha is hunting","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["brute force","data structures","dp","flows","math","probabilities","sortings"]},{"contestId":739,"index":"C","name":"Alyona and towers","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["data structures"]},{"contestId":739,"index":"B","name":"Alyona and a tree","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","trees"]},{"contestId":733,"index":"F","name":"Drivers Dissatisfaction","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","dsu","graphs","trees"]},{"contestId":733,"index":"E","name":"Sleep in Class","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["constructive algorithms","data structures","math","two pointers"]},{"contestId":733,"index":"D","name":"Kostya the Sculptor","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["data structures","hashing"]},{"contestId":731,"index":"F","name":"Video Cards","type":"PROGRAMMING","points":3000.0,"rating":1900,"tags":["brute force","data structures","implementation","math","number theory"]},{"contestId":731,"index":"D","name":"80-th Level Archeology","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["brute force","data structures","greedy","sortings"]},{"contestId":730,"index":"L","name":"Expression Queries","type":"PROGRAMMING","rating":3200,"tags":["data structures"]},{"contestId":729,"index":"E","name":"Subordinates","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["constructive algorithms","data structures","graphs","greedy","sortings"]},{"contestId":727,"index":"E","name":"Games on a CD","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","hashing","string suffix structures","strings"]},{"contestId":725,"index":"D","name":"Contest Balloons","type":"PROGRAMMING","points":2250.0,"rating":1800,"tags":["data structures","greedy"]},{"contestId":724,"index":"D","name":"Dense Subsequence","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","greedy","strings"]},{"contestId":722,"index":"F","name":"Cyclic Cipher","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["chinese remainder theorem","data structures","implementation","number theory","two pointers"]},{"contestId":722,"index":"D","name":"Generating Sets","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["binary search","data structures","dfs and similar","greedy","strings","trees"]},{"contestId":722,"index":"C","name":"Destroying Array","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","dsu"]},{"contestId":721,"index":"D","name":"Maxim and Array","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","data structures","greedy","math"]},{"contestId":720,"index":"F","name":"Array Covering","type":"PROGRAMMING","rating":3100,"tags":["data structures"]},{"contestId":720,"index":"D","name":"Slalom","type":"PROGRAMMING","rating":3100,"tags":["data structures","dp","sortings"]},{"contestId":718,"index":"C","name":"Sasha and Array","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["data structures","math","matrices"]},{"contestId":717,"index":"F","name":"Heroes of Making Magic III","type":"PROGRAMMING","rating":2600,"tags":["data structures"]},{"contestId":713,"index":"D","name":"Animals and Puzzle","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["binary search","data structures"]},{"contestId":713,"index":"A","name":"Sonya and Queries","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","implementation"]},{"contestId":712,"index":"E","name":"Memory and Casinos","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","math","probabilities"]},{"contestId":710,"index":"F","name":"String Set Queries","type":"PROGRAMMING","rating":2400,"tags":["brute force","data structures","hashing","interactive","string suffix structures","strings"]},{"contestId":708,"index":"C","name":"Centroids","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["data structures","dfs and similar","dp","graphs","greedy","trees"]},{"contestId":707,"index":"E","name":"Garlands","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures"]},{"contestId":707,"index":"D","name":"Persistent Bookcase ","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["bitmasks","data structures","dfs and similar","implementation"]},{"contestId":706,"index":"E","name":"Working routine","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","implementation"]},{"contestId":706,"index":"D","name":"Vasiliy\u0027s Multiset","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["binary search","bitmasks","data structures","trees"]},{"contestId":704,"index":"E","name":"Iron Man","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures","geometry","trees"]},{"contestId":704,"index":"A","name":"Thor","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["brute force","data structures","implementation"]},{"contestId":703,"index":"D","name":"Mishka and Interesting sum","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures"]},{"contestId":702,"index":"F","name":"T-Shirts","type":"PROGRAMMING","rating":2800,"tags":["data structures"]},{"contestId":702,"index":"E","name":"Analysis of Pathes in Functional Graph","type":"PROGRAMMING","rating":2100,"tags":["data structures","graphs"]},{"contestId":702,"index":"B","name":"Powers of Two","type":"PROGRAMMING","rating":1500,"tags":["brute force","data structures","implementation","math"]},{"contestId":701,"index":"B","name":"Cells Not Under Attack","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["data structures","math"]},{"contestId":700,"index":"D","name":"Huffman Coding on Segment","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["data structures","greedy"]},{"contestId":696,"index":"E","name":"...Wait for it...","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dsu","trees"]},{"contestId":696,"index":"D","name":"Legen...","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","dp","matrices","strings"]},{"contestId":696,"index":"A","name":"Lorenzo Von Matterhorn","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["brute force","data structures","implementation","trees"]},{"contestId":690,"index":"B3","name":"Recover Polygon (hard)","type":"PROGRAMMING","rating":2600,"tags":["data structures"]},{"contestId":689,"index":"E","name":"Mike and Geometry Problem","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["combinatorics","data structures","dp","geometry","implementation"]},{"contestId":689,"index":"D","name":"Friends and Subsequences","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["binary search","data structures"]},{"contestId":687,"index":"D","name":"Dividing Kingdom II","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["brute force","data structures","dsu","graphs","sortings"]},{"contestId":685,"index":"B","name":"Kay and Snowflake","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":681,"index":"C","name":"Heap Operations","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","greedy"]},{"contestId":679,"index":"E","name":"Bear and Bad Powers of 42","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures"]},{"contestId":678,"index":"F","name":"Lena and Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","geometry"]},{"contestId":677,"index":"D","name":"Vanya and Treasure","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["data structures","dp","graphs","shortest paths"]},{"contestId":675,"index":"E","name":"Trains and Statistic","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","dp","greedy"]},{"contestId":675,"index":"D","name":"Tree Construction","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","trees"]},{"contestId":675,"index":"C","name":"Money Transfers","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","data structures","greedy","sortings"]},{"contestId":671,"index":"E","name":"Organizing a Race","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["data structures","greedy"]},{"contestId":671,"index":"D","name":"Roads in Yusland","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","dp","greedy"]},{"contestId":671,"index":"C","name":"Ultimate Weirdness of an Array","type":"PROGRAMMING","points":1500.0,"rating":2800,"tags":["data structures","number theory"]},{"contestId":670,"index":"E","name":"Correct Bracket Sequence Editor","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["data structures","dsu","strings"]},{"contestId":666,"index":"E","name":"Forensic Examination","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures","string suffix structures"]},{"contestId":665,"index":"F","name":"Four Divisors","type":"PROGRAMMING","rating":2400,"tags":["data structures","dp","math","number theory","sortings","two pointers"]},{"contestId":665,"index":"E","name":"Beautiful Subarrays","type":"PROGRAMMING","rating":2100,"tags":["data structures","divide and conquer","strings","trees"]},{"contestId":660,"index":"F","name":"Bear and Bowling 4","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","divide and conquer","geometry","ternary search"]},{"contestId":659,"index":"E","name":"New Reform","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"contestId":653,"index":"F","name":"Paper task","type":"PROGRAMMING","points":3500.0,"rating":2600,"tags":["data structures","string suffix structures","strings"]},{"contestId":652,"index":"D","name":"Nested Segments","type":"PROGRAMMING","rating":1800,"tags":["data structures","sortings"]},{"contestId":650,"index":"E","name":"Clockwork Bomb","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dfs and similar","dsu","greedy","trees"]},{"contestId":650,"index":"D","name":"Zip-line","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["binary search","data structures","dp","hashing"]},{"contestId":650,"index":"A","name":"Watchmen","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","geometry","math"]},{"contestId":644,"index":"C","name":"Hostname Aliases","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["*special","binary search","data structures","implementation","sortings","strings"]},{"contestId":644,"index":"B","name":"Processing Queries","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["*special","constructive algorithms","data structures","two pointers"]},{"contestId":643,"index":"G","name":"Choosing Ads","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["data structures"]},{"contestId":641,"index":"E","name":"Little Artem and Time Machine","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures"]},{"contestId":639,"index":"F","name":"Bear and Chemistry","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":639,"index":"D","name":"Bear and Contribution","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","greedy","sortings","two pointers"]},{"contestId":637,"index":"D","name":"Running with Obstacles","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["*special","data structures","dp","greedy"]},{"contestId":637,"index":"B","name":"Chat Order","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["*special","binary search","constructive algorithms","data structures","sortings"]},{"contestId":633,"index":"H","name":"Fibonacci-ish II","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures","implementation"]},{"contestId":633,"index":"G","name":"Yash And Trees","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["bitmasks","data structures","dfs and similar","math","number theory"]},{"contestId":633,"index":"E","name":"Startup Funding","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","constructive algorithms","data structures","probabilities","two pointers"]},{"contestId":633,"index":"C","name":"Spy Syndrome 2","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","dp","hashing","implementation","sortings","string suffix structures","strings"]},{"contestId":631,"index":"E","name":"Product Sum","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dp","geometry"]},{"contestId":631,"index":"D","name":"Messenger","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","hashing","implementation","string suffix structures","strings"]},{"contestId":631,"index":"C","name":"Report","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","sortings"]},{"contestId":629,"index":"E","name":"Famil Door and Roads","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["combinatorics","data structures","dfs and similar","dp","probabilities","trees"]},{"contestId":629,"index":"D","name":"Babaei and Birthday Cake","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dp"]},{"contestId":628,"index":"E","name":"Zbazi in Zeydabad","type":"PROGRAMMING","rating":2300,"tags":["data structures","implementation"]},{"contestId":627,"index":"C","name":"Package Delivery","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures","divide and conquer","greedy"]},{"contestId":627,"index":"B","name":"Factory Repairs","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["data structures"]},{"contestId":626,"index":"G","name":"Raffles","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures","dp","greedy","math"]},{"contestId":625,"index":"E","name":"Frog Fights","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","greedy"]},{"contestId":622,"index":"C","name":"Not Equal on a Segment","type":"PROGRAMMING","rating":1700,"tags":["data structures","implementation"]},{"contestId":620,"index":"F","name":"Xors on Segments","type":"PROGRAMMING","rating":2800,"tags":["data structures","strings","trees"]},{"contestId":620,"index":"E","name":"New Year Tree","type":"PROGRAMMING","rating":2100,"tags":["bitmasks","data structures","trees"]},{"contestId":618,"index":"E","name":"Robot Arm","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","geometry"]},{"contestId":617,"index":"E","name":"XOR and Favorite Number","type":"PROGRAMMING","points":2750.0,"rating":2200,"tags":["data structures"]},{"contestId":616,"index":"D","name":"Longest k-Good Segment","type":"PROGRAMMING","rating":1600,"tags":["binary search","data structures","two pointers"]},{"contestId":612,"index":"C","name":"Replace To Make Regular Bracket Sequence","type":"PROGRAMMING","rating":1400,"tags":["data structures","expression parsing","math"]},{"contestId":611,"index":"E","name":"New Year and Three Musketeers","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","greedy","sortings"]},{"contestId":610,"index":"E","name":"Alphabet Permutations","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","strings"]},{"contestId":610,"index":"D","name":"Vika and Segments","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","data structures","geometry","two pointers"]},{"contestId":609,"index":"F","name":"Frogs and mosquitoes","type":"PROGRAMMING","rating":2500,"tags":["data structures","greedy"]},{"contestId":609,"index":"E","name":"Minimum spanning tree for each edge","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","trees"]},{"contestId":607,"index":"D","name":"Power Tree","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":605,"index":"D","name":"Board Game","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","dfs and similar"]},{"contestId":605,"index":"B","name":"Lazy Student","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","data structures","graphs"]},{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},{"contestId":601,"index":"E","name":"A Museum Robbery","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","dp"]},{"contestId":601,"index":"D","name":"Acyclic Organic Compounds","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","hashing","strings","trees"]},{"contestId":601,"index":"B","name":"Lipshitz Sequence","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["data structures","math"]},{"contestId":600,"index":"E","name":"Lomsat gelral","type":"PROGRAMMING","rating":2300,"tags":["data structures","dfs and similar","dsu","trees"]},{"contestId":600,"index":"B","name":"Queries about less or equal elements","type":"PROGRAMMING","rating":1300,"tags":["binary search","data structures","sortings","two pointers"]},{"contestId":597,"index":"C","name":"Subsequences","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","dp"]},{"contestId":594,"index":"D","name":"REQ","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","number theory"]},{"contestId":593,"index":"D","name":"Happy Tree Party","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dfs and similar","graphs","math","trees"]},{"contestId":587,"index":"F","name":"Duff is Mad","type":"PROGRAMMING","points":2750.0,"rating":3000,"tags":["data structures","strings"]},{"contestId":587,"index":"E","name":"Duff as a Queen","type":"PROGRAMMING","points":2750.0,"rating":2900,"tags":["data structures"]},{"contestId":587,"index":"C","name":"Duff in the Army","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures","trees"]},{"contestId":580,"index":"E","name":"Kefa and Watch","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","hashing","strings"]},{"contestId":577,"index":"B","name":"Modulo Sum","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["combinatorics","data structures","dp","two pointers"]},{"contestId":576,"index":"E","name":"Painting Edges","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["binary search","data structures"]},{"contestId":575,"index":"I","name":"Robots protection","type":"PROGRAMMING","rating":2800,"tags":["data structures"]},{"contestId":575,"index":"A","name":"Fibonotci","type":"PROGRAMMING","rating":2700,"tags":["data structures","math","matrices"]},{"contestId":573,"index":"E","name":"Bear and Bowling","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","greedy"]},{"contestId":573,"index":"D","name":"Bear and Cavalry","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["data structures","divide and conquer","dp"]},{"contestId":573,"index":"B","name":"Bear and Blocks","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["binary search","data structures","dp","math"]},{"contestId":572,"index":"B","name":"Order Book","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","greedy","implementation","sortings"]},{"contestId":571,"index":"D","name":"Campus","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["binary search","data structures","dsu","trees"]},{"contestId":570,"index":"C","name":"Replacement","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":568,"index":"E","name":"Longest Increasing Subsequence","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dp"]},{"contestId":567,"index":"D","name":"One-Dimensional Battle Ships","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["binary search","data structures","greedy","sortings"]},{"contestId":567,"index":"C","name":"Geometric Progression","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","data structures","dp"]},{"contestId":566,"index":"D","name":"Restructuring Company","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","dsu"]},{"contestId":558,"index":"E","name":"A Simple Task","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","sortings","strings"]},{"contestId":558,"index":"D","name":"Guess Your Way Out! II","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["data structures","implementation","sortings"]},{"contestId":557,"index":"E","name":"Ann and Half-Palindrome","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","dp","graphs","string suffix structures","strings","trees"]},{"contestId":557,"index":"C","name":"Arthur and Table","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["brute force","data structures","dp","greedy","math","sortings"]},{"contestId":555,"index":"C","name":"Case of Chocolate","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["data structures"]},{"contestId":555,"index":"B","name":"Case of Fugitive","type":"PROGRAMMING","points":750.0,"rating":2000,"tags":["data structures","greedy","sortings"]},{"contestId":552,"index":"D","name":"Vanya and Triangles","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","combinatorics","data structures","geometry","math","sortings"]},{"contestId":551,"index":"E","name":"GukiZ and GukiZiana","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures","implementation"]},{"contestId":549,"index":"F","name":"Yura and Developers","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":547,"index":"E","name":"Mike and Friends","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":547,"index":"B","name":"Mike and Feet","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","dp","dsu"]},{"contestId":543,"index":"E","name":"Listening to Music","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","data structures"]},{"contestId":542,"index":"B","name":"Duck Hunt","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures"]},{"contestId":542,"index":"A","name":"Place Your Ad Here","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","sortings"]},{"contestId":540,"index":"E","name":"Infinite Inversions","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","implementation","sortings","trees"]},{"contestId":538,"index":"H","name":"Summer Dichotomy","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["2-sat","data structures","dfs and similar","greedy"]},{"contestId":538,"index":"F","name":"A Heap of Heaps","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["brute force","data structures","math","sortings"]},{"contestId":536,"index":"E","name":"Tavas on the Path","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","divide and conquer","trees"]},{"contestId":534,"index":"D","name":"Handshakes","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","constructive algorithms","data structures","greedy"]},{"contestId":533,"index":"D","name":"Landmarks","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","dp"]},{"contestId":533,"index":"A","name":"Berland Miners","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"contestId":527,"index":"D","name":"Clique Problem","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","dp","greedy","implementation","sortings"]},{"contestId":527,"index":"C","name":"Glass Carving","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["binary search","data structures","implementation"]},{"contestId":526,"index":"F","name":"Pudding Monsters","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer"]},{"contestId":525,"index":"D","name":"Arthur and Walls","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["constructive algorithms","data structures","graphs","greedy","shortest paths"]},{"contestId":524,"index":"F","name":"And Yet Another Bracket Sequence","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["data structures","greedy","hashing","string suffix structures","strings"]},{"contestId":524,"index":"E","name":"Rooks and Rectangles","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["data structures","sortings"]},{"contestId":523,"index":"D","name":"Statistics of Recompressing Videos","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["*special","data structures","implementation"]},{"contestId":522,"index":"D","name":"Closest Equals","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["*special","data structures"]},{"contestId":522,"index":"B","name":"Photo to Remember","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["*special","data structures","dp","implementation"]},{"contestId":519,"index":"E","name":"A and B and Lecture Rooms","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","dfs and similar","dp","trees"]},{"contestId":519,"index":"D","name":"A and B and Interesting Substrings","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","dp","two pointers"]},{"contestId":519,"index":"B","name":"A and B and Compilation Errors","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["data structures","implementation","sortings"]},{"contestId":518,"index":"C","name":"Anya and Smartphone","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":515,"index":"E","name":"Drazil and Park","type":"PROGRAMMING","points":3000.0,"rating":2300,"tags":["data structures"]},{"contestId":514,"index":"D","name":"R2D2 and Droid Army","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","two pointers"]},{"contestId":514,"index":"C","name":"Watto and Mechanism","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","hashing","string suffix structures","strings"]},{"contestId":514,"index":"B","name":"Han Solo and Lazer Gun","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["brute force","data structures","geometry","implementation","math"]},{"contestId":513,"index":"D2","name":"Constrained Tree","type":"PROGRAMMING","points":8.0,"rating":2600,"tags":["constructive algorithms","data structures"]},{"contestId":501,"index":"D","name":"Misha and Permutations Summation","type":"PROGRAMMING","points":3000.0,"rating":2000,"tags":["data structures"]},{"contestId":501,"index":"C","name":"Misha and Forest","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","data structures","greedy","sortings","trees"]},{"contestId":501,"index":"B","name":"Misha and Changing Handles","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["data structures","dsu","strings"]},{"contestId":500,"index":"E","name":"New Year Domino","type":"PROGRAMMING","points":2750.0,"rating":2300,"tags":["data structures","dp","dsu"]},{"contestId":498,"index":"D","name":"Traffic Jams in the Land","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dp","number theory"]},{"contestId":494,"index":"E","name":"Sharti","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","games"]},{"contestId":494,"index":"D","name":"Birthday","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":493,"index":"C","name":"Vasya and Basketball","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["binary search","brute force","data structures","implementation","sortings","two pointers"]},{"contestId":490,"index":"F","name":"Treeland Tour","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":487,"index":"E","name":"Tourists","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":487,"index":"D","name":"Conveyor Belts","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["data structures"]},{"contestId":487,"index":"B","name":"Strip","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["binary search","data structures","dp","two pointers"]},{"contestId":486,"index":"E","name":"LIS of Sequence","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dp","greedy","hashing","math"]},{"contestId":484,"index":"E","name":"Sign on Fence","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["binary search","constructive algorithms","data structures"]},{"contestId":484,"index":"D","name":"Kindergarten","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dp","greedy"]},{"contestId":482,"index":"E","name":"ELCA","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","trees"]},{"contestId":482,"index":"B","name":"Interesting Array","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","data structures","trees"]},{"contestId":480,"index":"E","name":"Parking Lot","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":477,"index":"E","name":"Dreamoon and Notepad","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["data structures"]},{"contestId":475,"index":"F","name":"Meta-universe","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures"]},{"contestId":475,"index":"D","name":"CGCDSSQ","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["brute force","data structures","math"]},{"contestId":474,"index":"F","name":"Ant colony","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["data structures","math","number theory"]},{"contestId":474,"index":"E","name":"Pillars","type":"PROGRAMMING","points":3000.0,"rating":2000,"tags":["binary search","data structures","dp","sortings","trees"]},{"contestId":472,"index":"G","name":"Design Tutorial: Increase the Constraints","type":"PROGRAMMING","points":3500.0,"rating":2800,"tags":["bitmasks","data structures","fft"]},{"contestId":471,"index":"E","name":"MUH and Lots and Lots of Segments","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","dsu"]},{"contestId":467,"index":"E","name":"Alex and Complicated Task","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","dp","greedy"]},{"contestId":466,"index":"C","name":"Number of Ways","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","brute force","data structures","dp","two pointers"]},{"contestId":464,"index":"E","name":"The Classic Problem","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","graphs","shortest paths"]},{"contestId":461,"index":"C","name":"Appleman and a Sheet of Paper","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures","implementation"]},{"contestId":460,"index":"C","name":"Present","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","data structures","greedy"]},{"contestId":459,"index":"D","name":"Pashmak and Parmida\u0027s problem","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","divide and conquer","sortings"]},{"contestId":455,"index":"E","name":"Function","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures"]},{"contestId":455,"index":"D","name":"Serega and Fun","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["data structures"]},{"contestId":453,"index":"E","name":"Little Pony and Lord Tirek","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures"]},{"contestId":452,"index":"F","name":"Permutation","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","divide and conquer","hashing"]},{"contestId":452,"index":"E","name":"Three strings","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dsu","string suffix structures","strings"]},{"contestId":446,"index":"C","name":"DZY Loves Fibonacci Numbers","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","math","number theory"]},{"contestId":446,"index":"B","name":"DZY Loves Modification","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["brute force","data structures","greedy"]},{"contestId":444,"index":"C","name":"DZY Loves Colors","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures"]},{"contestId":442,"index":"D","name":"Adam and Tree","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":442,"index":"C","name":"Artem and Array ","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["data structures","greedy"]},{"contestId":438,"index":"D","name":"The Child and Sequence","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["data structures","math"]},{"contestId":436,"index":"F","name":"Banners","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["brute force","data structures","dp"]},{"contestId":436,"index":"E","name":"Cardboard Box","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","greedy"]},{"contestId":431,"index":"E","name":"Chemistry Experiment","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures","ternary search"]},{"contestId":429,"index":"D","name":"Tricky Function","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures","divide and conquer","geometry"]},{"contestId":427,"index":"B","name":"Prison Transfer","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["data structures","implementation"]},{"contestId":425,"index":"D","name":"Sereja and Squares","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["binary search","data structures","hashing"]},{"contestId":425,"index":"C","name":"Sereja and Two Sequences","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["data structures","dp"]},{"contestId":424,"index":"D","name":"Biathlon Track","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["binary search","brute force","constructive algorithms","data structures","dp"]},{"contestId":421,"index":"D","name":"Bug in Code","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","data structures","sortings"]},{"contestId":420,"index":"D","name":"Cup Trick","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures"]},{"contestId":420,"index":"C","name":"Bug in Code","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","graphs","implementation","two pointers"]},{"contestId":418,"index":"E","name":"Tricky Password","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures"]},{"contestId":418,"index":"D","name":"Big Problems for Organizers","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","graphs","trees"]},{"contestId":414,"index":"E","name":"Mashmokh\u0027s Designed Problem","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures"]},{"contestId":414,"index":"D","name":"Mashmokh and Water Tanks","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","data structures","greedy","trees","two pointers"]},{"contestId":413,"index":"E","name":"Maze 2D","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","divide and conquer"]},{"contestId":407,"index":"E","name":"k-d-sequence","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures"]},{"contestId":403,"index":"E","name":"Two Rooted Trees","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","implementation","trees"]},{"contestId":400,"index":"E","name":"Inna and Binary Logic","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","bitmasks","data structures"]},{"contestId":398,"index":"D","name":"Instant Messanger","type":"PROGRAMMING","points":2000.0,"tags":["data structures"]},{"contestId":396,"index":"C","name":"On Changing Tree","type":"PROGRAMMING","points":1500.0,"tags":["data structures","graphs","trees"]},{"contestId":392,"index":"D","name":"Three Arrays","type":"PROGRAMMING","points":2000.0,"tags":["data structures"]},{"contestId":391,"index":"D2","name":"Supercollider","type":"PROGRAMMING","points":16.0,"tags":["data structures"]},{"contestId":390,"index":"C","name":"Inna and Candy Boxes","type":"PROGRAMMING","points":1500.0,"tags":["data structures"]},{"contestId":387,"index":"E","name":"George and Cards","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures"]},{"contestId":385,"index":"C","name":"Bear and Prime Numbers","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","brute force","data structures","dp","implementation","math","number theory"]},{"contestId":383,"index":"C","name":"Propagating tree","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dfs and similar","trees"]},{"contestId":383,"index":"A","name":"Milking cows","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["data structures","greedy"]},{"contestId":380,"index":"E","name":"Sereja and Dividing","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures"]},{"contestId":380,"index":"C","name":"Sereja and Brackets","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","schedules"]},{"contestId":379,"index":"F","name":"New Year Tree","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":377,"index":"D","name":"Developing Game","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures"]},{"contestId":377,"index":"B","name":"Preparing for the Contest","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","greedy","sortings"]},{"contestId":375,"index":"D","name":"Tree and Queries","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dfs and similar","trees"]},{"contestId":375,"index":"B","name":"Maximum Submatrix 2","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","dp","implementation","sortings"]},{"contestId":374,"index":"E","name":"Inna and Babies","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["binary search","data structures","dsu","geometry","implementation"]},{"contestId":374,"index":"D","name":"Inna and Sequence ","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","dp","trees"]},{"contestId":372,"index":"D","name":"Choosing Subtree is Fun","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["binary search","data structures","dfs and similar","trees","two pointers"]},{"contestId":372,"index":"C","name":"Watching Fireworks is Fun","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["data structures","dp","math"]},{"contestId":371,"index":"D","name":"Vessels","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","dsu","implementation","trees"]},{"contestId":369,"index":"E","name":"Valera and Queries","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures"]},{"contestId":368,"index":"B","name":"Sereja and Suffixes","type":"PROGRAMMING","points":1000.0,"rating":1100,"tags":["data structures","dp"]},{"contestId":367,"index":"B","name":"Sereja ans Anagrams","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures"]},{"contestId":367,"index":"A","name":"Sereja and Algorithm ","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["data structures","implementation"]},{"contestId":366,"index":"D","name":"Dima and Trap Graph","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","dfs and similar","dsu","shortest paths","two pointers"]},{"contestId":364,"index":"A","name":"Matrix","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["combinatorics","data structures","implementation"]},{"contestId":363,"index":"E","name":"Two Circles","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["brute force","data structures","implementation"]},{"contestId":362,"index":"D","name":"Fools and Foolproof Roads","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"contestId":362,"index":"C","name":"Insertion Sort","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["data structures","dp","implementation","math"]},{"contestId":359,"index":"D","name":"Pair of Numbers","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["binary search","brute force","data structures","math","two pointers"]},{"contestId":356,"index":"A","name":"Knight Tournament","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["data structures","dsu"]},{"contestId":351,"index":"D","name":"Jeff and Removing Periods","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["data structures"]},{"contestId":350,"index":"D","name":"Looking for Owls","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["binary search","data structures","geometry","hashing","sortings"]},{"contestId":349,"index":"B","name":"Color the Fence","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["data structures","dp","greedy","implementation"]},{"contestId":348,"index":"C","name":"Subset Sums","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","data structures"]},{"contestId":343,"index":"D","name":"Water Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":343,"index":"B","name":"Alternating Current","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","greedy","implementation"]},{"contestId":342,"index":"E","name":"Xenia and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":341,"index":"D","name":"Iahub and Xors","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures"]},{"contestId":340,"index":"D","name":"Bubble Sort Graph","type":"PROGRAMMING","points":2000.0,"rating":1500,"tags":["binary search","data structures","dp"]},{"contestId":339,"index":"D","name":"Xenia and Bit Operations","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["data structures","trees"]},{"contestId":338,"index":"E","name":"Optimize!","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures"]},{"contestId":332,"index":"C","name":"Students\u0027 Revenge","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","greedy","sortings"]},{"contestId":332,"index":"B","name":"Maximum Absurdity","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["data structures","dp","implementation"]},{"contestId":331,"index":"D3","name":"Escaping on Beaveractor","type":"PROGRAMMING","points":40.0,"rating":3000,"tags":["data structures","implementation","trees"]},{"contestId":331,"index":"B2","name":"Shave Beaver!","type":"PROGRAMMING","points":70.0,"rating":1900,"tags":["data structures"]},{"contestId":331,"index":"A2","name":"Oh Sweet Beaverette","type":"PROGRAMMING","points":70.0,"rating":1500,"tags":["data structures","sortings"]},{"contestId":323,"index":"C","name":"Two permutations","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures"]},{"contestId":321,"index":"E","name":"Ciel and Gondolas","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","divide and conquer","dp"]},{"contestId":319,"index":"E","name":"Ping-Pong","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures"]},{"contestId":319,"index":"B","name":"Psychos in a Line","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","implementation"]},{"contestId":316,"index":"E3","name":"Summer Homework","type":"PROGRAMMING","points":30.0,"rating":2300,"tags":["data structures","math"]},{"contestId":316,"index":"E2","name":"Summer Homework","type":"PROGRAMMING","points":40.0,"rating":2300,"tags":["data structures","math"]},{"contestId":316,"index":"E1","name":"Summer Homework","type":"PROGRAMMING","points":30.0,"rating":1500,"tags":["brute force","data structures"]},{"contestId":314,"index":"D","name":"Sereja and Straight Lines","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","data structures","geometry","sortings","two pointers"]},{"contestId":314,"index":"C","name":"Sereja and Subsequences","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dp"]},{"contestId":313,"index":"E","name":"Ilya and Two Numbers","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","data structures","dsu","greedy"]},{"contestId":311,"index":"D","name":"Interval Cubing","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","math"]},{"contestId":311,"index":"C","name":"Fetch the Treasure","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","data structures","graphs","shortest paths"]},{"contestId":311,"index":"B","name":"Cats Transport","type":"PROGRAMMING","points":1000.0,"rating":2400,"tags":["data structures","dp"]},{"contestId":306,"index":"B","name":"Optimizer","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["data structures","greedy","sortings"]},{"contestId":301,"index":"D","name":"Yaroslav and Divisors","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures"]},{"contestId":297,"index":"E","name":"Mystic Carvings","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures"]},{"contestId":295,"index":"E","name":"Yaroslav and Points","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures"]},{"contestId":295,"index":"A","name":"Greg and Array","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","implementation"]},{"contestId":293,"index":"E","name":"Close Vertices","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","divide and conquer","trees"]},{"contestId":292,"index":"E","name":"Copying Data","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["data structures"]},{"contestId":292,"index":"D","name":"Connected Components","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","dfs and similar","dp","dsu"]},{"contestId":286,"index":"D","name":"Tourists","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","sortings"]},{"contestId":283,"index":"E","name":"Cow Tennis Tournament","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["combinatorics","data structures","math"]},{"contestId":283,"index":"A","name":"Cows and Sequence","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":282,"index":"E","name":"Sausage Maximization","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["bitmasks","data structures","trees"]},{"contestId":280,"index":"E","name":"Sequence Transformation","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["brute force","data structures","dp","implementation","math"]},{"contestId":280,"index":"D","name":"k-Maximum Subsequence Sum","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["data structures","flows","graphs","implementation"]},{"contestId":280,"index":"B","name":"Maximum Xor Secondary","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["data structures","implementation","two pointers"]},{"contestId":276,"index":"E","name":"Little Girl and Problem on Trees","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","graphs","trees"]},{"contestId":276,"index":"C","name":"Little Girl and Maximum Sum","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","greedy","implementation","sortings"]},{"contestId":274,"index":"E","name":"Mirror Room","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["data structures","implementation"]},{"contestId":272,"index":"C","name":"Dima and Staircase","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","implementation"]},{"contestId":271,"index":"D","name":"Good Substrings","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","strings"]},{"contestId":270,"index":"B","name":"Multithreading","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["data structures","greedy","implementation"]},{"contestId":269,"index":"D","name":"Maximum Waterfall","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","dp","graphs","sortings"]},{"contestId":266,"index":"E","name":"More Queries to Array...","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["data structures","math"]},{"contestId":264,"index":"E","name":"Roadside Trees","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dp"]},{"contestId":264,"index":"A","name":"Escape from Stones","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["constructive algorithms","data structures","implementation","two pointers"]},{"contestId":263,"index":"E","name":"Rhombus","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["brute force","data structures","dp"]},{"contestId":260,"index":"E","name":"Dividing Kingdom","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","brute force","data structures"]},{"contestId":258,"index":"E","name":"Little Elephant and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dfs and similar","trees"]},{"contestId":257,"index":"E","name":"Greedy Elevator","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","implementation"]},{"contestId":256,"index":"E","name":"Lucky Arrays","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures"]},{"contestId":253,"index":"E","name":"Printer","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures","implementation","sortings"]},{"contestId":253,"index":"C","name":"Text Editor","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["data structures","dfs and similar","graphs","greedy","shortest paths"]},{"contestId":249,"index":"D","name":"Donkey and Stars","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["data structures","dp","geometry","math","sortings"]},{"contestId":246,"index":"E","name":"Blood Cousins Return","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","dfs and similar","dp","sortings"]},{"contestId":243,"index":"E","name":"Matrix","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures"]},{"contestId":243,"index":"D","name":"Cubes","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["data structures","dp","geometry","two pointers"]},{"contestId":242,"index":"E","name":"XOR on Segment","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["bitmasks","data structures"]},{"contestId":241,"index":"B","name":"Friends","type":"PROGRAMMING","rating":2700,"tags":["binary search","bitmasks","data structures","math"]},{"contestId":240,"index":"F","name":"TorCoder","type":"PROGRAMMING","rating":2600,"tags":["data structures"]},{"contestId":238,"index":"D","name":"Tape Programming","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","implementation"]},{"contestId":235,"index":"C","name":"Cyclical Quest","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["data structures","string suffix structures","strings"]},{"contestId":232,"index":"D","name":"Fence","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["binary search","data structures","string suffix structures"]},{"contestId":231,"index":"E","name":"Cactus","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dfs and similar","dp","graphs","trees"]},{"contestId":229,"index":"B","name":"Planets","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["binary search","data structures","graphs","shortest paths"]},{"contestId":228,"index":"D","name":"Zigzag","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures"]},{"contestId":226,"index":"E","name":"Noble Knight\u0027s Path","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":226,"index":"C","name":"Anniversary","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","implementation","math","matrices","number theory"]},{"contestId":223,"index":"B","name":"Two Strings","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","dp","strings"]},{"contestId":223,"index":"A","name":"Bracket Sequence","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["data structures","expression parsing","implementation"]},{"contestId":222,"index":"B","name":"Cosmic Tables","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","implementation"]},{"contestId":220,"index":"E","name":"Little Elephant and Inversions","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","two pointers"]},{"contestId":220,"index":"C","name":"Little Elephant and Shifts","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["data structures"]},{"contestId":220,"index":"B","name":"Little Elephant and Array","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","data structures"]},{"contestId":219,"index":"E","name":"Parking Lot","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures"]},{"contestId":217,"index":"E","name":"Alien DNA","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","dsu","trees"]},{"contestId":213,"index":"E","name":"Two Permutations","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","hashing","strings"]},{"contestId":212,"index":"D","name":"Cutting a Fence","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures","dsu"]},{"contestId":208,"index":"E","name":"Blood Cousins","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["binary search","data structures","dfs and similar","trees"]},{"contestId":207,"index":"C3","name":"Game with Two Trees","type":"PROGRAMMING","points":50.0,"rating":2700,"tags":["data structures"]},{"contestId":204,"index":"E","name":"Little Elephant and Strings","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","implementation","string suffix structures","two pointers"]},{"contestId":204,"index":"B","name":"Little Elephant and Cards","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["binary search","data structures"]},{"contestId":200,"index":"A","name":"Cinema","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["brute force","data structures"]},{"contestId":198,"index":"E","name":"Gripping Story","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","sortings"]},{"contestId":196,"index":"D","name":"The Next Good String","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","greedy","hashing","strings"]},{"contestId":195,"index":"E","name":"Building Forest","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["data structures","dsu","graphs"]},{"contestId":195,"index":"B","name":"After Training","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["data structures","implementation","math"]},{"contestId":193,"index":"D","name":"Two Segments","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures"]},{"contestId":191,"index":"E","name":"Thwarting Demonstrations","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures","trees"]},{"contestId":191,"index":"C","name":"Fools and Roads","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","dfs and similar","trees"]},{"contestId":190,"index":"E","name":"Counter Attack","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dsu","graphs","hashing","sortings"]},{"contestId":187,"index":"E","name":"Heaven Tour","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","greedy"]},{"contestId":187,"index":"D","name":"BRT Contract ","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["data structures"]},{"contestId":185,"index":"E","name":"Soap Time! - 2","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["binary search","data structures"]},{"contestId":182,"index":"C","name":"Optimal Sum","type":"PROGRAMMING","points":3000.0,"rating":2000,"tags":["data structures","greedy"]},{"contestId":177,"index":"D2","name":"Encrypting Messages","type":"PROGRAMMING","points":70.0,"rating":1500,"tags":["data structures"]},{"contestId":176,"index":"E","name":"Archaeology","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","dfs and similar","trees"]},{"contestId":175,"index":"F","name":"Gnomes of Might and Magic","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","graphs","implementation","shortest paths"]},{"contestId":174,"index":"C","name":"Range Increments","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","greedy"]},{"contestId":173,"index":"E","name":"Camping Groups","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","sortings"]},{"contestId":167,"index":"D","name":"Wizards and Roads","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["data structures","divide and conquer","graph matchings","graphs","greedy"]},{"contestId":165,"index":"D","name":"Beard Graph","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dsu","trees"]},{"contestId":163,"index":"E","name":"e-Government","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","dfs and similar","dp","strings","trees"]},{"contestId":160,"index":"E","name":"Buses and People","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","sortings"]},{"contestId":159,"index":"E","name":"Zebra Tower","type":"PROGRAMMING","points":2500.0,"rating":1700,"tags":["*special","data structures","greedy","sortings"]},{"contestId":159,"index":"C","name":"String Manipulation 1.0","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["*special","binary search","brute force","data structures","strings"]},{"contestId":158,"index":"C","name":"Cd and pwd commands","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["*special","data structures","implementation"]},{"contestId":156,"index":"B","name":"Suspects","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","data structures","implementation"]},{"contestId":150,"index":"E","name":"Freezing with Style","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","data structures","divide and conquer","trees"]},{"contestId":150,"index":"C","name":"Smart Cheater","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["data structures","math","probabilities"]},{"contestId":145,"index":"E","name":"Lucky Queries","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures"]},{"contestId":145,"index":"D","name":"Lucky Pair","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["combinatorics","data structures","implementation"]},{"contestId":144,"index":"E","name":"Competition","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","greedy"]},{"contestId":144,"index":"D","name":"Missile Silos","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","dfs and similar","graphs","shortest paths"]},{"contestId":140,"index":"C","name":"New Year Snowmen","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["binary search","data structures","greedy"]},{"contestId":138,"index":"C","name":"Mushroom Gnomes - 2","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["binary search","data structures","probabilities","sortings"]},{"contestId":137,"index":"E","name":"Last Chance","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["data structures","implementation","strings"]},{"contestId":121,"index":"E","name":"Lucky Array","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures"]},{"contestId":117,"index":"E","name":"Tree or not Tree","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":115,"index":"E","name":"Linear Kingdom Races","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dp"]},{"contestId":113,"index":"B","name":"Petr#","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["brute force","data structures","hashing","strings"]},{"contestId":111,"index":"B","name":"Petya and Divisors","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","number theory"]},{"contestId":103,"index":"D","name":"Time to Raid Cowavans","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["brute force","data structures","sortings"]},{"contestId":101,"index":"B","name":"Buses","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["binary search","data structures","dp"]},{"contestId":100,"index":"G","name":"Name the album","type":"PROGRAMMING","rating":1800,"tags":["*special","data structures","implementation"]},{"contestId":91,"index":"E","name":"Igloo Skyscraper","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","geometry"]},{"contestId":91,"index":"B","name":"Queue","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["binary search","data structures"]},{"contestId":89,"index":"C","name":"Chip Play","type":"PROGRAMMING","points":1000.0,"rating":2300,"tags":["brute force","data structures","implementation"]},{"contestId":86,"index":"D","name":"Powerful array","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","implementation","math","two pointers"]},{"contestId":85,"index":"D","name":"Sum of Medians","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["binary search","brute force","data structures","implementation"]},{"contestId":85,"index":"B","name":"Embassy Queue","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["data structures","greedy"]},{"contestId":82,"index":"C","name":"General Mobilization","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dfs and similar","sortings"]},{"contestId":79,"index":"C","name":"Beaver","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","dp","greedy","hashing","strings","two pointers"]},{"contestId":76,"index":"F","name":"Tourist","type":"PROGRAMMING","rating":2300,"tags":["binary search","data structures","dp"]},{"contestId":75,"index":"D","name":"Big Maximum Sum","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dp","greedy","implementation","math","trees"]},{"contestId":74,"index":"D","name":"Hanger","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures"]},{"contestId":70,"index":"D","name":"Professor\u0027s task","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["data structures","geometry"]},{"contestId":70,"index":"C","name":"Lucky Tickets","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["binary search","data structures","sortings","two pointers"]},{"contestId":69,"index":"E","name":"Subsegments","type":"PROGRAMMING","points":2500.0,"rating":1800,"tags":["data structures","implementation"]},{"contestId":68,"index":"D","name":"Half-decay tree","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","divide and conquer","dp","math","probabilities"]},{"contestId":67,"index":"D","name":"Optical Experiment","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","data structures","dp"]},{"contestId":66,"index":"E","name":"Petya and Post","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["data structures","dp"]},{"contestId":66,"index":"C","name":"Petya and File System","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","implementation"]},{"contestId":61,"index":"E","name":"Enemy is weak","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["data structures","trees"]},{"contestId":56,"index":"E","name":"Domino Principle","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures","sortings"]},{"contestId":56,"index":"C","name":"Corporation Mail","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","expression parsing","implementation"]},{"contestId":52,"index":"C","name":"Circular RMQ","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures"]},{"contestId":47,"index":"E","name":"Cannon","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","geometry","sortings"]},{"contestId":46,"index":"E","name":"Comb","type":"PROGRAMMING","rating":1900,"tags":["data structures","dp"]},{"contestId":46,"index":"D","name":"Parking Lot","type":"PROGRAMMING","rating":1800,"tags":["data structures","implementation"]},{"contestId":45,"index":"C","name":"Dancing Lessons","type":"PROGRAMMING","rating":1900,"tags":["data structures"]},{"contestId":44,"index":"G","name":"Shooting Gallery","type":"PROGRAMMING","rating":2500,"tags":["data structures","implementation"]},{"contestId":38,"index":"G","name":"Queue","type":"PROGRAMMING","rating":2300,"tags":["data structures"]},{"contestId":37,"index":"C","name":"Old Berland Language","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","greedy","trees"]},{"contestId":35,"index":"E","name":"Parade","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","sortings"]},{"contestId":30,"index":"E","name":"Tricky and Clever Password","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","constructive algorithms","data structures","greedy","hashing","strings"]},{"contestId":29,"index":"C","name":"Mail Stamps","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["data structures","dfs and similar","graphs","implementation"]},{"contestId":28,"index":"D","name":"Don\u0027t fear, DravDe is kind","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["binary search","data structures","dp","hashing"]},{"contestId":19,"index":"D","name":"Points","type":"PROGRAMMING","rating":2800,"tags":["data structures"]},{"contestId":18,"index":"C","name":"Stripe","type":"PROGRAMMING","rating":1200,"tags":["data structures","implementation"]},{"contestId":15,"index":"D","name":"Map","type":"PROGRAMMING","rating":2500,"tags":["data structures","implementation","sortings"]},{"contestId":13,"index":"E","name":"Holes","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu"]},{"contestId":12,"index":"D","name":"Ball","type":"PROGRAMMING","rating":2400,"tags":["data structures","sortings"]},{"contestId":6,"index":"E","name":"Exposition","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dsu","trees","two pointers"]},{"contestId":5,"index":"E","name":"Bindian Signalizing","type":"PROGRAMMING","rating":2400,"tags":["data structures"]},{"contestId":5,"index":"C","name":"Longest Regular Bracket Sequence","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","data structures","dp","greedy","sortings","strings"]},{"contestId":4,"index":"C","name":"Registration System","type":"PROGRAMMING","rating":1300,"tags":["data structures","hashing","implementation"]}],"problemStatistics":[{"contestId":1601,"index":"E","solvedCount":228},{"contestId":1601,"index":"D","solvedCount":564},{"contestId":1601,"index":"C","solvedCount":1140},{"contestId":1601,"index":"B","solvedCount":2874},{"contestId":1599,"index":"I","solvedCount":66},{"contestId":1599,"index":"E","solvedCount":18},{"contestId":1598,"index":"F","solvedCount":802},{"contestId":1598,"index":"E","solvedCount":1502},{"contestId":1598,"index":"D","solvedCount":5380},{"contestId":1598,"index":"C","solvedCount":10385},{"contestId":1593,"index":"G","solvedCount":1034},{"contestId":1593,"index":"E","solvedCount":6343},{"contestId":1588,"index":"F","solvedCount":5},{"contestId":1584,"index":"E","solvedCount":498},{"contestId":1583,"index":"H","solvedCount":137},{"contestId":1583,"index":"G","solvedCount":184},{"contestId":1583,"index":"C","solvedCount":4867},{"contestId":1582,"index":"G","solvedCount":295},{"contestId":1582,"index":"E","solvedCount":2084},{"contestId":1582,"index":"C","solvedCount":8278},{"contestId":1580,"index":"E","solvedCount":23},{"contestId":1580,"index":"C","solvedCount":998},{"contestId":1580,"index":"A","solvedCount":2441},{"contestId":1579,"index":"E2","solvedCount":4237},{"contestId":1578,"index":"J","solvedCount":71},{"contestId":1578,"index":"B","solvedCount":199},{"contestId":1575,"index":"M","solvedCount":103},{"contestId":1575,"index":"L","solvedCount":565},{"contestId":1575,"index":"I","solvedCount":462},{"contestId":1575,"index":"E","solvedCount":156},{"contestId":1575,"index":"C","solvedCount":74},{"contestId":1575,"index":"A","solvedCount":1850},{"contestId":1574,"index":"D","solvedCount":3260},{"contestId":1572,"index":"F","solvedCount":82},{"contestId":1572,"index":"A","solvedCount":5231},{"contestId":1571,"index":"I","solvedCount":14},{"contestId":1571,"index":"G","solvedCount":46},{"contestId":1570,"index":"H","solvedCount":19},{"contestId":1569,"index":"D","solvedCount":3272},{"contestId":1567,"index":"E","solvedCount":2488},{"contestId":1566,"index":"G","solvedCount":209},{"contestId":1566,"index":"F","solvedCount":707},{"contestId":1566,"index":"D2","solvedCount":6035},{"contestId":1566,"index":"D1","solvedCount":11031},{"contestId":1562,"index":"D2","solvedCount":1685},{"contestId":1562,"index":"D1","solvedCount":4811},{"contestId":1561,"index":"D1","solvedCount":3881},{"contestId":1558,"index":"F","solvedCount":116},{"contestId":1558,"index":"D","solvedCount":686},{"contestId":1557,"index":"D","solvedCount":1972},{"contestId":1556,"index":"G","solvedCount":153},{"contestId":1556,"index":"E","solvedCount":1986},{"contestId":1555,"index":"F","solvedCount":583},{"contestId":1555,"index":"E","solvedCount":2768},{"contestId":1553,"index":"F","solvedCount":1546},{"contestId":1552,"index":"F","solvedCount":1937},{"contestId":1552,"index":"E","solvedCount":1432},{"contestId":1551,"index":"B2","solvedCount":10697},{"contestId":1550,"index":"F","solvedCount":382},{"contestId":1548,"index":"E","solvedCount":112},{"contestId":1548,"index":"B","solvedCount":6353},{"contestId":1547,"index":"F","solvedCount":3680},{"contestId":1547,"index":"E","solvedCount":9156},{"contestId":1545,"index":"F","solvedCount":35},{"contestId":1545,"index":"E2","solvedCount":36},{"contestId":1545,"index":"E1","solvedCount":34},{"contestId":1540,"index":"D","solvedCount":141},{"contestId":1539,"index":"F","solvedCount":646},{"contestId":1539,"index":"E","solvedCount":663},{"contestId":1538,"index":"E","solvedCount":2185},{"contestId":1538,"index":"C","solvedCount":16893},{"contestId":1537,"index":"E2","solvedCount":3534},{"contestId":1536,"index":"D","solvedCount":3698},{"contestId":1536,"index":"C","solvedCount":9615},{"contestId":1535,"index":"F","solvedCount":260},{"contestId":1535,"index":"E","solvedCount":1993},{"contestId":1535,"index":"D","solvedCount":5582},{"contestId":1534,"index":"G","solvedCount":208},{"contestId":1533,"index":"H","solvedCount":66},{"contestId":1533,"index":"E","solvedCount":225},{"contestId":1533,"index":"C","solvedCount":430},{"contestId":1530,"index":"H","solvedCount":60},{"contestId":1528,"index":"C","solvedCount":1884},{"contestId":1527,"index":"E","solvedCount":1135},{"contestId":1526,"index":"D","solvedCount":1915},{"contestId":1526,"index":"C2","solvedCount":11645},{"contestId":1526,"index":"C1","solvedCount":12561},{"contestId":1525,"index":"C","solvedCount":3403},{"contestId":1523,"index":"H","solvedCount":87},{"contestId":1523,"index":"G","solvedCount":220},{"contestId":1523,"index":"C","solvedCount":6885},{"contestId":1521,"index":"D","solvedCount":1245},{"contestId":1520,"index":"F2","solvedCount":2282},{"contestId":1520,"index":"D","solvedCount":21521},{"contestId":1519,"index":"C","solvedCount":11416},{"contestId":1517,"index":"E","solvedCount":800},{"contestId":1516,"index":"D","solvedCount":2789},{"contestId":1515,"index":"I","solvedCount":96},{"contestId":1515,"index":"H","solvedCount":121},{"contestId":1515,"index":"C","solvedCount":11382},{"contestId":1514,"index":"D","solvedCount":3171},{"contestId":1513,"index":"F","solvedCount":688},{"contestId":1512,"index":"D","solvedCount":14335},{"contestId":1511,"index":"G","solvedCount":403},{"contestId":1511,"index":"F","solvedCount":240},{"contestId":1511,"index":"C","solvedCount":16149},{"contestId":1508,"index":"F","solvedCount":75},{"contestId":1508,"index":"E","solvedCount":217},{"contestId":1508,"index":"C","solvedCount":932},{"contestId":1506,"index":"G","solvedCount":3101},{"contestId":1506,"index":"D","solvedCount":13283},{"contestId":1503,"index":"F","solvedCount":71},{"contestId":1503,"index":"D","solvedCount":706},{"contestId":1503,"index":"C","solvedCount":2402},{"contestId":1500,"index":"E","solvedCount":128},{"contestId":1500,"index":"D","solvedCount":232},{"contestId":1499,"index":"G","solvedCount":105},{"contestId":1499,"index":"C","solvedCount":9509},{"contestId":1498,"index":"F","solvedCount":449},{"contestId":1498,"index":"C","solvedCount":6963},{"contestId":1498,"index":"B","solvedCount":11806},{"contestId":1497,"index":"E2","solvedCount":1059},{"contestId":1497,"index":"E1","solvedCount":5992},{"contestId":1497,"index":"A","solvedCount":19585},{"contestId":1495,"index":"F","solvedCount":149},{"contestId":1495,"index":"E","solvedCount":177},{"contestId":1494,"index":"E","solvedCount":1266},{"contestId":1494,"index":"D","solvedCount":1995},{"contestId":1493,"index":"D","solvedCount":3454},{"contestId":1492,"index":"C","solvedCount":11286},{"contestId":1492,"index":"B","solvedCount":14568},{"contestId":1491,"index":"I","solvedCount":41},{"contestId":1491,"index":"H","solvedCount":343},{"contestId":1491,"index":"C","solvedCount":6243},{"contestId":1490,"index":"G","solvedCount":4185},{"contestId":1490,"index":"F","solvedCount":10120},{"contestId":1490,"index":"E","solvedCount":11921},{"contestId":1488,"index":"J","solvedCount":16},{"contestId":1488,"index":"H","solvedCount":33},{"contestId":1488,"index":"G","solvedCount":79},{"contestId":1488,"index":"F","solvedCount":119},{"contestId":1488,"index":"E","solvedCount":156},{"contestId":1487,"index":"E","solvedCount":3364},{"contestId":1486,"index":"F","solvedCount":416},{"contestId":1486,"index":"D","solvedCount":4221},{"contestId":1485,"index":"F","solvedCount":1302},{"contestId":1482,"index":"H","solvedCount":152},{"contestId":1482,"index":"E","solvedCount":2111},{"contestId":1482,"index":"D","solvedCount":2993},{"contestId":1481,"index":"E","solvedCount":1463},{"contestId":1479,"index":"D","solvedCount":514},{"contestId":1479,"index":"B2","solvedCount":3074},{"contestId":1479,"index":"B1","solvedCount":5346},{"contestId":1477,"index":"E","solvedCount":77},{"contestId":1477,"index":"B","solvedCount":2427},{"contestId":1476,"index":"G","solvedCount":239},{"contestId":1476,"index":"F","solvedCount":190},{"contestId":1476,"index":"E","solvedCount":1757},{"contestId":1474,"index":"D","solvedCount":3215},{"contestId":1474,"index":"C","solvedCount":8933},{"contestId":1473,"index":"D","solvedCount":6992},{"contestId":1472,"index":"E","solvedCount":5795},{"contestId":1470,"index":"E","solvedCount":153},{"contestId":1469,"index":"F","solvedCount":651},{"contestId":1468,"index":"M","solvedCount":576},{"contestId":1468,"index":"C","solvedCount":4644},{"contestId":1468,"index":"B","solvedCount":130},{"contestId":1468,"index":"A","solvedCount":1141},{"contestId":1467,"index":"E","solvedCount":956},{"contestId":1466,"index":"I","solvedCount":107},{"contestId":1466,"index":"D","solvedCount":8933},{"contestId":1464,"index":"F","solvedCount":85},{"contestId":1462,"index":"F","solvedCount":4810},{"contestId":1461,"index":"D","solvedCount":6874},{"contestId":1458,"index":"F","solvedCount":103},{"contestId":1458,"index":"E","solvedCount":238},{"contestId":1458,"index":"D","solvedCount":429},{"contestId":1455,"index":"G","solvedCount":200},{"contestId":1454,"index":"F","solvedCount":2833},{"contestId":1452,"index":"G","solvedCount":224},{"contestId":1450,"index":"D","solvedCount":4269},{"contestId":1446,"index":"F","solvedCount":140},{"contestId":1446,"index":"D2","solvedCount":510},{"contestId":1446,"index":"D1","solvedCount":973},{"contestId":1446,"index":"C","solvedCount":2460},{"contestId":1444,"index":"C","solvedCount":1026},{"contestId":1442,"index":"D","solvedCount":925},{"contestId":1442,"index":"B","solvedCount":3421},{"contestId":1439,"index":"E","solvedCount":83},{"contestId":1439,"index":"C","solvedCount":1225},{"contestId":1439,"index":"B","solvedCount":1035},{"contestId":1438,"index":"B","solvedCount":14548},{"contestId":1437,"index":"G","solvedCount":584},{"contestId":1437,"index":"E","solvedCount":2625},{"contestId":1436,"index":"E","solvedCount":1433},{"contestId":1430,"index":"E","solvedCount":4669},{"contestId":1430,"index":"D","solvedCount":7085},{"contestId":1430,"index":"C","solvedCount":15611},{"contestId":1428,"index":"F","solvedCount":1645},{"contestId":1428,"index":"E","solvedCount":2869},{"contestId":1428,"index":"C","solvedCount":14376},{"contestId":1427,"index":"F","solvedCount":117},{"contestId":1426,"index":"D","solvedCount":10965},{"contestId":1425,"index":"I","solvedCount":146},{"contestId":1424,"index":"G","solvedCount":3597},{"contestId":1423,"index":"H","solvedCount":346},{"contestId":1423,"index":"G","solvedCount":48},{"contestId":1422,"index":"F","solvedCount":524},{"contestId":1420,"index":"D","solvedCount":5577},{"contestId":1420,"index":"C2","solvedCount":3597},{"contestId":1419,"index":"F","solvedCount":370},{"contestId":1418,"index":"G","solvedCount":913},{"contestId":1418,"index":"F","solvedCount":220},{"contestId":1418,"index":"D","solvedCount":3413},{"contestId":1416,"index":"E","solvedCount":145},{"contestId":1416,"index":"D","solvedCount":1130},{"contestId":1416,"index":"C","solvedCount":2908},{"contestId":1416,"index":"A","solvedCount":9073},{"contestId":1413,"index":"F","solvedCount":468},{"contestId":1413,"index":"D","solvedCount":5245},{"contestId":1408,"index":"H","solvedCount":149},{"contestId":1408,"index":"E","solvedCount":1530},{"contestId":1408,"index":"D","solvedCount":3466},{"contestId":1407,"index":"D","solvedCount":3540},{"contestId":1406,"index":"D","solvedCount":2800},{"contestId":1404,"index":"C","solvedCount":1957},{"contestId":1403,"index":"B","solvedCount":303},{"contestId":1403,"index":"A","solvedCount":240},{"contestId":1402,"index":"A","solvedCount":849},{"contestId":1401,"index":"F","solvedCount":1108},{"contestId":1401,"index":"E","solvedCount":1704},{"contestId":1400,"index":"E","solvedCount":3715},{"contestId":1400,"index":"D","solvedCount":7369},{"contestId":1399,"index":"F","solvedCount":1198},{"contestId":1399,"index":"E1","solvedCount":4632},{"contestId":1399,"index":"D","solvedCount":13561},{"contestId":1398,"index":"F","solvedCount":817},{"contestId":1398,"index":"E","solvedCount":1837},{"contestId":1398,"index":"C","solvedCount":14513},{"contestId":1396,"index":"D","solvedCount":182},{"contestId":1393,"index":"B","solvedCount":13184},{"contestId":1392,"index":"F","solvedCount":1613},{"contestId":1389,"index":"F","solvedCount":703},{"contestId":1388,"index":"E","solvedCount":315},{"contestId":1388,"index":"D","solvedCount":5034},{"contestId":1386,"index":"C","solvedCount":220},{"contestId":1386,"index":"B","solvedCount":88},{"contestId":1385,"index":"F","solvedCount":1711},{"contestId":1383,"index":"E","solvedCount":479},{"contestId":1381,"index":"A2","solvedCount":10444},{"contestId":1381,"index":"A1","solvedCount":16297},{"contestId":1380,"index":"F","solvedCount":545},{"contestId":1380,"index":"E","solvedCount":1477},{"contestId":1380,"index":"A","solvedCount":17309},{"contestId":1379,"index":"F2","solvedCount":229},{"contestId":1379,"index":"F1","solvedCount":284},{"contestId":1379,"index":"D","solvedCount":892},{"contestId":1379,"index":"C","solvedCount":4070},{"contestId":1375,"index":"C","solvedCount":15299},{"contestId":1374,"index":"E2","solvedCount":720},{"contestId":1374,"index":"E1","solvedCount":10728},{"contestId":1373,"index":"G","solvedCount":561},{"contestId":1373,"index":"F","solvedCount":1327},{"contestId":1371,"index":"F","solvedCount":366},{"contestId":1370,"index":"E","solvedCount":3994},{"contestId":1369,"index":"E","solvedCount":1691},{"contestId":1368,"index":"G","solvedCount":196},{"contestId":1367,"index":"F2","solvedCount":1071},{"contestId":1366,"index":"G","solvedCount":379},{"contestId":1365,"index":"C","solvedCount":16876},{"contestId":1364,"index":"A","solvedCount":19160},{"contestId":1361,"index":"F","solvedCount":84},{"contestId":1359,"index":"F","solvedCount":272},{"contestId":1359,"index":"D","solvedCount":6769},{"contestId":1358,"index":"E","solvedCount":1709},{"contestId":1354,"index":"D","solvedCount":6335},{"contestId":1353,"index":"D","solvedCount":13302},{"contestId":1351,"index":"C","solvedCount":6510},{"contestId":1349,"index":"A","solvedCount":11826},{"contestId":1348,"index":"F","solvedCount":590},{"contestId":1348,"index":"B","solvedCount":18769},{"contestId":1346,"index":"H","solvedCount":30},{"contestId":1346,"index":"F","solvedCount":198},{"contestId":1344,"index":"E","solvedCount":116},{"contestId":1343,"index":"F","solvedCount":1059},{"contestId":1343,"index":"D","solvedCount":10075},{"contestId":1342,"index":"D","solvedCount":5155},{"contestId":1340,"index":"F","solvedCount":170},{"contestId":1340,"index":"A","solvedCount":12087},{"contestId":1336,"index":"F","solvedCount":109},{"contestId":1335,"index":"F","solvedCount":1643},{"contestId":1335,"index":"E2","solvedCount":6463},{"contestId":1335,"index":"E1","solvedCount":8602},{"contestId":1334,"index":"F","solvedCount":781},{"contestId":1333,"index":"C","solvedCount":9989},{"contestId":1332,"index":"G","solvedCount":199},{"contestId":1329,"index":"D","solvedCount":232},{"contestId":1329,"index":"C","solvedCount":1330},{"contestId":1327,"index":"F","solvedCount":1039},{"contestId":1326,"index":"E","solvedCount":1563},{"contestId":1324,"index":"D","solvedCount":17149},{"contestId":1324,"index":"C","solvedCount":20108},{"contestId":1322,"index":"E","solvedCount":138},{"contestId":1322,"index":"B","solvedCount":2901},{"contestId":1320,"index":"E","solvedCount":404},{"contestId":1320,"index":"D","solvedCount":915},{"contestId":1320,"index":"C","solvedCount":2421},{"contestId":1320,"index":"A","solvedCount":12580},{"contestId":1316,"index":"F","solvedCount":351},{"contestId":1313,"index":"E","solvedCount":328},{"contestId":1313,"index":"C2","solvedCount":4810},{"contestId":1313,"index":"C1","solvedCount":8214},{"contestId":1312,"index":"G","solvedCount":553},{"contestId":1311,"index":"F","solvedCount":2924},{"contestId":1310,"index":"A","solvedCount":4196},{"contestId":1307,"index":"D","solvedCount":4697},{"contestId":1304,"index":"F2","solvedCount":970},{"contestId":1304,"index":"F1","solvedCount":1227},{"contestId":1304,"index":"E","solvedCount":3673},{"contestId":1303,"index":"G","solvedCount":440},{"contestId":1302,"index":"C","solvedCount":360},{"contestId":1301,"index":"E","solvedCount":965},{"contestId":1299,"index":"C","solvedCount":2934},{"contestId":1297,"index":"I","solvedCount":20},{"contestId":1297,"index":"F","solvedCount":101},{"contestId":1296,"index":"E2","solvedCount":3733},{"contestId":1296,"index":"C","solvedCount":11850},{"contestId":1295,"index":"E","solvedCount":1867},{"contestId":1294,"index":"D","solvedCount":9105},{"contestId":1292,"index":"A","solvedCount":11333},{"contestId":1290,"index":"E","solvedCount":153},{"contestId":1290,"index":"B","solvedCount":3894},{"contestId":1290,"index":"A","solvedCount":7259},{"contestId":1288,"index":"E","solvedCount":2571},{"contestId":1287,"index":"B","solvedCount":7892},{"contestId":1286,"index":"E","solvedCount":147},{"contestId":1286,"index":"D","solvedCount":349},{"contestId":1286,"index":"B","solvedCount":3633},{"contestId":1285,"index":"E","solvedCount":1340},{"contestId":1284,"index":"F","solvedCount":204},{"contestId":1284,"index":"D","solvedCount":2411},{"contestId":1284,"index":"B","solvedCount":9107},{"contestId":1283,"index":"C","solvedCount":10277},{"contestId":1282,"index":"E","solvedCount":793},{"contestId":1279,"index":"C","solvedCount":9354},{"contestId":1278,"index":"D","solvedCount":2892},{"contestId":1278,"index":"C","solvedCount":6328},{"contestId":1277,"index":"D","solvedCount":2579},{"contestId":1276,"index":"C","solvedCount":1182},{"contestId":1271,"index":"D","solvedCount":1956},{"contestId":1270,"index":"H","solvedCount":244},{"contestId":1268,"index":"C","solvedCount":1366},{"contestId":1266,"index":"E","solvedCount":1742},{"contestId":1266,"index":"D","solvedCount":2967},{"contestId":1265,"index":"E","solvedCount":2142},{"contestId":1265,"index":"B","solvedCount":10258},{"contestId":1264,"index":"C","solvedCount":890},{"contestId":1263,"index":"F","solvedCount":651},{"contestId":1263,"index":"E","solvedCount":2135},{"contestId":1260,"index":"F","solvedCount":319},{"contestId":1257,"index":"E","solvedCount":3406},{"contestId":1257,"index":"D","solvedCount":6063},{"contestId":1254,"index":"D","solvedCount":706},{"contestId":1253,"index":"E","solvedCount":2153},{"contestId":1252,"index":"K","solvedCount":1393},{"contestId":1252,"index":"G","solvedCount":1062},{"contestId":1252,"index":"D","solvedCount":190},{"contestId":1252,"index":"C","solvedCount":3004},{"contestId":1251,"index":"E2","solvedCount":1632},{"contestId":1251,"index":"E1","solvedCount":1487},{"contestId":1250,"index":"C","solvedCount":1069},{"contestId":1249,"index":"D2","solvedCount":3681},{"contestId":1239,"index":"C","solvedCount":1086},{"contestId":1238,"index":"G","solvedCount":283},{"contestId":1237,"index":"G","solvedCount":65},{"contestId":1237,"index":"D","solvedCount":3076},{"contestId":1237,"index":"B","solvedCount":10942},{"contestId":1236,"index":"E","solvedCount":512},{"contestId":1236,"index":"D","solvedCount":1492},{"contestId":1234,"index":"D","solvedCount":9876},{"contestId":1234,"index":"B2","solvedCount":13400},{"contestId":1227,"index":"D2","solvedCount":3553},{"contestId":1227,"index":"D1","solvedCount":5203},{"contestId":1223,"index":"F","solvedCount":792},{"contestId":1221,"index":"F","solvedCount":710},{"contestId":1220,"index":"F","solvedCount":505},{"contestId":1218,"index":"F","solvedCount":2159},{"contestId":1218,"index":"B","solvedCount":41},{"contestId":1217,"index":"F","solvedCount":312},{"contestId":1217,"index":"E","solvedCount":1362},{"contestId":1216,"index":"F","solvedCount":1700},{"contestId":1214,"index":"G","solvedCount":180},{"contestId":1214,"index":"C","solvedCount":9871},{"contestId":1213,"index":"F","solvedCount":1798},{"contestId":1213,"index":"B","solvedCount":18285},{"contestId":1209,"index":"H","solvedCount":89},{"contestId":1209,"index":"G2","solvedCount":147},{"contestId":1209,"index":"G1","solvedCount":2201},{"contestId":1209,"index":"F","solvedCount":718},{"contestId":1208,"index":"H","solvedCount":61},{"contestId":1208,"index":"E","solvedCount":1633},{"contestId":1208,"index":"D","solvedCount":3829},{"contestId":1207,"index":"G","solvedCount":551},{"contestId":1207,"index":"F","solvedCount":2995},{"contestId":1204,"index":"D2","solvedCount":2574},{"contestId":1202,"index":"C","solvedCount":1864},{"contestId":1200,"index":"F","solvedCount":723},{"contestId":1200,"index":"D","solvedCount":3425},{"contestId":1200,"index":"A","solvedCount":16540},{"contestId":1198,"index":"B","solvedCount":7575},{"contestId":1197,"index":"E","solvedCount":1148},{"contestId":1196,"index":"D2","solvedCount":7292},{"contestId":1195,"index":"F","solvedCount":498},{"contestId":1195,"index":"E","solvedCount":2309},{"contestId":1194,"index":"E","solvedCount":1421},{"contestId":1193,"index":"B","solvedCount":281},{"contestId":1192,"index":"B","solvedCount":488},{"contestId":1190,"index":"D","solvedCount":1843},{"contestId":1189,"index":"C","solvedCount":8652},{"contestId":1187,"index":"D","solvedCount":1876},{"contestId":1185,"index":"C2","solvedCount":6239},{"contestId":1184,"index":"E3","solvedCount":351},{"contestId":1184,"index":"C2","solvedCount":508},{"contestId":1182,"index":"F","solvedCount":233},{"contestId":1182,"index":"C","solvedCount":4045},{"contestId":1181,"index":"D","solvedCount":1531},{"contestId":1179,"index":"D","solvedCount":523},{"contestId":1179,"index":"C","solvedCount":1431},{"contestId":1179,"index":"A","solvedCount":8012},{"contestId":1178,"index":"G","solvedCount":210},{"contestId":1175,"index":"G","solvedCount":148},{"contestId":1175,"index":"F","solvedCount":858},{"contestId":1175,"index":"E","solvedCount":1953},{"contestId":1175,"index":"B","solvedCount":7596},{"contestId":1172,"index":"F","solvedCount":160},{"contestId":1172,"index":"E","solvedCount":168},{"contestId":1170,"index":"D","solvedCount":372},{"contestId":1167,"index":"F","solvedCount":1137},{"contestId":1167,"index":"E","solvedCount":1862},{"contestId":1166,"index":"F","solvedCount":492},{"contestId":1165,"index":"B","solvedCount":15355},{"contestId":1163,"index":"F","solvedCount":354},{"contestId":1163,"index":"E","solvedCount":462},{"contestId":1163,"index":"C2","solvedCount":2729},{"contestId":1163,"index":"B2","solvedCount":5422},{"contestId":1163,"index":"B1","solvedCount":5675},{"contestId":1158,"index":"C","solvedCount":1350},{"contestId":1157,"index":"E","solvedCount":6048},{"contestId":1156,"index":"E","solvedCount":1875},{"contestId":1155,"index":"D","solvedCount":5128},{"contestId":1154,"index":"E","solvedCount":4360},{"contestId":1151,"index":"E","solvedCount":2303},{"contestId":1149,"index":"C","solvedCount":760},{"contestId":1148,"index":"H","solvedCount":96},{"contestId":1146,"index":"E","solvedCount":646},{"contestId":1142,"index":"B","solvedCount":1924},{"contestId":1141,"index":"F2","solvedCount":3172},{"contestId":1140,"index":"G","solvedCount":238},{"contestId":1140,"index":"F","solvedCount":576},{"contestId":1140,"index":"C","solvedCount":7133},{"contestId":1139,"index":"F","solvedCount":282},{"contestId":1137,"index":"F","solvedCount":265},{"contestId":1137,"index":"E","solvedCount":363},{"contestId":1136,"index":"E","solvedCount":890},{"contestId":1132,"index":"G","solvedCount":644},{"contestId":1131,"index":"G","solvedCount":312},{"contestId":1129,"index":"D","solvedCount":509},{"contestId":1129,"index":"C","solvedCount":715},{"contestId":1120,"index":"F","solvedCount":124},{"contestId":1119,"index":"F","solvedCount":371},{"contestId":1117,"index":"G","solvedCount":429},{"contestId":1114,"index":"F","solvedCount":1235},{"contestId":1111,"index":"E","solvedCount":541},{"contestId":1110,"index":"F","solvedCount":1290},{"contestId":1109,"index":"F","solvedCount":165},{"contestId":1109,"index":"E","solvedCount":353},{"contestId":1109,"index":"C","solvedCount":199},{"contestId":1108,"index":"E2","solvedCount":1644},{"contestId":1107,"index":"G","solvedCount":749},{"contestId":1106,"index":"E","solvedCount":1808},{"contestId":1106,"index":"D","solvedCount":10229},{"contestId":1106,"index":"B","solvedCount":6084},{"contestId":1104,"index":"B","solvedCount":11642},{"contestId":1101,"index":"D","solvedCount":3150},{"contestId":1100,"index":"F","solvedCount":972},{"contestId":1100,"index":"B","solvedCount":9203},{"contestId":1099,"index":"F","solvedCount":685},{"contestId":1098,"index":"D","solvedCount":452},{"contestId":1093,"index":"G","solvedCount":1364},{"contestId":1093,"index":"E","solvedCount":1044},{"contestId":1092,"index":"D2","solvedCount":1990},{"contestId":1091,"index":"E","solvedCount":866},{"contestId":1090,"index":"C","solvedCount":294},{"contestId":1089,"index":"K","solvedCount":762},{"contestId":1088,"index":"F","solvedCount":356},{"contestId":1085,"index":"G","solvedCount":300},{"contestId":1083,"index":"F","solvedCount":112},{"contestId":1083,"index":"E","solvedCount":1957},{"contestId":1083,"index":"D","solvedCount":126},{"contestId":1083,"index":"C","solvedCount":500},{"contestId":1083,"index":"A","solvedCount":3958},{"contestId":1081,"index":"H","solvedCount":63},{"contestId":1080,"index":"F","solvedCount":494},{"contestId":1077,"index":"F2","solvedCount":1820},{"contestId":1076,"index":"G","solvedCount":232},{"contestId":1076,"index":"E","solvedCount":2918},{"contestId":1073,"index":"G","solvedCount":469},{"contestId":1073,"index":"D","solvedCount":5478},{"contestId":1070,"index":"E","solvedCount":1027},{"contestId":1070,"index":"C","solvedCount":1674},{"contestId":1070,"index":"B","solvedCount":409},{"contestId":1066,"index":"E","solvedCount":4760},{"contestId":1063,"index":"F","solvedCount":430},{"contestId":1062,"index":"E","solvedCount":1222},{"contestId":1061,"index":"D","solvedCount":1970},{"contestId":1061,"index":"C","solvedCount":5681},{"contestId":1060,"index":"G","solvedCount":60},{"contestId":1059,"index":"E","solvedCount":984},{"contestId":1056,"index":"H","solvedCount":103},{"contestId":1056,"index":"G","solvedCount":173},{"contestId":1056,"index":"E","solvedCount":1309},{"contestId":1051,"index":"G","solvedCount":176},{"contestId":1051,"index":"E","solvedCount":530},{"contestId":1045,"index":"J","solvedCount":110},{"contestId":1045,"index":"G","solvedCount":1005},{"contestId":1045,"index":"A","solvedCount":227},{"contestId":1044,"index":"F","solvedCount":343},{"contestId":1044,"index":"D","solvedCount":682},{"contestId":1043,"index":"G","solvedCount":100},{"contestId":1042,"index":"F","solvedCount":964},{"contestId":1042,"index":"D","solvedCount":3986},{"contestId":1041,"index":"F","solvedCount":1152},{"contestId":1041,"index":"E","solvedCount":2936},{"contestId":1041,"index":"D","solvedCount":4948},{"contestId":1041,"index":"C","solvedCount":7540},{"contestId":1039,"index":"E","solvedCount":173},{"contestId":1039,"index":"D","solvedCount":794},{"contestId":1039,"index":"A","solvedCount":680},{"contestId":1037,"index":"H","solvedCount":482},{"contestId":1037,"index":"F","solvedCount":772},{"contestId":1034,"index":"D","solvedCount":192},{"contestId":1030,"index":"F","solvedCount":634},{"contestId":1028,"index":"D","solvedCount":1486},{"contestId":1023,"index":"G","solvedCount":56},{"contestId":1023,"index":"D","solvedCount":3488},{"contestId":1019,"index":"E","solvedCount":216},{"contestId":1017,"index":"G","solvedCount":353},{"contestId":1017,"index":"D","solvedCount":2794},{"contestId":1010,"index":"E","solvedCount":259},{"contestId":1009,"index":"F","solvedCount":2618},{"contestId":1007,"index":"D","solvedCount":131},{"contestId":1007,"index":"A","solvedCount":10195},{"contestId":1006,"index":"C","solvedCount":14317},{"contestId":1004,"index":"F","solvedCount":367},{"contestId":1004,"index":"E","solvedCount":734},{"contestId":1000,"index":"G","solvedCount":331},{"contestId":1000,"index":"F","solvedCount":1820},{"contestId":1000,"index":"C","solvedCount":4741},{"contestId":999,"index":"D","solvedCount":3222},{"contestId":997,"index":"E","solvedCount":433},{"contestId":995,"index":"C","solvedCount":1351},{"contestId":992,"index":"E","solvedCount":811},{"contestId":986,"index":"E","solvedCount":504},{"contestId":985,"index":"E","solvedCount":2393},{"contestId":983,"index":"E","solvedCount":494},{"contestId":983,"index":"D","solvedCount":186},{"contestId":982,"index":"D","solvedCount":1952},{"contestId":982,"index":"B","solvedCount":6900},{"contestId":981,"index":"H","solvedCount":183},{"contestId":981,"index":"G","solvedCount":492},{"contestId":981,"index":"E","solvedCount":1482},{"contestId":980,"index":"E","solvedCount":1462},{"contestId":979,"index":"D","solvedCount":1261},{"contestId":978,"index":"F","solvedCount":6082},{"contestId":965,"index":"E","solvedCount":935},{"contestId":962,"index":"G","solvedCount":79},{"contestId":962,"index":"D","solvedCount":5516},{"contestId":961,"index":"E","solvedCount":2742},{"contestId":961,"index":"B","solvedCount":11740},{"contestId":960,"index":"H","solvedCount":147},{"contestId":960,"index":"F","solvedCount":1959},{"contestId":960,"index":"B","solvedCount":5723},{"contestId":958,"index":"C3","solvedCount":280},{"contestId":958,"index":"B2","solvedCount":480},{"contestId":954,"index":"G","solvedCount":1507},{"contestId":946,"index":"G","solvedCount":405},{"contestId":940,"index":"F","solvedCount":1212},{"contestId":940,"index":"E","solvedCount":2397},{"contestId":939,"index":"F","solvedCount":509},{"contestId":938,"index":"G","solvedCount":384},{"contestId":938,"index":"D","solvedCount":3490},{"contestId":936,"index":"E","solvedCount":137},{"contestId":935,"index":"F","solvedCount":271},{"contestId":932,"index":"F","solvedCount":1338},{"contestId":932,"index":"B","solvedCount":6602},{"contestId":930,"index":"E","solvedCount":229},{"contestId":930,"index":"D","solvedCount":333},{"contestId":930,"index":"C","solvedCount":1638},{"contestId":926,"index":"J","solvedCount":226},{"contestId":926,"index":"E","solvedCount":755},{"contestId":925,"index":"E","solvedCount":261},{"contestId":924,"index":"C","solvedCount":3310},{"contestId":923,"index":"C","solvedCount":3590},{"contestId":923,"index":"B","solvedCount":6122},{"contestId":920,"index":"F","solvedCount":3781},{"contestId":920,"index":"E","solvedCount":3434},{"contestId":917,"index":"E","solvedCount":72},{"contestId":916,"index":"E","solvedCount":854},{"contestId":916,"index":"D","solvedCount":351},{"contestId":915,"index":"F","solvedCount":1434},{"contestId":915,"index":"E","solvedCount":2169},{"contestId":914,"index":"F","solvedCount":617},{"contestId":914,"index":"E","solvedCount":866},{"contestId":914,"index":"D","solvedCount":3508},{"contestId":913,"index":"D","solvedCount":3880},{"contestId":912,"index":"D","solvedCount":1568},{"contestId":911,"index":"G","solvedCount":1253},{"contestId":911,"index":"E","solvedCount":2032},{"contestId":909,"index":"D","solvedCount":1434},{"contestId":903,"index":"G","solvedCount":330},{"contestId":903,"index":"D","solvedCount":2941},{"contestId":901,"index":"C","solvedCount":956},{"contestId":900,"index":"E","solvedCount":854},{"contestId":900,"index":"C","solvedCount":3704},{"contestId":899,"index":"F","solvedCount":1249},{"contestId":899,"index":"E","solvedCount":1965},{"contestId":896,"index":"E","solvedCount":685},{"contestId":896,"index":"C","solvedCount":1412},{"contestId":895,"index":"E","solvedCount":630},{"contestId":894,"index":"D","solvedCount":952},{"contestId":893,"index":"F","solvedCount":1067},{"contestId":893,"index":"D","solvedCount":2429},{"contestId":891,"index":"C","solvedCount":1338},{"contestId":888,"index":"G","solvedCount":1924},{"contestId":887,"index":"D","solvedCount":421},{"contestId":884,"index":"D","solvedCount":1555},{"contestId":883,"index":"L","solvedCount":178},{"contestId":879,"index":"B","solvedCount":9104},{"contestId":878,"index":"C","solvedCount":695},{"contestId":878,"index":"B","solvedCount":879},{"contestId":877,"index":"F","solvedCount":856},{"contestId":877,"index":"E","solvedCount":3022},{"contestId":877,"index":"D","solvedCount":2818},{"contestId":875,"index":"E","solvedCount":585},{"contestId":875,"index":"D","solvedCount":1565},{"contestId":873,"index":"E","solvedCount":348},{"contestId":870,"index":"F","solvedCount":383},{"contestId":869,"index":"E","solvedCount":1050},{"contestId":865,"index":"D","solvedCount":2300},{"contestId":863,"index":"E","solvedCount":1964},{"contestId":863,"index":"D","solvedCount":2523},{"contestId":862,"index":"F","solvedCount":135},{"contestId":862,"index":"E","solvedCount":1039},{"contestId":860,"index":"E","solvedCount":330},{"contestId":858,"index":"D","solvedCount":3136},{"contestId":855,"index":"F","solvedCount":222},{"contestId":855,"index":"B","solvedCount":6467},{"contestId":853,"index":"E","solvedCount":47},{"contestId":853,"index":"C","solvedCount":1259},{"contestId":848,"index":"C","solvedCount":786},{"contestId":848,"index":"B","solvedCount":1552},{"contestId":847,"index":"D","solvedCount":814},{"contestId":847,"index":"B","solvedCount":3016},{"contestId":846,"index":"F","solvedCount":1675},{"contestId":846,"index":"D","solvedCount":1792},{"contestId":846,"index":"C","solvedCount":1933},{"contestId":845,"index":"E","solvedCount":423},{"contestId":845,"index":"D","solvedCount":2005},{"contestId":845,"index":"C","solvedCount":5664},{"contestId":842,"index":"D","solvedCount":2322},{"contestId":840,"index":"D","solvedCount":1417},{"contestId":840,"index":"B","solvedCount":1806},{"contestId":838,"index":"B","solvedCount":382},{"contestId":837,"index":"G","solvedCount":419},{"contestId":834,"index":"B","solvedCount":7281},{"contestId":833,"index":"E","solvedCount":100},{"contestId":833,"index":"D","solvedCount":247},{"contestId":833,"index":"B","solvedCount":2511},{"contestId":830,"index":"C","solvedCount":996},{"contestId":830,"index":"B","solvedCount":2444},{"contestId":827,"index":"F","solvedCount":178},{"contestId":827,"index":"D","solvedCount":751},{"contestId":827,"index":"C","solvedCount":1387},{"contestId":827,"index":"A","solvedCount":3479},{"contestId":825,"index":"E","solvedCount":2038},{"contestId":821,"index":"C","solvedCount":5496},{"contestId":819,"index":"B","solvedCount":1448},{"contestId":818,"index":"E","solvedCount":1465},{"contestId":818,"index":"D","solvedCount":2894},{"contestId":817,"index":"F","solvedCount":1319},{"contestId":817,"index":"E","solvedCount":1596},{"contestId":817,"index":"D","solvedCount":2758},{"contestId":816,"index":"B","solvedCount":9685},{"contestId":815,"index":"D","solvedCount":401},{"contestId":813,"index":"F","solvedCount":576},{"contestId":813,"index":"E","solvedCount":1505},{"contestId":811,"index":"E","solvedCount":540},{"contestId":809,"index":"D","solvedCount":445},{"contestId":808,"index":"D","solvedCount":5095},{"contestId":808,"index":"B","solvedCount":5164},{"contestId":803,"index":"G","solvedCount":756},{"contestId":802,"index":"O","solvedCount":226},{"contestId":802,"index":"B","solvedCount":788},{"contestId":799,"index":"G","solvedCount":79},{"contestId":799,"index":"F","solvedCount":224},{"contestId":799,"index":"E","solvedCount":770},{"contestId":799,"index":"C","solvedCount":3104},{"contestId":799,"index":"B","solvedCount":6141},{"contestId":798,"index":"E","solvedCount":265},{"contestId":797,"index":"F","solvedCount":634},{"contestId":797,"index":"E","solvedCount":2325},{"contestId":797,"index":"D","solvedCount":1277},{"contestId":797,"index":"C","solvedCount":4435},{"contestId":796,"index":"F","solvedCount":127},{"contestId":796,"index":"C","solvedCount":2602},{"contestId":794,"index":"F","solvedCount":544},{"contestId":793,"index":"G","solvedCount":186},{"contestId":793,"index":"F","solvedCount":258},{"contestId":792,"index":"F","solvedCount":132},{"contestId":788,"index":"E","solvedCount":232},{"contestId":786,"index":"E","solvedCount":349},{"contestId":786,"index":"D","solvedCount":91},{"contestId":786,"index":"C","solvedCount":1527},{"contestId":786,"index":"B","solvedCount":2780},{"contestId":785,"index":"E","solvedCount":1297},{"contestId":780,"index":"G","solvedCount":417},{"contestId":777,"index":"E","solvedCount":2948},{"contestId":777,"index":"C","solvedCount":5465},{"contestId":777,"index":"B","solvedCount":8276},{"contestId":776,"index":"F","solvedCount":305},{"contestId":776,"index":"C","solvedCount":4870},{"contestId":774,"index":"B","solvedCount":186},{"contestId":773,"index":"E","solvedCount":210},{"contestId":768,"index":"G","solvedCount":217},{"contestId":767,"index":"D","solvedCount":1820},{"contestId":767,"index":"A","solvedCount":12502},{"contestId":766,"index":"E","solvedCount":2071},{"contestId":766,"index":"D","solvedCount":2488},{"contestId":765,"index":"F","solvedCount":751},{"contestId":763,"index":"E","solvedCount":350},{"contestId":763,"index":"D","solvedCount":348},{"contestId":762,"index":"E","solvedCount":871},{"contestId":761,"index":"F","solvedCount":333},{"contestId":757,"index":"G","solvedCount":235},{"contestId":757,"index":"F","solvedCount":751},{"contestId":757,"index":"C","solvedCount":2139},{"contestId":756,"index":"C","solvedCount":1068},{"contestId":755,"index":"D","solvedCount":2225},{"contestId":755,"index":"B","solvedCount":8216},{"contestId":754,"index":"D","solvedCount":1855},{"contestId":750,"index":"E","solvedCount":977},{"contestId":750,"index":"D","solvedCount":2937},{"contestId":749,"index":"E","solvedCount":722},{"contestId":749,"index":"D","solvedCount":2184},{"contestId":748,"index":"E","solvedCount":1305},{"contestId":748,"index":"D","solvedCount":1570},{"contestId":746,"index":"F","solvedCount":576},{"contestId":741,"index":"E","solvedCount":129},{"contestId":741,"index":"D","solvedCount":1391},{"contestId":739,"index":"E","solvedCount":1150},{"contestId":739,"index":"C","solvedCount":948},{"contestId":739,"index":"B","solvedCount":3704},{"contestId":733,"index":"F","solvedCount":890},{"contestId":733,"index":"E","solvedCount":549},{"contestId":733,"index":"D","solvedCount":3762},{"contestId":731,"index":"F","solvedCount":2438},{"contestId":731,"index":"D","solvedCount":997},{"contestId":730,"index":"L","solvedCount":68},{"contestId":729,"index":"E","solvedCount":1891},{"contestId":727,"index":"E","solvedCount":762},{"contestId":725,"index":"D","solvedCount":2393},{"contestId":724,"index":"D","solvedCount":2054},{"contestId":722,"index":"F","solvedCount":347},{"contestId":722,"index":"D","solvedCount":2780},{"contestId":722,"index":"C","solvedCount":6175},{"contestId":721,"index":"D","solvedCount":2063},{"contestId":720,"index":"F","solvedCount":50},{"contestId":720,"index":"D","solvedCount":127},{"contestId":718,"index":"C","solvedCount":2059},{"contestId":717,"index":"F","solvedCount":237},{"contestId":713,"index":"D","solvedCount":792},{"contestId":713,"index":"A","solvedCount":7343},{"contestId":712,"index":"E","solvedCount":487},{"contestId":710,"index":"F","solvedCount":870},{"contestId":708,"index":"C","solvedCount":1797},{"contestId":707,"index":"E","solvedCount":773},{"contestId":707,"index":"D","solvedCount":2105},{"contestId":706,"index":"E","solvedCount":895},{"contestId":706,"index":"D","solvedCount":6227},{"contestId":704,"index":"E","solvedCount":181},{"contestId":704,"index":"A","solvedCount":7037},{"contestId":703,"index":"D","solvedCount":2522},{"contestId":702,"index":"F","solvedCount":485},{"contestId":702,"index":"E","solvedCount":1544},{"contestId":702,"index":"B","solvedCount":8223},{"contestId":701,"index":"B","solvedCount":9659},{"contestId":700,"index":"D","solvedCount":311},{"contestId":696,"index":"E","solvedCount":322},{"contestId":696,"index":"D","solvedCount":806},{"contestId":696,"index":"A","solvedCount":5350},{"contestId":690,"index":"B3","solvedCount":74},{"contestId":689,"index":"E","solvedCount":1262},{"contestId":689,"index":"D","solvedCount":2136},{"contestId":687,"index":"D","solvedCount":723},{"contestId":685,"index":"B","solvedCount":2869},{"contestId":681,"index":"C","solvedCount":5225},{"contestId":679,"index":"E","solvedCount":407},{"contestId":678,"index":"F","solvedCount":492},{"contestId":677,"index":"D","solvedCount":1250},{"contestId":675,"index":"E","solvedCount":1842},{"contestId":675,"index":"D","solvedCount":3000},{"contestId":675,"index":"C","solvedCount":3104},{"contestId":671,"index":"E","solvedCount":189},{"contestId":671,"index":"D","solvedCount":734},{"contestId":671,"index":"C","solvedCount":532},{"contestId":670,"index":"E","solvedCount":2812},{"contestId":666,"index":"E","solvedCount":832},{"contestId":665,"index":"F","solvedCount":399},{"contestId":665,"index":"E","solvedCount":1841},{"contestId":660,"index":"F","solvedCount":920},{"contestId":659,"index":"E","solvedCount":6061},{"contestId":653,"index":"F","solvedCount":637},{"contestId":652,"index":"D","solvedCount":2603},{"contestId":650,"index":"E","solvedCount":399},{"contestId":650,"index":"D","solvedCount":945},{"contestId":650,"index":"A","solvedCount":11751},{"contestId":644,"index":"C","solvedCount":846},{"contestId":644,"index":"B","solvedCount":2406},{"contestId":643,"index":"G","solvedCount":432},{"contestId":641,"index":"E","solvedCount":2266},{"contestId":639,"index":"F","solvedCount":257},{"contestId":639,"index":"D","solvedCount":684},{"contestId":637,"index":"D","solvedCount":1751},{"contestId":637,"index":"B","solvedCount":8521},{"contestId":633,"index":"H","solvedCount":321},{"contestId":633,"index":"G","solvedCount":519},{"contestId":633,"index":"E","solvedCount":503},{"contestId":633,"index":"C","solvedCount":2043},{"contestId":631,"index":"E","solvedCount":1455},{"contestId":631,"index":"D","solvedCount":1714},{"contestId":631,"index":"C","solvedCount":3266},{"contestId":629,"index":"E","solvedCount":755},{"contestId":629,"index":"D","solvedCount":3130},{"contestId":628,"index":"E","solvedCount":578},{"contestId":627,"index":"C","solvedCount":1000},{"contestId":627,"index":"B","solvedCount":2248},{"contestId":626,"index":"G","solvedCount":365},{"contestId":625,"index":"E","solvedCount":180},{"contestId":622,"index":"C","solvedCount":4764},{"contestId":620,"index":"F","solvedCount":450},{"contestId":620,"index":"E","solvedCount":3106},{"contestId":618,"index":"E","solvedCount":510},{"contestId":617,"index":"E","solvedCount":4649},{"contestId":616,"index":"D","solvedCount":5566},{"contestId":612,"index":"C","solvedCount":5766},{"contestId":611,"index":"E","solvedCount":782},{"contestId":610,"index":"E","solvedCount":578},{"contestId":610,"index":"D","solvedCount":1073},{"contestId":609,"index":"F","solvedCount":746},{"contestId":609,"index":"E","solvedCount":4055},{"contestId":607,"index":"D","solvedCount":467},{"contestId":605,"index":"D","solvedCount":658},{"contestId":605,"index":"B","solvedCount":3000},{"contestId":603,"index":"E","solvedCount":511},{"contestId":601,"index":"E","solvedCount":438},{"contestId":601,"index":"D","solvedCount":848},{"contestId":601,"index":"B","solvedCount":1733},{"contestId":600,"index":"E","solvedCount":6578},{"contestId":600,"index":"B","solvedCount":16292},{"contestId":597,"index":"C","solvedCount":2629},{"contestId":594,"index":"D","solvedCount":987},{"contestId":593,"index":"D","solvedCount":948},{"contestId":587,"index":"F","solvedCount":495},{"contestId":587,"index":"E","solvedCount":497},{"contestId":587,"index":"C","solvedCount":2556},{"contestId":580,"index":"E","solvedCount":1302},{"contestId":577,"index":"B","solvedCount":7755},{"contestId":576,"index":"E","solvedCount":527},{"contestId":575,"index":"I","solvedCount":256},{"contestId":575,"index":"A","solvedCount":499},{"contestId":573,"index":"E","solvedCount":411},{"contestId":573,"index":"D","solvedCount":244},{"contestId":573,"index":"B","solvedCount":4791},{"contestId":572,"index":"B","solvedCount":5444},{"contestId":571,"index":"D","solvedCount":429},{"contestId":570,"index":"C","solvedCount":7745},{"contestId":568,"index":"E","solvedCount":404},{"contestId":567,"index":"D","solvedCount":3786},{"contestId":567,"index":"C","solvedCount":7747},{"contestId":566,"index":"D","solvedCount":2034},{"contestId":558,"index":"E","solvedCount":3414},{"contestId":558,"index":"D","solvedCount":1015},{"contestId":557,"index":"E","solvedCount":901},{"contestId":557,"index":"C","solvedCount":3584},{"contestId":555,"index":"C","solvedCount":1779},{"contestId":555,"index":"B","solvedCount":3179},{"contestId":552,"index":"D","solvedCount":3783},{"contestId":551,"index":"E","solvedCount":1313},{"contestId":549,"index":"F","solvedCount":625},{"contestId":547,"index":"E","solvedCount":1099},{"contestId":547,"index":"B","solvedCount":5889},{"contestId":543,"index":"E","solvedCount":144},{"contestId":542,"index":"B","solvedCount":74},{"contestId":542,"index":"A","solvedCount":468},{"contestId":540,"index":"E","solvedCount":1556},{"contestId":538,"index":"H","solvedCount":384},{"contestId":538,"index":"F","solvedCount":1294},{"contestId":536,"index":"E","solvedCount":239},{"contestId":534,"index":"D","solvedCount":2079},{"contestId":533,"index":"D","solvedCount":161},{"contestId":533,"index":"A","solvedCount":201},{"contestId":527,"index":"D","solvedCount":3835},{"contestId":527,"index":"C","solvedCount":5580},{"contestId":526,"index":"F","solvedCount":1093},{"contestId":525,"index":"D","solvedCount":1308},{"contestId":524,"index":"F","solvedCount":399},{"contestId":524,"index":"E","solvedCount":883},{"contestId":523,"index":"D","solvedCount":1832},{"contestId":522,"index":"D","solvedCount":1747},{"contestId":522,"index":"B","solvedCount":7083},{"contestId":519,"index":"E","solvedCount":4038},{"contestId":519,"index":"D","solvedCount":5380},{"contestId":519,"index":"B","solvedCount":27293},{"contestId":518,"index":"C","solvedCount":5404},{"contestId":515,"index":"E","solvedCount":1517},{"contestId":514,"index":"D","solvedCount":3021},{"contestId":514,"index":"C","solvedCount":4678},{"contestId":514,"index":"B","solvedCount":15032},{"contestId":513,"index":"D2","solvedCount":332},{"contestId":501,"index":"D","solvedCount":1958},{"contestId":501,"index":"C","solvedCount":4765},{"contestId":501,"index":"B","solvedCount":11421},{"contestId":500,"index":"E","solvedCount":1140},{"contestId":498,"index":"D","solvedCount":837},{"contestId":494,"index":"E","solvedCount":184},{"contestId":494,"index":"D","solvedCount":455},{"contestId":493,"index":"C","solvedCount":5394},{"contestId":490,"index":"F","solvedCount":1103},{"contestId":487,"index":"E","solvedCount":959},{"contestId":487,"index":"D","solvedCount":685},{"contestId":487,"index":"B","solvedCount":2667},{"contestId":486,"index":"E","solvedCount":1547},{"contestId":484,"index":"E","solvedCount":1369},{"contestId":484,"index":"D","solvedCount":1738},{"contestId":482,"index":"E","solvedCount":147},{"contestId":482,"index":"B","solvedCount":4849},{"contestId":480,"index":"E","solvedCount":398},{"contestId":477,"index":"E","solvedCount":85},{"contestId":475,"index":"F","solvedCount":154},{"contestId":475,"index":"D","solvedCount":2846},{"contestId":474,"index":"F","solvedCount":4779},{"contestId":474,"index":"E","solvedCount":2219},{"contestId":472,"index":"G","solvedCount":254},{"contestId":471,"index":"E","solvedCount":59},{"contestId":467,"index":"E","solvedCount":609},{"contestId":466,"index":"C","solvedCount":24717},{"contestId":464,"index":"E","solvedCount":589},{"contestId":461,"index":"C","solvedCount":1207},{"contestId":460,"index":"C","solvedCount":4774},{"contestId":459,"index":"D","solvedCount":6761},{"contestId":455,"index":"E","solvedCount":500},{"contestId":455,"index":"D","solvedCount":1881},{"contestId":453,"index":"E","solvedCount":325},{"contestId":452,"index":"F","solvedCount":696},{"contestId":452,"index":"E","solvedCount":744},{"contestId":446,"index":"C","solvedCount":2044},{"contestId":446,"index":"B","solvedCount":3072},{"contestId":444,"index":"C","solvedCount":1868},{"contestId":442,"index":"D","solvedCount":687},{"contestId":442,"index":"C","solvedCount":1274},{"contestId":438,"index":"D","solvedCount":4139},{"contestId":436,"index":"F","solvedCount":229},{"contestId":436,"index":"E","solvedCount":619},{"contestId":431,"index":"E","solvedCount":500},{"contestId":429,"index":"D","solvedCount":2013},{"contestId":427,"index":"B","solvedCount":11120},{"contestId":425,"index":"D","solvedCount":1096},{"contestId":425,"index":"C","solvedCount":805},{"contestId":424,"index":"D","solvedCount":492},{"contestId":421,"index":"D","solvedCount":403},{"contestId":420,"index":"D","solvedCount":553},{"contestId":420,"index":"C","solvedCount":1061},{"contestId":418,"index":"E","solvedCount":156},{"contestId":418,"index":"D","solvedCount":342},{"contestId":414,"index":"E","solvedCount":124},{"contestId":414,"index":"D","solvedCount":588},{"contestId":413,"index":"E","solvedCount":429},{"contestId":407,"index":"E","solvedCount":380},{"contestId":403,"index":"E","solvedCount":152},{"contestId":400,"index":"E","solvedCount":788},{"contestId":398,"index":"D","solvedCount":530},{"contestId":396,"index":"C","solvedCount":1303},{"contestId":392,"index":"D","solvedCount":187},{"contestId":391,"index":"D2","solvedCount":159},{"contestId":390,"index":"C","solvedCount":579},{"contestId":387,"index":"E","solvedCount":685},{"contestId":385,"index":"C","solvedCount":7418},{"contestId":383,"index":"C","solvedCount":4331},{"contestId":383,"index":"A","solvedCount":4595},{"contestId":380,"index":"E","solvedCount":228},{"contestId":380,"index":"C","solvedCount":8473},{"contestId":379,"index":"F","solvedCount":1587},{"contestId":377,"index":"D","solvedCount":782},{"contestId":377,"index":"B","solvedCount":1791},{"contestId":375,"index":"D","solvedCount":3882},{"contestId":375,"index":"B","solvedCount":4345},{"contestId":374,"index":"E","solvedCount":156},{"contestId":374,"index":"D","solvedCount":714},{"contestId":372,"index":"D","solvedCount":623},{"contestId":372,"index":"C","solvedCount":2144},{"contestId":371,"index":"D","solvedCount":3922},{"contestId":369,"index":"E","solvedCount":1490},{"contestId":368,"index":"B","solvedCount":26080},{"contestId":367,"index":"B","solvedCount":2167},{"contestId":367,"index":"A","solvedCount":3981},{"contestId":366,"index":"D","solvedCount":1045},{"contestId":364,"index":"A","solvedCount":4087},{"contestId":363,"index":"E","solvedCount":161},{"contestId":362,"index":"D","solvedCount":757},{"contestId":362,"index":"C","solvedCount":1196},{"contestId":359,"index":"D","solvedCount":3684},{"contestId":356,"index":"A","solvedCount":8999},{"contestId":351,"index":"D","solvedCount":714},{"contestId":350,"index":"D","solvedCount":198},{"contestId":349,"index":"B","solvedCount":10676},{"contestId":348,"index":"C","solvedCount":1392},{"contestId":343,"index":"D","solvedCount":3489},{"contestId":343,"index":"B","solvedCount":7954},{"contestId":342,"index":"E","solvedCount":4810},{"contestId":341,"index":"D","solvedCount":798},{"contestId":340,"index":"D","solvedCount":5535},{"contestId":339,"index":"D","solvedCount":15427},{"contestId":338,"index":"E","solvedCount":668},{"contestId":332,"index":"C","solvedCount":799},{"contestId":332,"index":"B","solvedCount":6571},{"contestId":331,"index":"D3","solvedCount":117},{"contestId":331,"index":"B2","solvedCount":586},{"contestId":331,"index":"A2","solvedCount":1215},{"contestId":323,"index":"C","solvedCount":409},{"contestId":321,"index":"E","solvedCount":2660},{"contestId":319,"index":"E","solvedCount":351},{"contestId":319,"index":"B","solvedCount":3325},{"contestId":316,"index":"E3","solvedCount":449},{"contestId":316,"index":"E2","solvedCount":338},{"contestId":316,"index":"E1","solvedCount":1299},{"contestId":314,"index":"D","solvedCount":470},{"contestId":314,"index":"C","solvedCount":1556},{"contestId":313,"index":"E","solvedCount":470},{"contestId":311,"index":"D","solvedCount":535},{"contestId":311,"index":"C","solvedCount":387},{"contestId":311,"index":"B","solvedCount":1847},{"contestId":306,"index":"B","solvedCount":361},{"contestId":301,"index":"D","solvedCount":1592},{"contestId":297,"index":"E","solvedCount":232},{"contestId":295,"index":"E","solvedCount":509},{"contestId":295,"index":"A","solvedCount":10153},{"contestId":293,"index":"E","solvedCount":824},{"contestId":292,"index":"E","solvedCount":3062},{"contestId":292,"index":"D","solvedCount":1815},{"contestId":286,"index":"D","solvedCount":306},{"contestId":283,"index":"E","solvedCount":463},{"contestId":283,"index":"A","solvedCount":5640},{"contestId":282,"index":"E","solvedCount":2406},{"contestId":280,"index":"E","solvedCount":132},{"contestId":280,"index":"D","solvedCount":612},{"contestId":280,"index":"B","solvedCount":3484},{"contestId":276,"index":"E","solvedCount":1200},{"contestId":276,"index":"C","solvedCount":15066},{"contestId":274,"index":"E","solvedCount":216},{"contestId":272,"index":"C","solvedCount":5743},{"contestId":271,"index":"D","solvedCount":6419},{"contestId":270,"index":"B","solvedCount":3706},{"contestId":269,"index":"D","solvedCount":348},{"contestId":266,"index":"E","solvedCount":554},{"contestId":264,"index":"E","solvedCount":292},{"contestId":264,"index":"A","solvedCount":8764},{"contestId":263,"index":"E","solvedCount":305},{"contestId":260,"index":"E","solvedCount":354},{"contestId":258,"index":"E","solvedCount":749},{"contestId":257,"index":"E","solvedCount":216},{"contestId":256,"index":"E","solvedCount":522},{"contestId":253,"index":"E","solvedCount":441},{"contestId":253,"index":"C","solvedCount":1992},{"contestId":249,"index":"D","solvedCount":252},{"contestId":246,"index":"E","solvedCount":1639},{"contestId":243,"index":"E","solvedCount":132},{"contestId":243,"index":"D","solvedCount":162},{"contestId":242,"index":"E","solvedCount":4759},{"contestId":241,"index":"B","solvedCount":398},{"contestId":240,"index":"F","solvedCount":935},{"contestId":238,"index":"D","solvedCount":173},{"contestId":235,"index":"C","solvedCount":1203},{"contestId":232,"index":"D","solvedCount":339},{"contestId":231,"index":"E","solvedCount":1103},{"contestId":229,"index":"B","solvedCount":3286},{"contestId":228,"index":"D","solvedCount":333},{"contestId":226,"index":"E","solvedCount":338},{"contestId":226,"index":"C","solvedCount":652},{"contestId":223,"index":"B","solvedCount":1323},{"contestId":223,"index":"A","solvedCount":2167},{"contestId":222,"index":"B","solvedCount":4996},{"contestId":220,"index":"E","solvedCount":1002},{"contestId":220,"index":"C","solvedCount":833},{"contestId":220,"index":"B","solvedCount":6255},{"contestId":219,"index":"E","solvedCount":548},{"contestId":217,"index":"E","solvedCount":229},{"contestId":213,"index":"E","solvedCount":483},{"contestId":212,"index":"D","solvedCount":345},{"contestId":208,"index":"E","solvedCount":3521},{"contestId":207,"index":"C3","solvedCount":40},{"contestId":204,"index":"E","solvedCount":673},{"contestId":204,"index":"B","solvedCount":4045},{"contestId":200,"index":"A","solvedCount":537},{"contestId":198,"index":"E","solvedCount":343},{"contestId":196,"index":"D","solvedCount":319},{"contestId":195,"index":"E","solvedCount":606},{"contestId":195,"index":"B","solvedCount":4072},{"contestId":193,"index":"D","solvedCount":306},{"contestId":191,"index":"E","solvedCount":657},{"contestId":191,"index":"C","solvedCount":4613},{"contestId":190,"index":"E","solvedCount":1015},{"contestId":187,"index":"E","solvedCount":68},{"contestId":187,"index":"D","solvedCount":345},{"contestId":185,"index":"E","solvedCount":76},{"contestId":182,"index":"C","solvedCount":599},{"contestId":177,"index":"D2","solvedCount":1262},{"contestId":176,"index":"E","solvedCount":567},{"contestId":175,"index":"F","solvedCount":49},{"contestId":174,"index":"C","solvedCount":857},{"contestId":173,"index":"E","solvedCount":403},{"contestId":167,"index":"D","solvedCount":140},{"contestId":165,"index":"D","solvedCount":1139},{"contestId":163,"index":"E","solvedCount":853},{"contestId":160,"index":"E","solvedCount":419},{"contestId":159,"index":"E","solvedCount":896},{"contestId":159,"index":"C","solvedCount":2459},{"contestId":158,"index":"C","solvedCount":6720},{"contestId":156,"index":"B","solvedCount":1845},{"contestId":150,"index":"E","solvedCount":384},{"contestId":150,"index":"C","solvedCount":536},{"contestId":145,"index":"E","solvedCount":1930},{"contestId":145,"index":"D","solvedCount":200},{"contestId":144,"index":"E","solvedCount":424},{"contestId":144,"index":"D","solvedCount":2716},{"contestId":140,"index":"C","solvedCount":3464},{"contestId":138,"index":"C","solvedCount":754},{"contestId":137,"index":"E","solvedCount":1023},{"contestId":121,"index":"E","solvedCount":1082},{"contestId":117,"index":"E","solvedCount":192},{"contestId":115,"index":"E","solvedCount":773},{"contestId":113,"index":"B","solvedCount":1959},{"contestId":111,"index":"B","solvedCount":2915},{"contestId":103,"index":"D","solvedCount":1374},{"contestId":101,"index":"B","solvedCount":1897},{"contestId":100,"index":"G","solvedCount":80},{"contestId":91,"index":"E","solvedCount":496},{"contestId":91,"index":"B","solvedCount":4813},{"contestId":89,"index":"C","solvedCount":514},{"contestId":86,"index":"D","solvedCount":8319},{"contestId":85,"index":"D","solvedCount":1413},{"contestId":85,"index":"B","solvedCount":876},{"contestId":82,"index":"C","solvedCount":716},{"contestId":79,"index":"C","solvedCount":1409},{"contestId":76,"index":"F","solvedCount":455},{"contestId":75,"index":"D","solvedCount":1276},{"contestId":74,"index":"D","solvedCount":305},{"contestId":70,"index":"D","solvedCount":605},{"contestId":70,"index":"C","solvedCount":456},{"contestId":69,"index":"E","solvedCount":3063},{"contestId":68,"index":"D","solvedCount":328},{"contestId":67,"index":"D","solvedCount":1046},{"contestId":66,"index":"E","solvedCount":544},{"contestId":66,"index":"C","solvedCount":859},{"contestId":61,"index":"E","solvedCount":6037},{"contestId":56,"index":"E","solvedCount":1448},{"contestId":56,"index":"C","solvedCount":937},{"contestId":52,"index":"C","solvedCount":4921},{"contestId":47,"index":"E","solvedCount":282},{"contestId":46,"index":"E","solvedCount":704},{"contestId":46,"index":"D","solvedCount":826},{"contestId":45,"index":"C","solvedCount":633},{"contestId":44,"index":"G","solvedCount":177},{"contestId":38,"index":"G","solvedCount":510},{"contestId":37,"index":"C","solvedCount":1017},{"contestId":35,"index":"E","solvedCount":562},{"contestId":30,"index":"E","solvedCount":453},{"contestId":29,"index":"C","solvedCount":2993},{"contestId":28,"index":"D","solvedCount":466},{"contestId":19,"index":"D","solvedCount":1213},{"contestId":18,"index":"C","solvedCount":8410},{"contestId":15,"index":"D","solvedCount":500},{"contestId":13,"index":"E","solvedCount":2924},{"contestId":12,"index":"D","solvedCount":1377},{"contestId":6,"index":"E","solvedCount":2185},{"contestId":5,"index":"E","solvedCount":1328},{"contestId":5,"index":"C","solvedCount":7980},{"contestId":4,"index":"C","solvedCount":42841}]}}

