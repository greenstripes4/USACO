{"status":"OK","result":{"problems":[{"contestId":1580,"index":"D","name":"Subsequence","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["brute force","divide and conquer","dp","greedy","trees"]},{"contestId":1575,"index":"L","name":"Longest Array Deconstruction","type":"PROGRAMMING","rating":2100,"tags":["data structures","divide and conquer","dp","sortings"]},{"contestId":1567,"index":"E","name":"Non-Decreasing Dilemma","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","divide and conquer","math"]},{"contestId":1553,"index":"I","name":"Stairs","type":"PROGRAMMING","points":5250.0,"rating":3400,"tags":["combinatorics","divide and conquer","dp","fft","math"]},{"contestId":1553,"index":"H","name":"XOR and Distance","type":"PROGRAMMING","points":3750.0,"rating":2900,"tags":["bitmasks","divide and conquer","trees"]},{"contestId":1550,"index":"F","name":"Jumping Around","type":"PROGRAMMING","rating":2700,"tags":["binary search","data structures","divide and conquer","dp","dsu","graphs","shortest paths"]},{"contestId":1548,"index":"E","name":"Gregor and the Two Painters","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","graphs","greedy","math"]},{"contestId":1548,"index":"B","name":"Integers Have Friends","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","data structures","divide and conquer","math","number theory","two pointers"]},{"contestId":1547,"index":"F","name":"Array Stabilization (GCD version)","type":"PROGRAMMING","rating":1900,"tags":["binary search","brute force","data structures","divide and conquer","number theory","two pointers"]},{"contestId":1543,"index":"E","name":"The Final Pursuit","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","graphs","greedy","math"]},{"contestId":1528,"index":"A","name":"Parsa\u0027s Humongous Tree","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["dfs and similar","divide and conquer","dp","greedy","trees"]},{"contestId":1527,"index":"E","name":"Partition Game","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["binary search","data structures","divide and conquer","dp"]},{"contestId":1523,"index":"G","name":"Try Booking","type":"PROGRAMMING","points":3250.0,"rating":3200,"tags":["data structures","divide and conquer"]},{"contestId":1503,"index":"F","name":"Balance the Cards","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation"]},{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"contestId":1491,"index":"E","name":"Fib-tree","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["brute force","dfs and similar","divide and conquer","number theory","trees"]},{"contestId":1490,"index":"D","name":"Permutation Transformation","type":"PROGRAMMING","rating":1200,"tags":["dfs and similar","divide and conquer","implementation"]},{"contestId":1482,"index":"E","name":"Skyline Photo","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","divide and conquer","dp"]},{"contestId":1470,"index":"F","name":"Strange Covering","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["divide and conquer"]},{"contestId":1466,"index":"G","name":"Song of the Sirens","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["combinatorics","divide and conquer","hashing","math","string suffix structures","strings"]},{"contestId":1461,"index":"D","name":"Divide and Summarize","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["binary search","brute force","data structures","divide and conquer","implementation","sortings"]},{"contestId":1446,"index":"C","name":"Xor Tree","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["binary search","bitmasks","data structures","divide and conquer","dp","trees"]},{"contestId":1442,"index":"D","name":"Sum","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["data structures","divide and conquer","dp","greedy"]},{"contestId":1439,"index":"C","name":"Greedy Shopping","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["binary search","data structures","divide and conquer","greedy","implementation"]},{"contestId":1438,"index":"E","name":"Yurii Can Do Everything","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["binary search","bitmasks","brute force","constructive algorithms","divide and conquer","two pointers"]},{"contestId":1428,"index":"F","name":"Fruit Sequences","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"contestId":1425,"index":"B","name":"Blue and Red of Our Faculty!","type":"PROGRAMMING","rating":2600,"tags":["divide and conquer","dp"]},{"contestId":1423,"index":"H","name":"Virus","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","dsu","graphs"]},{"contestId":1423,"index":"C","name":"Dušan\u0027s Railway","type":"PROGRAMMING","rating":3500,"tags":["divide and conquer","graphs","trees"]},{"contestId":1420,"index":"C2","name":"Pokémon Army (hard version)","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["data structures","divide and conquer","dp","greedy","implementation"]},{"contestId":1418,"index":"G","name":"Three Occurrences","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","hashing","two pointers"]},{"contestId":1416,"index":"C","name":"XOR Inverse","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["bitmasks","data structures","divide and conquer","dp","greedy","math","sortings","strings","trees"]},{"contestId":1408,"index":"F","name":"Two Different","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1400,"index":"E","name":"Clear the Multiset","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dp","greedy"]},{"contestId":1386,"index":"C","name":"Joker","type":"PROGRAMMING","rating":2800,"tags":["*special","bitmasks","data structures","divide and conquer","dsu"]},{"contestId":1385,"index":"D","name":"a-Good String","type":"PROGRAMMING","rating":1500,"tags":["bitmasks","brute force","divide and conquer","dp","implementation"]},{"contestId":1379,"index":"F2","name":"Chess Strikes Back (hard version)","type":"PROGRAMMING","points":1500.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":1379,"index":"E","name":"Inverse Genealogy","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms","divide and conquer","dp","math","trees"]},{"contestId":1375,"index":"H","name":"Set Merging","type":"PROGRAMMING","points":2750.0,"rating":3300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1373,"index":"G","name":"Pawns","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","greedy"]},{"contestId":1373,"index":"D","name":"Maximum Sum on Even Positions","type":"PROGRAMMING","rating":1600,"tags":["divide and conquer","dp","greedy","implementation"]},{"contestId":1372,"index":"F","name":"Omkar and Modes","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["binary search","divide and conquer","interactive"]},{"contestId":1371,"index":"F","name":"Raging Thunder","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","divide and conquer","implementation"]},{"contestId":1364,"index":"E","name":"X-OR","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["bitmasks","constructive algorithms","divide and conquer","interactive","probabilities"]},{"contestId":1338,"index":"C","name":"Perfect Triples","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["bitmasks","brute force","constructive algorithms","divide and conquer","math"]},{"contestId":1336,"index":"F","name":"Journey","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":1316,"index":"F","name":"Battalion Strength","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","divide and conquer","probabilities"]},{"contestId":1311,"index":"F","name":"Moving Points","type":"PROGRAMMING","rating":1900,"tags":["data structures","divide and conquer","implementation","sortings"]},{"contestId":1303,"index":"G","name":"Sum of Prefix Sums","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","geometry","trees"]},{"contestId":1295,"index":"E","name":"Permutation Separation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer"]},{"contestId":1285,"index":"D","name":"Dr. Evil Underscores","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["bitmasks","brute force","dfs and similar","divide and conquer","dp","greedy","strings","trees"]},{"contestId":1278,"index":"E","name":"Tests for problem D","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","dfs and similar","divide and conquer","trees"]},{"contestId":1268,"index":"D","name":"Invertation in Tournament","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["brute force","divide and conquer","graphs","math"]},{"contestId":1261,"index":"F","name":"Xor-Set","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["bitmasks","divide and conquer","math"]},{"contestId":1257,"index":"G","name":"Divisor Set","type":"PROGRAMMING","rating":2600,"tags":["divide and conquer","fft","greedy","math","number theory"]},{"contestId":1250,"index":"M","name":"SmartGarden","type":"PROGRAMMING","rating":2500,"tags":["constructive algorithms","divide and conquer"]},{"contestId":1237,"index":"C2","name":"Balanced Removals (Harder)","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["binary search","constructive algorithms","divide and conquer","greedy","implementation","sortings"]},{"contestId":1223,"index":"F","name":"Stack Exterminable Arrays","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["data structures","divide and conquer","dp","hashing"]},{"contestId":1218,"index":"E","name":"Product Tuples","type":"PROGRAMMING","rating":2500,"tags":["divide and conquer","fft"]},{"contestId":1218,"index":"D","name":"Xor Spanning Tree","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","fft","graphs"]},{"contestId":1217,"index":"F","name":"Forced Online Queries Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu","graphs","trees"]},{"contestId":1213,"index":"G","name":"Path Queries","type":"PROGRAMMING","rating":1800,"tags":["divide and conquer","dsu","graphs","sortings","trees"]},{"contestId":1192,"index":"B","name":"Dynamic Diameter","type":"PROGRAMMING","tags":["*special","data structures","dfs and similar","divide and conquer","trees"]},{"contestId":1190,"index":"D","name":"Tokitsukaze and Strange Rectangle","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","divide and conquer","sortings","two pointers"]},{"contestId":1186,"index":"E","name":"Vus the Cossack and a Field","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["divide and conquer","implementation","math"]},{"contestId":1181,"index":"E1","name":"A Story of One Country (Easy)","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["brute force","divide and conquer","sortings"]},{"contestId":1179,"index":"E","name":"Alesya and Discrete Math","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["divide and conquer","interactive"]},{"contestId":1177,"index":"B","name":"Digits Sequence (Hard Edition)","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["binary search","divide and conquer","implementation"]},{"contestId":1175,"index":"G","name":"Yet Another Partiton Problem","type":"PROGRAMMING","rating":3000,"tags":["data structures","divide and conquer","dp","geometry","two pointers"]},{"contestId":1175,"index":"F","name":"The Number of Subpermutations","type":"PROGRAMMING","rating":2500,"tags":["brute force","data structures","divide and conquer","hashing","math"]},{"contestId":1175,"index":"E","name":"Minimal Segment Cover","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","divide and conquer","dp","greedy","implementation","trees"]},{"contestId":1174,"index":"F","name":"Ehab and the Big Finale","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","divide and conquer","graphs","implementation","interactive","trees"]},{"contestId":1167,"index":"B","name":"Lost Numbers","type":"PROGRAMMING","rating":1400,"tags":["brute force","divide and conquer","interactive","math"]},{"contestId":1156,"index":"E","name":"Special Segments of Permutation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dsu","two pointers"]},{"contestId":1156,"index":"D","name":"0-1-Tree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","divide and conquer","dp","dsu","trees"]},{"contestId":1155,"index":"D","name":"Beautiful Array","type":"PROGRAMMING","rating":1900,"tags":["brute force","data structures","divide and conquer","dp","greedy"]},{"contestId":1146,"index":"E","name":"Hot is Cold","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","implementation"]},{"contestId":1140,"index":"G","name":"Double Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","shortest paths","trees"]},{"contestId":1140,"index":"F","name":"Extending Set of Points","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu"]},{"contestId":1140,"index":"E","name":"Palindrome-less Arrays","type":"PROGRAMMING","rating":2200,"tags":["combinatorics","divide and conquer","dp"]},{"contestId":1139,"index":"F","name":"Dish Shopping","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["data structures","divide and conquer"]},{"contestId":1114,"index":"F","name":"Please, another Queries on Array?","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","math","number theory"]},{"contestId":1111,"index":"C","name":"Creative Snap","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["binary search","brute force","divide and conquer","math"]},{"contestId":1100,"index":"F","name":"Ivan and Burgers","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","divide and conquer","greedy","math"]},{"contestId":1096,"index":"G","name":"Lucky Tickets","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","fft"]},{"contestId":1070,"index":"M","name":"Algoland and Berland","type":"PROGRAMMING","rating":3000,"tags":["constructive algorithms","divide and conquer","geometry"]},{"contestId":1043,"index":"G","name":"Speckled Band","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["data structures","divide and conquer","hashing","string suffix structures","strings"]},{"contestId":1042,"index":"D","name":"Petya and Array","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","divide and conquer","two pointers"]},{"contestId":1041,"index":"F","name":"Ray in the tube","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["data structures","divide and conquer","dp","math"]},{"contestId":1019,"index":"E","name":"Raining season","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","divide and conquer","trees"]},{"contestId":1004,"index":"F","name":"Sonya and Bitwise OR","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["bitmasks","data structures","divide and conquer"]},{"contestId":1000,"index":"F","name":"One Occurrence","type":"PROGRAMMING","rating":2400,"tags":["data structures","divide and conquer"]},{"contestId":997,"index":"D","name":"Cycles in product","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["combinatorics","divide and conquer","trees"]},{"contestId":995,"index":"E","name":"Number Clicker","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["divide and conquer","graphs","meet-in-the-middle","number theory"]},{"contestId":990,"index":"G","name":"GCD Counting","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","dsu","number theory","trees"]},{"contestId":981,"index":"E","name":"Addition on Segments","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["bitmasks","data structures","divide and conquer","dp"]},{"contestId":960,"index":"E","name":"Alternating Tree","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["combinatorics","dfs and similar","divide and conquer","dp","probabilities","trees"]},{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},{"contestId":914,"index":"G","name":"Sum the Fibonacci","type":"PROGRAMMING","points":3500.0,"rating":2600,"tags":["bitmasks","divide and conquer","dp","fft","math"]},{"contestId":914,"index":"E","name":"Palindromes in a Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","trees"]},{"contestId":888,"index":"E","name":"Maximum Subsequence","type":"PROGRAMMING","rating":1800,"tags":["bitmasks","divide and conquer","meet-in-the-middle"]},{"contestId":875,"index":"D","name":"High Cry","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","bitmasks","combinatorics","data structures","divide and conquer"]},{"contestId":873,"index":"D","name":"Merge Sort","type":"PROGRAMMING","rating":1800,"tags":["constructive algorithms","divide and conquer"]},{"contestId":868,"index":"F","name":"Yet Another Minimization Problem","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["divide and conquer","dp"]},{"contestId":865,"index":"F","name":"Egg Roulette","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["bitmasks","brute force","divide and conquer","math","meet-in-the-middle"]},{"contestId":862,"index":"D","name":"Mahmoud and Ehab and the binary string","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["binary search","divide and conquer","interactive"]},{"contestId":850,"index":"E","name":"Random Elections","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["bitmasks","brute force","divide and conquer","fft","math"]},{"contestId":848,"index":"E","name":"Days of Floral Colours","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["combinatorics","divide and conquer","dp","fft","math"]},{"contestId":848,"index":"C","name":"Goodbye Souvenir","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["data structures","divide and conquer"]},{"contestId":842,"index":"E","name":"Nikita and game","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","dfs and similar","divide and conquer","graphs","trees"]},{"contestId":833,"index":"D","name":"Red-Black Cobweb","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":833,"index":"B","name":"The Bakery","type":"PROGRAMMING","points":1250.0,"rating":2200,"tags":["binary search","data structures","divide and conquer","dp","two pointers"]},{"contestId":817,"index":"D","name":"Imbalanced Array","type":"PROGRAMMING","rating":1900,"tags":["data structures","divide and conquer","dsu","sortings"]},{"contestId":809,"index":"E","name":"Surprise me!","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["divide and conquer","math","number theory","trees"]},{"contestId":809,"index":"C","name":"Find a car","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["combinatorics","divide and conquer","dp"]},{"contestId":793,"index":"G","name":"Oleg and chess","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","flows","graph matchings"]},{"contestId":793,"index":"F","name":"Julia the snail","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dp"]},{"contestId":788,"index":"D","name":"Finding lines","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["constructive algorithms","divide and conquer","interactive"]},{"contestId":786,"index":"C","name":"Till I Collapse","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["data structures","divide and conquer"]},{"contestId":776,"index":"F","name":"Sherlock\u0027s bet to Moriarty","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation","trees"]},{"contestId":773,"index":"F","name":"Test Data Generation","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},{"contestId":772,"index":"E","name":"Verifying Kingdom","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["binary search","divide and conquer","interactive","trees"]},{"contestId":768,"index":"B","name":"Code For 1","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","divide and conquer"]},{"contestId":763,"index":"E","name":"Timofey and our friends animals","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","dsu"]},{"contestId":757,"index":"G","name":"Can Bash Save the Day?","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":755,"index":"G","name":"PolandBall and Many Other Balls","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["combinatorics","divide and conquer","dp","fft","math","number theory"]},{"contestId":750,"index":"E","name":"New Year and Old Subsequence","type":"PROGRAMMING","points":2250.0,"rating":2600,"tags":["data structures","divide and conquer","dp","matrices"]},{"contestId":744,"index":"B","name":"Hongcow\u0027s Game","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["bitmasks","divide and conquer","interactive"]},{"contestId":715,"index":"C","name":"Digit Tree","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["dfs and similar","divide and conquer","dsu","trees"]},{"contestId":685,"index":"E","name":"Travelling Through the Snow Queen\u0027s Kingdom","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["bitmasks","brute force","divide and conquer","graphs"]},{"contestId":678,"index":"F","name":"Lena and Queries","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","geometry"]},{"contestId":665,"index":"E","name":"Beautiful Subarrays","type":"PROGRAMMING","rating":2100,"tags":["data structures","divide and conquer","strings","trees"]},{"contestId":662,"index":"C","name":"Binary Table","type":"PROGRAMMING","points":2250.0,"rating":2600,"tags":["bitmasks","brute force","divide and conquer","dp","fft","math"]},{"contestId":660,"index":"F","name":"Bear and Bowling 4","type":"PROGRAMMING","rating":2500,"tags":["binary search","data structures","divide and conquer","geometry","ternary search"]},{"contestId":632,"index":"F","name":"Magic Matrix","type":"PROGRAMMING","rating":2400,"tags":["brute force","divide and conquer","graphs","matrices","trees"]},{"contestId":632,"index":"E","name":"Thief in a Shop","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","fft","math"]},{"contestId":627,"index":"C","name":"Package Delivery","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures","divide and conquer","greedy"]},{"contestId":613,"index":"D","name":"Kingdom and its Cities","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["dfs and similar","divide and conquer","dp","graphs","sortings","trees"]},{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},{"contestId":576,"index":"C","name":"Points on Plane","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","divide and conquer","geometry","greedy","sortings"]},{"contestId":573,"index":"D","name":"Bear and Cavalry","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["data structures","divide and conquer","dp"]},{"contestId":566,"index":"C","name":"Logistical Questions","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["dfs and similar","divide and conquer","trees"]},{"contestId":559,"index":"B","name":"Equivalent Strings","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["divide and conquer","hashing","sortings","strings"]},{"contestId":549,"index":"F","name":"Yura and Developers","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":536,"index":"E","name":"Tavas on the Path","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","divide and conquer","trees"]},{"contestId":526,"index":"F","name":"Pudding Monsters","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer"]},{"contestId":513,"index":"B2","name":"Permutations","type":"PROGRAMMING","points":4.0,"rating":1800,"tags":["bitmasks","divide and conquer","math"]},{"contestId":512,"index":"E","name":"Fox And Polygon","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["constructive algorithms","divide and conquer"]},{"contestId":500,"index":"F","name":"New Year Shopping","type":"PROGRAMMING","points":2750.0,"rating":2700,"tags":["divide and conquer","dp"]},{"contestId":480,"index":"E","name":"Parking Lot","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","divide and conquer"]},{"contestId":459,"index":"D","name":"Pashmak and Parmida\u0027s problem","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","divide and conquer","sortings"]},{"contestId":452,"index":"F","name":"Permutation","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","divide and conquer","hashing"]},{"contestId":448,"index":"C","name":"Painting Fence","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["divide and conquer","dp","greedy"]},{"contestId":440,"index":"C","name":"One-Based Arithmetic","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["brute force","dfs and similar","divide and conquer"]},{"contestId":438,"index":"E","name":"The Child and Binary Tree","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["combinatorics","divide and conquer","fft","number theory"]},{"contestId":434,"index":"E","name":"Furukawa Nagisa\u0027s Tree","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","divide and conquer","sortings","trees"]},{"contestId":429,"index":"D","name":"Tricky Function","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["data structures","divide and conquer","geometry"]},{"contestId":414,"index":"C","name":"Mashmokh and Reverse Operation","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["combinatorics","divide and conquer"]},{"contestId":413,"index":"E","name":"Maze 2D","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","divide and conquer"]},{"contestId":383,"index":"E","name":"Vowels","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["combinatorics","divide and conquer","dp"]},{"contestId":379,"index":"F","name":"New Year Tree","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":372,"index":"B","name":"Counting Rectangles is Fun","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["brute force","divide and conquer","dp"]},{"contestId":364,"index":"E","name":"Empty Rectangles","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["divide and conquer","two pointers"]},{"contestId":343,"index":"E","name":"Pumping Stations","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["brute force","dfs and similar","divide and conquer","flows","graphs","greedy","trees"]},{"contestId":342,"index":"E","name":"Xenia and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":337,"index":"D","name":"Book of Evil","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dfs and similar","divide and conquer","dp","trees"]},{"contestId":321,"index":"E","name":"Ciel and Gondolas","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","divide and conquer","dp"]},{"contestId":321,"index":"C","name":"Ciel the Commander","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","divide and conquer","greedy","trees"]},{"contestId":293,"index":"E","name":"Close Vertices","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","divide and conquer","trees"]},{"contestId":234,"index":"G","name":"Practice","type":"PROGRAMMING","rating":1600,"tags":["constructive algorithms","divide and conquer","implementation"]},{"contestId":232,"index":"E","name":"Quick Tortoise","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["bitmasks","divide and conquer","dp"]},{"contestId":232,"index":"C","name":"Doe Graphs","type":"PROGRAMMING","points":1500.0,"rating":2600,"tags":["constructive algorithms","divide and conquer","dp","graphs","shortest paths"]},{"contestId":217,"index":"C","name":"Formurosa","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["divide and conquer","dp","expression parsing"]},{"contestId":196,"index":"C","name":"Paint Tree","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","divide and conquer","geometry","sortings","trees"]},{"contestId":167,"index":"D","name":"Wizards and Roads","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["data structures","divide and conquer","graph matchings","graphs","greedy"]},{"contestId":161,"index":"C","name":"Abracadabra","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["divide and conquer"]},{"contestId":150,"index":"E","name":"Freezing with Style","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","data structures","divide and conquer","trees"]},{"contestId":120,"index":"J","name":"Minimum Sum","type":"PROGRAMMING","rating":1900,"tags":["divide and conquer","geometry","sortings"]},{"contestId":117,"index":"E","name":"Tree or not Tree","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":117,"index":"D","name":"Not Quick Transformation","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["divide and conquer","math"]},{"contestId":101,"index":"E","name":"Candies and Stones","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["divide and conquer","dp"]},{"contestId":97,"index":"B","name":"Superset","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["constructive algorithms","divide and conquer"]},{"contestId":68,"index":"D","name":"Half-decay tree","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["data structures","divide and conquer","dp","math","probabilities"]},{"contestId":19,"index":"E","name":"Fairy","type":"PROGRAMMING","rating":2900,"tags":["dfs and similar","divide and conquer","dsu"]},{"contestId":9,"index":"D","name":"How many trees?","type":"PROGRAMMING","rating":1900,"tags":["combinatorics","divide and conquer","dp"]}],"problemStatistics":[{"contestId":1580,"index":"D","solvedCount":310},{"contestId":1575,"index":"L","solvedCount":413},{"contestId":1567,"index":"E","solvedCount":2400},{"contestId":1553,"index":"I","solvedCount":101},{"contestId":1553,"index":"H","solvedCount":329},{"contestId":1550,"index":"F","solvedCount":369},{"contestId":1548,"index":"E","solvedCount":107},{"contestId":1548,"index":"B","solvedCount":6180},{"contestId":1547,"index":"F","solvedCount":3574},{"contestId":1543,"index":"E","solvedCount":293},{"contestId":1528,"index":"A","solvedCount":9204},{"contestId":1527,"index":"E","solvedCount":1112},{"contestId":1523,"index":"G","solvedCount":215},{"contestId":1503,"index":"F","solvedCount":71},{"contestId":1494,"index":"D","solvedCount":1959},{"contestId":1491,"index":"E","solvedCount":1564},{"contestId":1490,"index":"D","solvedCount":13950},{"contestId":1482,"index":"E","solvedCount":2059},{"contestId":1470,"index":"F","solvedCount":38},{"contestId":1466,"index":"G","solvedCount":657},{"contestId":1461,"index":"D","solvedCount":6793},{"contestId":1446,"index":"C","solvedCount":2417},{"contestId":1442,"index":"D","solvedCount":870},{"contestId":1439,"index":"C","solvedCount":1205},{"contestId":1438,"index":"E","solvedCount":924},{"contestId":1428,"index":"F","solvedCount":1615},{"contestId":1425,"index":"B","solvedCount":189},{"contestId":1423,"index":"H","solvedCount":341},{"contestId":1423,"index":"C","solvedCount":36},{"contestId":1420,"index":"C2","solvedCount":3562},{"contestId":1418,"index":"G","solvedCount":899},{"contestId":1416,"index":"C","solvedCount":2872},{"contestId":1408,"index":"F","solvedCount":1823},{"contestId":1400,"index":"E","solvedCount":3659},{"contestId":1386,"index":"C","solvedCount":219},{"contestId":1385,"index":"D","solvedCount":13139},{"contestId":1379,"index":"F2","solvedCount":221},{"contestId":1379,"index":"E","solvedCount":210},{"contestId":1375,"index":"H","solvedCount":207},{"contestId":1373,"index":"G","solvedCount":549},{"contestId":1373,"index":"D","solvedCount":11246},{"contestId":1372,"index":"F","solvedCount":286},{"contestId":1371,"index":"F","solvedCount":360},{"contestId":1364,"index":"E","solvedCount":768},{"contestId":1338,"index":"C","solvedCount":2492},{"contestId":1336,"index":"F","solvedCount":109},{"contestId":1316,"index":"F","solvedCount":340},{"contestId":1311,"index":"F","solvedCount":2871},{"contestId":1303,"index":"G","solvedCount":432},{"contestId":1295,"index":"E","solvedCount":1841},{"contestId":1285,"index":"D","solvedCount":5532},{"contestId":1278,"index":"E","solvedCount":1345},{"contestId":1268,"index":"D","solvedCount":206},{"contestId":1261,"index":"F","solvedCount":185},{"contestId":1257,"index":"G","solvedCount":424},{"contestId":1250,"index":"M","solvedCount":294},{"contestId":1237,"index":"C2","solvedCount":3469},{"contestId":1223,"index":"F","solvedCount":779},{"contestId":1218,"index":"E","solvedCount":249},{"contestId":1218,"index":"D","solvedCount":219},{"contestId":1217,"index":"F","solvedCount":307},{"contestId":1213,"index":"G","solvedCount":4271},{"contestId":1192,"index":"B","solvedCount":467},{"contestId":1190,"index":"D","solvedCount":1825},{"contestId":1186,"index":"E","solvedCount":461},{"contestId":1181,"index":"E1","solvedCount":334},{"contestId":1179,"index":"E","solvedCount":81},{"contestId":1177,"index":"B","solvedCount":1773},{"contestId":1175,"index":"G","solvedCount":146},{"contestId":1175,"index":"F","solvedCount":834},{"contestId":1175,"index":"E","solvedCount":1918},{"contestId":1174,"index":"F","solvedCount":933},{"contestId":1167,"index":"B","solvedCount":7598},{"contestId":1156,"index":"E","solvedCount":1825},{"contestId":1156,"index":"D","solvedCount":2369},{"contestId":1155,"index":"D","solvedCount":5061},{"contestId":1146,"index":"E","solvedCount":644},{"contestId":1140,"index":"G","solvedCount":231},{"contestId":1140,"index":"F","solvedCount":567},{"contestId":1140,"index":"E","solvedCount":1569},{"contestId":1139,"index":"F","solvedCount":275},{"contestId":1114,"index":"F","solvedCount":1206},{"contestId":1111,"index":"C","solvedCount":5239},{"contestId":1100,"index":"F","solvedCount":949},{"contestId":1096,"index":"G","solvedCount":963},{"contestId":1070,"index":"M","solvedCount":46},{"contestId":1043,"index":"G","solvedCount":99},{"contestId":1042,"index":"D","solvedCount":3916},{"contestId":1041,"index":"F","solvedCount":1136},{"contestId":1019,"index":"E","solvedCount":214},{"contestId":1004,"index":"F","solvedCount":354},{"contestId":1000,"index":"F","solvedCount":1778},{"contestId":997,"index":"D","solvedCount":304},{"contestId":995,"index":"E","solvedCount":410},{"contestId":990,"index":"G","solvedCount":1104},{"contestId":981,"index":"E","solvedCount":1460},{"contestId":960,"index":"E","solvedCount":1170},{"contestId":936,"index":"E","solvedCount":137},{"contestId":914,"index":"G","solvedCount":587},{"contestId":914,"index":"E","solvedCount":857},{"contestId":888,"index":"E","solvedCount":3917},{"contestId":875,"index":"D","solvedCount":1550},{"contestId":873,"index":"D","solvedCount":2196},{"contestId":868,"index":"F","solvedCount":1451},{"contestId":865,"index":"F","solvedCount":39},{"contestId":862,"index":"D","solvedCount":1438},{"contestId":850,"index":"E","solvedCount":273},{"contestId":848,"index":"E","solvedCount":160},{"contestId":848,"index":"C","solvedCount":776},{"contestId":842,"index":"E","solvedCount":224},{"contestId":833,"index":"D","solvedCount":245},{"contestId":833,"index":"B","solvedCount":2440},{"contestId":817,"index":"D","solvedCount":2714},{"contestId":809,"index":"E","solvedCount":431},{"contestId":809,"index":"C","solvedCount":562},{"contestId":793,"index":"G","solvedCount":185},{"contestId":793,"index":"F","solvedCount":257},{"contestId":788,"index":"D","solvedCount":211},{"contestId":786,"index":"C","solvedCount":1505},{"contestId":776,"index":"F","solvedCount":302},{"contestId":773,"index":"F","solvedCount":119},{"contestId":772,"index":"E","solvedCount":84},{"contestId":768,"index":"B","solvedCount":4808},{"contestId":763,"index":"E","solvedCount":343},{"contestId":757,"index":"G","solvedCount":233},{"contestId":755,"index":"G","solvedCount":464},{"contestId":750,"index":"E","solvedCount":963},{"contestId":744,"index":"B","solvedCount":1501},{"contestId":715,"index":"C","solvedCount":1299},{"contestId":685,"index":"E","solvedCount":326},{"contestId":678,"index":"F","solvedCount":473},{"contestId":665,"index":"E","solvedCount":1806},{"contestId":662,"index":"C","solvedCount":1254},{"contestId":660,"index":"F","solvedCount":903},{"contestId":632,"index":"F","solvedCount":580},{"contestId":632,"index":"E","solvedCount":1526},{"contestId":627,"index":"C","solvedCount":998},{"contestId":613,"index":"D","solvedCount":1377},{"contestId":603,"index":"E","solvedCount":503},{"contestId":576,"index":"C","solvedCount":2148},{"contestId":573,"index":"D","solvedCount":242},{"contestId":566,"index":"C","solvedCount":409},{"contestId":559,"index":"B","solvedCount":8576},{"contestId":549,"index":"F","solvedCount":622},{"contestId":536,"index":"E","solvedCount":234},{"contestId":526,"index":"F","solvedCount":1058},{"contestId":513,"index":"B2","solvedCount":2391},{"contestId":512,"index":"E","solvedCount":309},{"contestId":500,"index":"F","solvedCount":473},{"contestId":480,"index":"E","solvedCount":397},{"contestId":459,"index":"D","solvedCount":6670},{"contestId":452,"index":"F","solvedCount":653},{"contestId":448,"index":"C","solvedCount":5870},{"contestId":440,"index":"C","solvedCount":717},{"contestId":438,"index":"E","solvedCount":1154},{"contestId":434,"index":"E","solvedCount":174},{"contestId":429,"index":"D","solvedCount":2002},{"contestId":414,"index":"C","solvedCount":1795},{"contestId":413,"index":"E","solvedCount":422},{"contestId":383,"index":"E","solvedCount":1363},{"contestId":379,"index":"F","solvedCount":1560},{"contestId":372,"index":"B","solvedCount":2106},{"contestId":364,"index":"E","solvedCount":245},{"contestId":343,"index":"E","solvedCount":365},{"contestId":342,"index":"E","solvedCount":4739},{"contestId":337,"index":"D","solvedCount":4028},{"contestId":321,"index":"E","solvedCount":2606},{"contestId":321,"index":"C","solvedCount":4313},{"contestId":293,"index":"E","solvedCount":820},{"contestId":234,"index":"G","solvedCount":1220},{"contestId":232,"index":"E","solvedCount":383},{"contestId":232,"index":"C","solvedCount":211},{"contestId":217,"index":"C","solvedCount":261},{"contestId":196,"index":"C","solvedCount":666},{"contestId":167,"index":"D","solvedCount":140},{"contestId":161,"index":"C","solvedCount":475},{"contestId":150,"index":"E","solvedCount":378},{"contestId":120,"index":"J","solvedCount":758},{"contestId":117,"index":"E","solvedCount":190},{"contestId":117,"index":"D","solvedCount":296},{"contestId":101,"index":"E","solvedCount":325},{"contestId":97,"index":"B","solvedCount":615},{"contestId":68,"index":"D","solvedCount":321},{"contestId":19,"index":"E","solvedCount":988},{"contestId":9,"index":"D","solvedCount":2205}]}}

