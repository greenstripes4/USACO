{"status":"OK","result":{"problems":[{"contestId":1559,"index":"D2","name":"Mocha and Diana (Hard Version)","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","trees","two pointers"]},{"contestId":1559,"index":"D1","name":"Mocha and Diana (Easy Version)","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["brute force","constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":1555,"index":"F","name":"Good Graph","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1553,"index":"G","name":"Common Divisor Graph","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["brute force","constructive algorithms","dsu","graphs","hashing","math","number theory"]},{"contestId":1553,"index":"E","name":"Permutation Shift","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["brute force","combinatorics","constructive algorithms","dfs and similar","dsu","graphs","math"]},{"contestId":1550,"index":"F","name":"Jumping Around","type":"PROGRAMMING","rating":2700,"tags":["binary search","data structures","divide and conquer","dp","dsu","graphs","shortest paths"]},{"contestId":1537,"index":"F","name":"Figure Fixing","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","math"]},{"contestId":1534,"index":"C","name":"Little Alawn\u0027s Puzzle","type":"PROGRAMMING","points":1250.0,"rating":1300,"tags":["combinatorics","dp","dsu","graphs","math"]},{"contestId":1521,"index":"D","name":"Nastia Plays with a Tree","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"contestId":1515,"index":"F","name":"Phoenix and Earthquake","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1513,"index":"D","name":"GCD and MST","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dsu","graphs","greedy","number theory","sortings"]},{"contestId":1508,"index":"C","name":"Complete the MST","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["bitmasks","brute force","data structures","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"contestId":1482,"index":"D","name":"Playlist","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","dsu","implementation","shortest paths"]},{"contestId":1476,"index":"D","name":"Journey","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","dp","dsu","implementation"]},{"contestId":1468,"index":"J","name":"Road Reform","type":"PROGRAMMING","rating":1800,"tags":["dsu","graphs","greedy"]},{"contestId":1468,"index":"B","name":"Bakery","type":"PROGRAMMING","rating":2900,"tags":["data structures","dsu"]},{"contestId":1466,"index":"F","name":"Euclid\u0027s nightmare","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["bitmasks","dfs and similar","dsu","graphs","greedy","math","sortings"]},{"contestId":1463,"index":"E","name":"Plan of Lectures","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation","sortings","trees"]},{"contestId":1444,"index":"C","name":"Team-Building","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["data structures","dfs and similar","dsu","graphs"]},{"contestId":1442,"index":"B","name":"Identify the Operations","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["combinatorics","data structures","dsu","greedy","implementation"]},{"contestId":1434,"index":"E","name":"A Convex Game","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["dsu","games"]},{"contestId":1423,"index":"H","name":"Virus","type":"PROGRAMMING","rating":2500,"tags":["data structures","divide and conquer","dsu","graphs"]},{"contestId":1419,"index":"F","name":"Rain of Fire","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["binary search","data structures","dfs and similar","dsu","graphs","implementation"]},{"contestId":1416,"index":"D","name":"Graph and Queries","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","dsu","graphs","implementation","trees"]},{"contestId":1411,"index":"C","name":"Peaceful Rooks","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["dfs and similar","dsu","graphs"]},{"contestId":1408,"index":"G","name":"Clusterization Counting","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["combinatorics","dp","dsu","fft","graphs","trees"]},{"contestId":1408,"index":"E","name":"Avoid Rainbow Cycles","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dsu","graphs","greedy","sortings","trees"]},{"contestId":1402,"index":"A","name":"Fancy Fence","type":"PROGRAMMING","rating":1800,"tags":["*special","data structures","dsu","implementation","math","sortings"]},{"contestId":1400,"index":"G","name":"Mercenaries","type":"PROGRAMMING","rating":2600,"tags":["bitmasks","brute force","combinatorics","dp","dsu","math","two pointers"]},{"contestId":1386,"index":"C","name":"Joker","type":"PROGRAMMING","rating":2800,"tags":["*special","bitmasks","data structures","divide and conquer","dsu"]},{"contestId":1385,"index":"G","name":"Columns Swaps","type":"PROGRAMMING","rating":2300,"tags":["2-sat","dfs and similar","dsu","graphs","implementation"]},{"contestId":1383,"index":"A","name":"String Transformation 1","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["dsu","graphs","greedy","sortings","strings","trees","two pointers"]},{"contestId":1380,"index":"E","name":"Merging Towers","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","implementation","trees"]},{"contestId":1370,"index":"D","name":"Odd-Even Subsequence","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","dp","dsu","greedy","implementation"]},{"contestId":1365,"index":"D","name":"Solve The Maze","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","implementation","shortest paths"]},{"contestId":1361,"index":"C","name":"Johnny and Megan\u0027s Necklace","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":1344,"index":"B","name":"Monopole Magnets","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":1335,"index":"F","name":"Robots on a Grid","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","dsu","graphs","greedy","matrices"]},{"contestId":1332,"index":"C","name":"K-Complete Word","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["dfs and similar","dsu","greedy","implementation","strings"]},{"contestId":1307,"index":"F","name":"Cow and Vacation","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["dfs and similar","dsu","trees"]},{"contestId":1305,"index":"G","name":"Kuroni and Antihype","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["bitmasks","brute force","dp","dsu","graphs"]},{"contestId":1303,"index":"F","name":"Number of Components","type":"PROGRAMMING","rating":2800,"tags":["dsu","implementation"]},{"contestId":1292,"index":"A","name":"NEKO\u0027s Maze Game","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["data structures","dsu","implementation"]},{"contestId":1290,"index":"C","name":"Prefix Enlightenment","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["dfs and similar","dsu","graphs"]},{"contestId":1278,"index":"D","name":"Segment Tree","type":"PROGRAMMING","rating":2100,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1276,"index":"B","name":"Two Fairs","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["combinatorics","dfs and similar","dsu","graphs"]},{"contestId":1263,"index":"D","name":"Secret Passwords","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["dfs and similar","dsu","graphs"]},{"contestId":1254,"index":"E","name":"Send Tree to Charlie","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["combinatorics","dfs and similar","dsu","trees"]},{"contestId":1253,"index":"F","name":"Cheap Robot","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["binary search","dsu","graphs","shortest paths","trees"]},{"contestId":1253,"index":"D","name":"Harmonious Graph","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","sortings"]},{"contestId":1249,"index":"B2","name":"Books Exchange (hard version)","type":"PROGRAMMING","rating":1300,"tags":["dfs and similar","dsu","math"]},{"contestId":1249,"index":"B1","name":"Books Exchange (easy version)","type":"PROGRAMMING","rating":1000,"tags":["dsu","math"]},{"contestId":1245,"index":"D","name":"Shichikuji and Power Grid","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["dsu","graphs","greedy","shortest paths","trees"]},{"contestId":1242,"index":"B","name":"0-1 MST","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["dfs and similar","dsu","graphs","sortings"]},{"contestId":1236,"index":"E","name":"Alice and the Unfair Game","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","data structures","dp","dsu"]},{"contestId":1220,"index":"E","name":"Tourism","type":"PROGRAMMING","points":2750.0,"rating":2200,"tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"contestId":1217,"index":"F","name":"Forced Online Queries Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu","graphs","trees"]},{"contestId":1213,"index":"G","name":"Path Queries","type":"PROGRAMMING","rating":1800,"tags":["divide and conquer","dsu","graphs","sortings","trees"]},{"contestId":1213,"index":"F","name":"Unstable String Sort","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","greedy","implementation","strings"]},{"contestId":1209,"index":"G1","name":"Into Blocks (easy version)","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dsu","greedy","implementation","two pointers"]},{"contestId":1209,"index":"D","name":"Cow and Snacks","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["dfs and similar","dsu","graphs"]},{"contestId":1184,"index":"E3","name":"Daleks\u0027 Invasion (hard)","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1176,"index":"E","name":"Cover it!","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","dsu","graphs","shortest paths","trees"]},{"contestId":1167,"index":"C","name":"News Distribution","type":"PROGRAMMING","rating":1400,"tags":["dfs and similar","dsu","graphs"]},{"contestId":1166,"index":"F","name":"Vicky\u0027s Delivery Service","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dsu","graphs","hashing"]},{"contestId":1156,"index":"E","name":"Special Segments of Permutation","type":"PROGRAMMING","rating":2200,"tags":["data structures","divide and conquer","dsu","two pointers"]},{"contestId":1156,"index":"D","name":"0-1-Tree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","divide and conquer","dp","dsu","trees"]},{"contestId":1140,"index":"F","name":"Extending Set of Points","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu"]},{"contestId":1139,"index":"C","name":"Edgy Trees","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["dfs and similar","dsu","graphs","math","trees"]},{"contestId":1133,"index":"F2","name":"Spanning Tree with One Fixed Degree","type":"PROGRAMMING","rating":1900,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy"]},{"contestId":1131,"index":"F","name":"Asya And Kittens","type":"PROGRAMMING","points":3000.0,"rating":1700,"tags":["constructive algorithms","dsu"]},{"contestId":1131,"index":"D","name":"Gourmet choice","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dfs and similar","dp","dsu","graphs","greedy"]},{"contestId":1130,"index":"C","name":"Connect","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["brute force","dfs and similar","dsu"]},{"contestId":1120,"index":"D","name":"Power Tree","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"contestId":1108,"index":"F","name":"MST Unification","type":"PROGRAMMING","rating":2100,"tags":["binary search","dsu","graphs","greedy"]},{"contestId":1107,"index":"G","name":"Vasya and Maximum Profit","type":"PROGRAMMING","rating":2400,"tags":["binary search","constructive algorithms","data structures","dp","dsu"]},{"contestId":1095,"index":"F","name":"Make It Connected","type":"PROGRAMMING","rating":1900,"tags":["dsu","graphs","greedy"]},{"contestId":1081,"index":"D","name":"Maximum Distance","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["dsu","graphs","shortest paths","sortings"]},{"contestId":1055,"index":"B","name":"Alice and Hairdresser","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["dsu","implementation"]},{"contestId":1051,"index":"G","name":"Distinctification","type":"PROGRAMMING","rating":2900,"tags":["data structures","dsu","greedy"]},{"contestId":1044,"index":"D","name":"Deduction Queries","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dsu"]},{"contestId":1042,"index":"F","name":"Leaf Sets","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings","trees"]},{"contestId":1039,"index":"C","name":"Network Safety","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["dfs and similar","dsu","graphs","math","sortings"]},{"contestId":1027,"index":"F","name":"Session in BSU","type":"PROGRAMMING","rating":2400,"tags":["binary search","dfs and similar","dsu","graph matchings","graphs"]},{"contestId":1023,"index":"F","name":"Mobile Phone Network","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":1012,"index":"E","name":"Cycle sort","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["dsu","math"]},{"contestId":1012,"index":"B","name":"Chemical table","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["constructive algorithms","dfs and similar","dsu","graphs","matrices"]},{"contestId":1009,"index":"F","name":"Dominant Indices","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","trees"]},{"contestId":990,"index":"G","name":"GCD Counting","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","dsu","number theory","trees"]},{"contestId":986,"index":"C","name":"AND Graph","type":"PROGRAMMING","points":1750.0,"rating":2500,"tags":["bitmasks","dfs and similar","dsu","graphs"]},{"contestId":982,"index":"D","name":"Shark","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","data structures","dsu","trees"]},{"contestId":979,"index":"D","name":"Kuro and GCD and XOR and SUM","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","bitmasks","brute force","data structures","dp","dsu","greedy","math","number theory","strings","trees"]},{"contestId":977,"index":"E","name":"Cyclic Components","type":"PROGRAMMING","rating":1500,"tags":["dfs and similar","dsu","graphs"]},{"contestId":962,"index":"G","name":"Visible Black Areas","type":"PROGRAMMING","rating":2800,"tags":["data structures","dsu","geometry","trees"]},{"contestId":959,"index":"B","name":"Mahmoud and Ehab and the message","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["dsu","greedy","implementation"]},{"contestId":939,"index":"D","name":"Love Rescue","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["dfs and similar","dsu","graphs","greedy","strings"]},{"contestId":938,"index":"G","name":"Shortest Path Queries","type":"PROGRAMMING","rating":2900,"tags":["bitmasks","data structures","dsu","graphs"]},{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},{"contestId":920,"index":"F","name":"SUM and REPLACE","type":"PROGRAMMING","rating":2000,"tags":["brute force","data structures","dsu","number theory"]},{"contestId":920,"index":"E","name":"Connected Components?","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs"]},{"contestId":915,"index":"F","name":"Imbalance Value of a Tree","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":902,"index":"B","name":"Coloring a Tree","type":"PROGRAMMING","points":1000.0,"rating":1200,"tags":["dfs and similar","dsu","greedy"]},{"contestId":901,"index":"C","name":"Bipartite Segments","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["binary search","data structures","dfs and similar","dsu","graphs","two pointers"]},{"contestId":899,"index":"E","name":"Segments Removal","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["data structures","dsu","flows","implementation","two pointers"]},{"contestId":896,"index":"E","name":"Welcome home, Chtholly","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","dsu"]},{"contestId":891,"index":"C","name":"Envy","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["data structures","dsu","graphs"]},{"contestId":886,"index":"C","name":"Petya and Catacombs","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["dsu","greedy","implementation","trees"]},{"contestId":884,"index":"E","name":"Binary Matrix","type":"PROGRAMMING","rating":2500,"tags":["dsu"]},{"contestId":875,"index":"F","name":"Royal Questions","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["dsu","graphs","greedy"]},{"contestId":875,"index":"B","name":"Sorting the Coins","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["dsu","implementation","sortings","two pointers"]},{"contestId":873,"index":"F","name":"Forbidden Indices","type":"PROGRAMMING","rating":2400,"tags":["dsu","string suffix structures","strings"]},{"contestId":870,"index":"E","name":"Points, Lines and Ready-made Titles","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":859,"index":"E","name":"Desk Disorder","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["combinatorics","dfs and similar","dsu","graphs","trees"]},{"contestId":843,"index":"A","name":"Sorting by Subsequences","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["dfs and similar","dsu","implementation","math","sortings"]},{"contestId":817,"index":"D","name":"Imbalanced Array","type":"PROGRAMMING","rating":1900,"tags":["data structures","divide and conquer","dsu","sortings"]},{"contestId":813,"index":"F","name":"Bipartite Checking","type":"PROGRAMMING","rating":2500,"tags":["data structures","dsu","graphs"]},{"contestId":811,"index":"E","name":"Vladik and Entertaining Flags","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dsu","graphs"]},{"contestId":788,"index":"B","name":"Weird journey","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["combinatorics","constructive algorithms","dfs and similar","dsu","graphs"]},{"contestId":778,"index":"C","name":"Peterson Polyglot","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","dfs and similar","dsu","hashing","strings","trees"]},{"contestId":776,"index":"D","name":"The Door Problem","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["2-sat","dfs and similar","dsu","graphs"]},{"contestId":771,"index":"A","name":"Bear and Friendship Condition","type":"PROGRAMMING","points":250.0,"rating":1500,"tags":["dfs and similar","dsu","graphs"]},{"contestId":766,"index":"D","name":"Mahmoud and a Dictionary","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","dp","dsu","graphs"]},{"contestId":765,"index":"D","name":"Artsem and Saunders","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["constructive algorithms","dsu","math"]},{"contestId":763,"index":"E","name":"Timofey and our friends animals","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","dsu"]},{"contestId":763,"index":"A","name":"Timofey and a tree","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"contestId":755,"index":"C","name":"PolandBall and Forest","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["dfs and similar","dsu","graphs","interactive","trees"]},{"contestId":750,"index":"H","name":"New Year and Snowy Grid","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["dfs and similar","dsu","graphs","interactive"]},{"contestId":741,"index":"B","name":"Arpa\u0027s weak amphitheater and Mehrdad\u0027s valuable Hoses","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["dfs and similar","dp","dsu"]},{"contestId":733,"index":"F","name":"Drivers Dissatisfaction","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","dsu","graphs","trees"]},{"contestId":731,"index":"C","name":"Socks","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["dfs and similar","dsu","graphs","greedy"]},{"contestId":723,"index":"F","name":"st-Spanning Tree","type":"PROGRAMMING","points":3000.0,"rating":2300,"tags":["dsu","graphs","greedy","implementation"]},{"contestId":723,"index":"D","name":"Lakes in Berland","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["dfs and similar","dsu","graphs","greedy","implementation"]},{"contestId":722,"index":"C","name":"Destroying Array","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["data structures","dsu"]},{"contestId":715,"index":"C","name":"Digit Tree","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["dfs and similar","divide and conquer","dsu","trees"]},{"contestId":698,"index":"B","name":"Fix a Tree","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","trees"]},{"contestId":696,"index":"E","name":"...Wait for it...","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dsu","trees"]},{"contestId":691,"index":"D","name":"Swaps in Permutation","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","dsu","math"]},{"contestId":687,"index":"D","name":"Dividing Kingdom II","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["brute force","data structures","dsu","graphs","sortings"]},{"contestId":679,"index":"C","name":"Bear and Square Grid","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["dfs and similar","dsu","implementation"]},{"contestId":670,"index":"E","name":"Correct Bracket Sequence Editor","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["data structures","dsu","strings"]},{"contestId":659,"index":"F","name":"Polycarp and Hay","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dfs and similar","dsu","graphs","greedy","sortings"]},{"contestId":659,"index":"E","name":"New Reform","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"contestId":653,"index":"E","name":"Bear and Forgotten Tree 2","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":652,"index":"E","name":"Pursuit For Artifacts","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":650,"index":"E","name":"Clockwork Bomb","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dfs and similar","dsu","greedy","trees"]},{"contestId":650,"index":"C","name":"Table Compression","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["dfs and similar","dp","dsu","graphs","greedy"]},{"contestId":627,"index":"F","name":"Island Puzzle","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":609,"index":"E","name":"Minimum spanning tree for each edge","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","trees"]},{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},{"contestId":603,"index":"B","name":"Moodular Arithmetic","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["combinatorics","dfs and similar","dsu","math","number theory"]},{"contestId":601,"index":"D","name":"Acyclic Organic Compounds","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","hashing","strings","trees"]},{"contestId":600,"index":"E","name":"Lomsat gelral","type":"PROGRAMMING","rating":2300,"tags":["data structures","dfs and similar","dsu","trees"]},{"contestId":571,"index":"D","name":"Campus","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["binary search","data structures","dsu","trees"]},{"contestId":566,"index":"D","name":"Restructuring Company","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["data structures","dsu"]},{"contestId":553,"index":"C","name":"Love Triangles","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["dfs and similar","dsu","graphs"]},{"contestId":547,"index":"B","name":"Mike and Feet","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","dp","dsu"]},{"contestId":516,"index":"D","name":"Drazil and Morning Exercise","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["dfs and similar","dp","dsu","trees","two pointers"]},{"contestId":515,"index":"B","name":"Drazil and His Happy Friends","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["brute force","dsu","meet-in-the-middle","number theory"]},{"contestId":506,"index":"D","name":"Mr. Kitayuta\u0027s Colorful Graph","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["brute force","dfs and similar","dsu","graphs"]},{"contestId":505,"index":"B","name":"Mr. Kitayuta\u0027s Colorful Graph","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["dfs and similar","dp","dsu","graphs"]},{"contestId":501,"index":"B","name":"Misha and Changing Handles","type":"PROGRAMMING","points":500.0,"rating":1100,"tags":["data structures","dsu","strings"]},{"contestId":500,"index":"E","name":"New Year Domino","type":"PROGRAMMING","points":2750.0,"rating":2300,"tags":["data structures","dp","dsu"]},{"contestId":500,"index":"B","name":"New Year Permutation","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["dfs and similar","dsu","graphs","greedy","math","sortings"]},{"contestId":490,"index":"B","name":"Queue","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["dsu","implementation"]},{"contestId":472,"index":"D","name":"Design Tutorial: Inverse the Problem","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["dfs and similar","dsu","shortest paths","trees"]},{"contestId":471,"index":"E","name":"MUH and Lots and Lots of Segments","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","dsu"]},{"contestId":468,"index":"B","name":"Two Sets","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["2-sat","dfs and similar","dsu","graph matchings","greedy"]},{"contestId":466,"index":"E","name":"Information Graph","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":461,"index":"D","name":"Appleman and Complicated Task","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["dsu","math"]},{"contestId":455,"index":"C","name":"Civilization","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dp","dsu","ternary search","trees"]},{"contestId":452,"index":"E","name":"Three strings","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dsu","string suffix structures","strings"]},{"contestId":445,"index":"B","name":"DZY Loves Chemistry","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["dfs and similar","dsu","greedy"]},{"contestId":444,"index":"E","name":"DZY Loves Planting","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["binary search","dsu","trees"]},{"contestId":441,"index":"D","name":"Valera and Swaps","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dsu","graphs","implementation","math","string suffix structures"]},{"contestId":437,"index":"D","name":"The Child and Zoo","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["dsu","sortings"]},{"contestId":436,"index":"C","name":"Dungeons and Candies","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["dsu","graphs","greedy","trees"]},{"contestId":433,"index":"D","name":"Nanami\u0027s Digital Board","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dsu","implementation"]},{"contestId":409,"index":"H","name":"A + B Strikes Back","type":"PROGRAMMING","rating":1500,"tags":["*special","brute force","constructive algorithms","dsu","implementation"]},{"contestId":400,"index":"D","name":"Dima and Bacteria","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dsu","graphs","shortest paths"]},{"contestId":374,"index":"E","name":"Inna and Babies","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["binary search","data structures","dsu","geometry","implementation"]},{"contestId":371,"index":"D","name":"Vessels","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","dsu","implementation","trees"]},{"contestId":366,"index":"D","name":"Dima and Trap Graph","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","dfs and similar","dsu","shortest paths","two pointers"]},{"contestId":362,"index":"D","name":"Fools and Foolproof Roads","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","greedy"]},{"contestId":358,"index":"E","name":"Dima and Kicks","type":"PROGRAMMING","points":3000.0,"rating":2300,"tags":["brute force","dsu","graphs","implementation"]},{"contestId":356,"index":"A","name":"Knight Tournament","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["data structures","dsu"]},{"contestId":325,"index":"E","name":"The Red Button","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["combinatorics","dfs and similar","dsu","graphs","greedy"]},{"contestId":325,"index":"D","name":"Reclamation","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["dsu"]},{"contestId":313,"index":"E","name":"Ilya and Two Numbers","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","data structures","dsu","greedy"]},{"contestId":292,"index":"D","name":"Connected Components","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["data structures","dfs and similar","dp","dsu"]},{"contestId":277,"index":"A","name":"Learning Languages","type":"PROGRAMMING","points":500.0,"rating":1400,"tags":["dfs and similar","dsu"]},{"contestId":260,"index":"D","name":"Black and White Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":228,"index":"E","name":"The Road to Berland is Paved With Good Intentions","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["2-sat","dfs and similar","dsu","graphs"]},{"contestId":217,"index":"E","name":"Alien DNA","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","dsu","trees"]},{"contestId":217,"index":"A","name":"Ice Skating","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["brute force","dfs and similar","dsu","graphs"]},{"contestId":212,"index":"D","name":"Cutting a Fence","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["binary search","data structures","dsu"]},{"contestId":209,"index":"C","name":"Trails and Glades","type":"PROGRAMMING","points":1000.0,"rating":2400,"tags":["constructive algorithms","dsu","graphs","greedy"]},{"contestId":196,"index":"E","name":"Opening Portals","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["dsu","graphs","shortest paths"]},{"contestId":195,"index":"E","name":"Building Forest","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["data structures","dsu","graphs"]},{"contestId":190,"index":"E","name":"Counter Attack","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dsu","graphs","hashing","sortings"]},{"contestId":187,"index":"C","name":"Weak Memory","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dfs and similar","dsu"]},{"contestId":177,"index":"C2","name":"Party","type":"PROGRAMMING","points":70.0,"rating":1500,"tags":["brute force","dfs and similar","dsu","graphs"]},{"contestId":177,"index":"C1","name":"Party","type":"PROGRAMMING","points":30.0,"rating":1500,"tags":["dfs and similar","dsu","graphs"]},{"contestId":165,"index":"D","name":"Beard Graph","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dsu","trees"]},{"contestId":160,"index":"D","name":"Edges in MST","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["dfs and similar","dsu","graphs","sortings"]},{"contestId":141,"index":"E","name":"Clearing Up","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","dp","dsu","graphs"]},{"contestId":111,"index":"C","name":"Petya and Spiders","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["bitmasks","dp","dsu"]},{"contestId":109,"index":"C","name":"Lucky Tree","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["dp","dsu","trees"]},{"contestId":105,"index":"D","name":"Entertaining Geodetics","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["brute force","dsu","implementation"]},{"contestId":103,"index":"B","name":"Cthulhu","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["dfs and similar","dsu","graphs"]},{"contestId":97,"index":"E","name":"Leaders","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":95,"index":"E","name":"Lucky Country","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["dp","dsu","graphs"]},{"contestId":91,"index":"C","name":"Ski Base","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["combinatorics","dsu","graphs"]},{"contestId":87,"index":"D","name":"Beautiful Road","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["dfs and similar","dp","dsu","graphs","implementation","sortings","trees"]},{"contestId":85,"index":"E","name":"Guard Towers","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["binary search","dsu","geometry","graphs","sortings"]},{"contestId":81,"index":"E","name":"Pairs","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"contestId":77,"index":"C","name":"Beavermuncher-0xFF","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dp","dsu","greedy","trees"]},{"contestId":76,"index":"A","name":"Gift","type":"PROGRAMMING","rating":2200,"tags":["dsu","graphs","sortings","trees"]},{"contestId":74,"index":"C","name":"Chessboard Billiard","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dsu","graphs","number theory"]},{"contestId":60,"index":"D","name":"Savior","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["brute force","dsu","math"]},{"contestId":60,"index":"B","name":"Serial Time!","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["dfs and similar","dsu"]},{"contestId":46,"index":"F","name":"Hercule Poirot Problem","type":"PROGRAMMING","rating":2300,"tags":["dsu","graphs"]},{"contestId":45,"index":"B","name":"School","type":"PROGRAMMING","rating":2200,"tags":["dp","dsu"]},{"contestId":36,"index":"E","name":"Two Paths","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["constructive algorithms","dsu","graphs","implementation"]},{"contestId":28,"index":"B","name":"pSort","type":"PROGRAMMING","points":1000.0,"rating":1600,"tags":["dfs and similar","dsu","graphs"]},{"contestId":27,"index":"D","name":"Ring Road 2","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["2-sat","dfs and similar","dsu","graphs"]},{"contestId":25,"index":"D","name":"Roads not only in Berland","type":"PROGRAMMING","rating":1900,"tags":["dsu","graphs","trees"]},{"contestId":19,"index":"E","name":"Fairy","type":"PROGRAMMING","rating":2900,"tags":["dfs and similar","divide and conquer","dsu"]},{"contestId":17,"index":"B","name":"Hierarchy","type":"PROGRAMMING","rating":1500,"tags":["dfs and similar","dsu","greedy","shortest paths"]},{"contestId":13,"index":"E","name":"Holes","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu"]},{"contestId":9,"index":"E","name":"Interestring graph and Apples","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","dsu","graphs"]},{"contestId":6,"index":"E","name":"Exposition","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dsu","trees","two pointers"]}],"problemStatistics":[{"contestId":1559,"index":"D2","solvedCount":1305},{"contestId":1559,"index":"D1","solvedCount":7384},{"contestId":1555,"index":"F","solvedCount":464},{"contestId":1553,"index":"G","solvedCount":594},{"contestId":1553,"index":"E","solvedCount":2323},{"contestId":1550,"index":"F","solvedCount":310},{"contestId":1537,"index":"F","solvedCount":1654},{"contestId":1534,"index":"C","solvedCount":8558},{"contestId":1521,"index":"D","solvedCount":1160},{"contestId":1515,"index":"F","solvedCount":1033},{"contestId":1513,"index":"D","solvedCount":3090},{"contestId":1508,"index":"C","solvedCount":869},{"contestId":1494,"index":"D","solvedCount":1906},{"contestId":1482,"index":"D","solvedCount":2867},{"contestId":1476,"index":"D","solvedCount":6265},{"contestId":1468,"index":"J","solvedCount":2306},{"contestId":1468,"index":"B","solvedCount":113},{"contestId":1466,"index":"F","solvedCount":2408},{"contestId":1463,"index":"E","solvedCount":1032},{"contestId":1444,"index":"C","solvedCount":982},{"contestId":1442,"index":"B","solvedCount":3319},{"contestId":1434,"index":"E","solvedCount":73},{"contestId":1423,"index":"H","solvedCount":325},{"contestId":1419,"index":"F","solvedCount":359},{"contestId":1416,"index":"D","solvedCount":1064},{"contestId":1411,"index":"C","solvedCount":5963},{"contestId":1408,"index":"G","solvedCount":512},{"contestId":1408,"index":"E","solvedCount":1470},{"contestId":1402,"index":"A","solvedCount":810},{"contestId":1400,"index":"G","solvedCount":595},{"contestId":1386,"index":"C","solvedCount":208},{"contestId":1385,"index":"G","solvedCount":936},{"contestId":1383,"index":"A","solvedCount":8405},{"contestId":1380,"index":"E","solvedCount":1430},{"contestId":1370,"index":"D","solvedCount":6786},{"contestId":1365,"index":"D","solvedCount":10571},{"contestId":1361,"index":"C","solvedCount":1004},{"contestId":1344,"index":"B","solvedCount":4922},{"contestId":1335,"index":"F","solvedCount":1601},{"contestId":1332,"index":"C","solvedCount":12190},{"contestId":1307,"index":"F","solvedCount":318},{"contestId":1305,"index":"G","solvedCount":343},{"contestId":1303,"index":"F","solvedCount":376},{"contestId":1292,"index":"A","solvedCount":11067},{"contestId":1290,"index":"C","solvedCount":1113},{"contestId":1278,"index":"D","solvedCount":2805},{"contestId":1276,"index":"B","solvedCount":3504},{"contestId":1263,"index":"D","solvedCount":9154},{"contestId":1254,"index":"E","solvedCount":161},{"contestId":1253,"index":"F","solvedCount":847},{"contestId":1253,"index":"D","solvedCount":6598},{"contestId":1249,"index":"B2","solvedCount":12204},{"contestId":1249,"index":"B1","solvedCount":15590},{"contestId":1245,"index":"D","solvedCount":4207},{"contestId":1242,"index":"B","solvedCount":4644},{"contestId":1236,"index":"E","solvedCount":498},{"contestId":1220,"index":"E","solvedCount":1913},{"contestId":1217,"index":"F","solvedCount":300},{"contestId":1213,"index":"G","solvedCount":4156},{"contestId":1213,"index":"F","solvedCount":1735},{"contestId":1209,"index":"G1","solvedCount":2159},{"contestId":1209,"index":"D","solvedCount":6003},{"contestId":1184,"index":"E3","solvedCount":333},{"contestId":1176,"index":"E","solvedCount":6465},{"contestId":1167,"index":"C","solvedCount":10682},{"contestId":1166,"index":"F","solvedCount":473},{"contestId":1156,"index":"E","solvedCount":1754},{"contestId":1156,"index":"D","solvedCount":2307},{"contestId":1140,"index":"F","solvedCount":532},{"contestId":1139,"index":"C","solvedCount":8531},{"contestId":1133,"index":"F2","solvedCount":2087},{"contestId":1131,"index":"F","solvedCount":4669},{"contestId":1131,"index":"D","solvedCount":2441},{"contestId":1130,"index":"C","solvedCount":6440},{"contestId":1120,"index":"D","solvedCount":604},{"contestId":1108,"index":"F","solvedCount":1743},{"contestId":1107,"index":"G","solvedCount":713},{"contestId":1095,"index":"F","solvedCount":3529},{"contestId":1081,"index":"D","solvedCount":2972},{"contestId":1055,"index":"B","solvedCount":3931},{"contestId":1051,"index":"G","solvedCount":168},{"contestId":1044,"index":"D","solvedCount":660},{"contestId":1042,"index":"F","solvedCount":919},{"contestId":1039,"index":"C","solvedCount":1100},{"contestId":1027,"index":"F","solvedCount":987},{"contestId":1023,"index":"F","solvedCount":621},{"contestId":1012,"index":"E","solvedCount":154},{"contestId":1012,"index":"B","solvedCount":2971},{"contestId":1009,"index":"F","solvedCount":2407},{"contestId":990,"index":"G","solvedCount":1062},{"contestId":986,"index":"C","solvedCount":1554},{"contestId":982,"index":"D","solvedCount":1904},{"contestId":979,"index":"D","solvedCount":1211},{"contestId":977,"index":"E","solvedCount":11317},{"contestId":962,"index":"G","solvedCount":77},{"contestId":959,"index":"B","solvedCount":7091},{"contestId":939,"index":"D","solvedCount":5296},{"contestId":938,"index":"G","solvedCount":366},{"contestId":936,"index":"E","solvedCount":136},{"contestId":920,"index":"F","solvedCount":3575},{"contestId":920,"index":"E","solvedCount":3264},{"contestId":915,"index":"F","solvedCount":1326},{"contestId":902,"index":"B","solvedCount":8075},{"contestId":901,"index":"C","solvedCount":923},{"contestId":899,"index":"E","solvedCount":1887},{"contestId":896,"index":"E","solvedCount":586},{"contestId":891,"index":"C","solvedCount":1291},{"contestId":886,"index":"C","solvedCount":4865},{"contestId":884,"index":"E","solvedCount":474},{"contestId":875,"index":"F","solvedCount":892},{"contestId":875,"index":"B","solvedCount":4596},{"contestId":873,"index":"F","solvedCount":803},{"contestId":870,"index":"E","solvedCount":812},{"contestId":859,"index":"E","solvedCount":1265},{"contestId":843,"index":"A","solvedCount":4741},{"contestId":817,"index":"D","solvedCount":2630},{"contestId":813,"index":"F","solvedCount":544},{"contestId":811,"index":"E","solvedCount":524},{"contestId":788,"index":"B","solvedCount":1913},{"contestId":778,"index":"C","solvedCount":705},{"contestId":776,"index":"D","solvedCount":3464},{"contestId":771,"index":"A","solvedCount":10179},{"contestId":766,"index":"D","solvedCount":2427},{"contestId":765,"index":"D","solvedCount":2209},{"contestId":763,"index":"E","solvedCount":334},{"contestId":763,"index":"A","solvedCount":7862},{"contestId":755,"index":"C","solvedCount":7962},{"contestId":750,"index":"H","solvedCount":100},{"contestId":741,"index":"B","solvedCount":4333},{"contestId":733,"index":"F","solvedCount":874},{"contestId":731,"index":"C","solvedCount":5319},{"contestId":723,"index":"F","solvedCount":1155},{"contestId":723,"index":"D","solvedCount":5608},{"contestId":722,"index":"C","solvedCount":5980},{"contestId":715,"index":"C","solvedCount":1265},{"contestId":698,"index":"B","solvedCount":4580},{"contestId":696,"index":"E","solvedCount":311},{"contestId":691,"index":"D","solvedCount":3557},{"contestId":687,"index":"D","solvedCount":695},{"contestId":679,"index":"C","solvedCount":1008},{"contestId":670,"index":"E","solvedCount":2777},{"contestId":659,"index":"F","solvedCount":1478},{"contestId":659,"index":"E","solvedCount":5937},{"contestId":653,"index":"E","solvedCount":1062},{"contestId":652,"index":"E","solvedCount":1142},{"contestId":650,"index":"E","solvedCount":385},{"contestId":650,"index":"C","solvedCount":1580},{"contestId":627,"index":"F","solvedCount":137},{"contestId":609,"index":"E","solvedCount":3820},{"contestId":603,"index":"E","solvedCount":498},{"contestId":603,"index":"B","solvedCount":2243},{"contestId":601,"index":"D","solvedCount":815},{"contestId":600,"index":"E","solvedCount":6027},{"contestId":571,"index":"D","solvedCount":400},{"contestId":566,"index":"D","solvedCount":1952},{"contestId":553,"index":"C","solvedCount":1502},{"contestId":547,"index":"B","solvedCount":5742},{"contestId":516,"index":"D","solvedCount":837},{"contestId":515,"index":"B","solvedCount":6474},{"contestId":506,"index":"D","solvedCount":1365},{"contestId":505,"index":"B","solvedCount":8462},{"contestId":501,"index":"B","solvedCount":10963},{"contestId":500,"index":"E","solvedCount":1114},{"contestId":500,"index":"B","solvedCount":7354},{"contestId":490,"index":"B","solvedCount":4972},{"contestId":472,"index":"D","solvedCount":3488},{"contestId":471,"index":"E","solvedCount":59},{"contestId":468,"index":"B","solvedCount":3006},{"contestId":466,"index":"E","solvedCount":1520},{"contestId":461,"index":"D","solvedCount":296},{"contestId":455,"index":"C","solvedCount":3941},{"contestId":452,"index":"E","solvedCount":729},{"contestId":445,"index":"B","solvedCount":8380},{"contestId":444,"index":"E","solvedCount":504},{"contestId":441,"index":"D","solvedCount":921},{"contestId":437,"index":"D","solvedCount":2585},{"contestId":436,"index":"C","solvedCount":2300},{"contestId":433,"index":"D","solvedCount":952},{"contestId":409,"index":"H","solvedCount":5847},{"contestId":400,"index":"D","solvedCount":2270},{"contestId":374,"index":"E","solvedCount":155},{"contestId":371,"index":"D","solvedCount":3820},{"contestId":366,"index":"D","solvedCount":1009},{"contestId":362,"index":"D","solvedCount":746},{"contestId":358,"index":"E","solvedCount":341},{"contestId":356,"index":"A","solvedCount":8648},{"contestId":325,"index":"E","solvedCount":399},{"contestId":325,"index":"D","solvedCount":330},{"contestId":313,"index":"E","solvedCount":461},{"contestId":292,"index":"D","solvedCount":1781},{"contestId":277,"index":"A","solvedCount":12500},{"contestId":260,"index":"D","solvedCount":1038},{"contestId":228,"index":"E","solvedCount":1758},{"contestId":217,"index":"E","solvedCount":226},{"contestId":217,"index":"A","solvedCount":14466},{"contestId":212,"index":"D","solvedCount":331},{"contestId":209,"index":"C","solvedCount":503},{"contestId":196,"index":"E","solvedCount":540},{"contestId":195,"index":"E","solvedCount":601},{"contestId":190,"index":"E","solvedCount":981},{"contestId":187,"index":"C","solvedCount":1043},{"contestId":177,"index":"C2","solvedCount":1746},{"contestId":177,"index":"C1","solvedCount":1722},{"contestId":165,"index":"D","solvedCount":1091},{"contestId":160,"index":"D","solvedCount":1490},{"contestId":141,"index":"E","solvedCount":576},{"contestId":111,"index":"C","solvedCount":978},{"contestId":109,"index":"C","solvedCount":2225},{"contestId":105,"index":"D","solvedCount":112},{"contestId":103,"index":"B","solvedCount":6286},{"contestId":97,"index":"E","solvedCount":223},{"contestId":95,"index":"E","solvedCount":872},{"contestId":91,"index":"C","solvedCount":706},{"contestId":87,"index":"D","solvedCount":661},{"contestId":85,"index":"E","solvedCount":592},{"contestId":81,"index":"E","solvedCount":218},{"contestId":77,"index":"C","solvedCount":769},{"contestId":76,"index":"A","solvedCount":840},{"contestId":74,"index":"C","solvedCount":706},{"contestId":60,"index":"D","solvedCount":249},{"contestId":60,"index":"B","solvedCount":3247},{"contestId":46,"index":"F","solvedCount":252},{"contestId":45,"index":"B","solvedCount":189},{"contestId":36,"index":"E","solvedCount":288},{"contestId":28,"index":"B","solvedCount":2748},{"contestId":27,"index":"D","solvedCount":1680},{"contestId":25,"index":"D","solvedCount":5832},{"contestId":19,"index":"E","solvedCount":935},{"contestId":17,"index":"B","solvedCount":2745},{"contestId":13,"index":"E","solvedCount":2707},{"contestId":9,"index":"E","solvedCount":590},{"contestId":6,"index":"E","solvedCount":2116}]}}

