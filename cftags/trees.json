{"status":"OK","result":{"problems":[{"contestId":1559,"index":"D2","name":"Mocha and Diana (Hard Version)","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","constructive algorithms","dfs and similar","dsu","graphs","greedy","trees","two pointers"]},{"contestId":1559,"index":"D1","name":"Mocha and Diana (Easy Version)","type":"PROGRAMMING","points":1500.0,"rating":1400,"tags":["brute force","constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":1555,"index":"F","name":"Good Graph","type":"PROGRAMMING","rating":2700,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1555,"index":"E","name":"Boring Segments","type":"PROGRAMMING","rating":2100,"tags":["data structures","sortings","trees","two pointers"]},{"contestId":1553,"index":"H","name":"XOR and Distance","type":"PROGRAMMING","points":3750.0,"rating":2900,"tags":["bitmasks","divide and conquer","trees"]},{"contestId":1551,"index":"F","name":"Equidistant Vertices","type":"PROGRAMMING","rating":2200,"tags":["brute force","combinatorics","dfs and similar","dp","trees"]},{"contestId":1547,"index":"G","name":"How Many Paths?","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":1540,"index":"B","name":"Tree Array","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["brute force","combinatorics","dp","graphs","math","probabilities","trees"]},{"contestId":1535,"index":"E","name":"Gold Transfer","type":"PROGRAMMING","rating":2200,"tags":["binary search","data structures","dp","greedy","interactive","trees"]},{"contestId":1535,"index":"D","name":"Playoff Tournament","type":"PROGRAMMING","rating":1800,"tags":["data structures","dfs and similar","dp","implementation","trees"]},{"contestId":1534,"index":"H","name":"Lost Nodes","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["constructive algorithms","dp","graphs","interactive","sortings","trees"]},{"contestId":1534,"index":"D","name":"Lost Tree","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","interactive","trees"]},{"contestId":1528,"index":"E","name":"Mashtali and Hagh Trees","type":"PROGRAMMING","points":2750.0,"rating":2900,"tags":["combinatorics","dp","trees"]},{"contestId":1528,"index":"C","name":"Trees of Tranquillity","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1528,"index":"A","name":"Parsa\u0027s Humongous Tree","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["dfs and similar","divide and conquer","dp","greedy","trees"]},{"contestId":1527,"index":"D","name":"MEX Tree","type":"PROGRAMMING","points":2250.0,"rating":2400,"tags":["combinatorics","dfs and similar","implementation","math","trees"]},{"contestId":1523,"index":"C","name":"Compression and Expansion","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["brute force","data structures","greedy","implementation","trees"]},{"contestId":1521,"index":"D","name":"Nastia Plays with a Tree","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["constructive algorithms","data structures","dfs and similar","dp","dsu","greedy","implementation","trees"]},{"contestId":1519,"index":"E","name":"Off by One","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","dfs and similar","geometry","graphs","sortings","trees"]},{"contestId":1517,"index":"F","name":"Reunion","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["combinatorics","dp","trees"]},{"contestId":1515,"index":"F","name":"Phoenix and Earthquake","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1511,"index":"C","name":"Yet Another Card Deck","type":"PROGRAMMING","rating":1100,"tags":["brute force","data structures","implementation","trees"]},{"contestId":1508,"index":"E","name":"Tree Calendar","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["brute force","constructive algorithms","data structures","dfs and similar","sortings","trees"]},{"contestId":1508,"index":"C","name":"Complete the MST","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["bitmasks","brute force","data structures","dfs and similar","dsu","graphs","greedy","trees"]},{"contestId":1499,"index":"F","name":"Diameter Cuts","type":"PROGRAMMING","rating":2400,"tags":["combinatorics","dfs and similar","dp","trees"]},{"contestId":1498,"index":"F","name":"Christmas Game","type":"PROGRAMMING","points":3000.0,"rating":2500,"tags":["bitmasks","data structures","dfs and similar","dp","games","math","trees"]},{"contestId":1495,"index":"F","name":"Squares","type":"PROGRAMMING","points":3250.0,"rating":3300,"tags":["constructive algorithms","data structures","dp","graphs","trees"]},{"contestId":1495,"index":"D","name":"BFS Trees","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["combinatorics","dfs and similar","graphs","math","shortest paths","trees"]},{"contestId":1494,"index":"D","name":"Dogeforces","type":"PROGRAMMING","rating":2300,"tags":["constructive algorithms","data structures","dfs and similar","divide and conquer","dsu","greedy","sortings","trees"]},{"contestId":1491,"index":"H","name":"Yuezheng Ling and Dynamic Tree","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["data structures","trees"]},{"contestId":1491,"index":"E","name":"Fib-tree","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["brute force","dfs and similar","divide and conquer","number theory","trees"]},{"contestId":1486,"index":"F","name":"Pairs of Paths","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["combinatorics","data structures","dfs and similar","dp","trees"]},{"contestId":1485,"index":"E","name":"Move and Swap","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":1482,"index":"H","name":"Exam","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","string suffix structures","trees"]},{"contestId":1481,"index":"F","name":"AB Tree","type":"PROGRAMMING","points":3000.0,"rating":3100,"tags":["dp","greedy","trees"]},{"contestId":1479,"index":"D","name":"Odd Mineral Resource","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["binary search","bitmasks","brute force","data structures","probabilities","trees"]},{"contestId":1467,"index":"E","name":"Distinctive Roots in a Tree","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":1466,"index":"D","name":"13th Labour of Heracles","type":"PROGRAMMING","points":1000.0,"rating":1500,"tags":["data structures","greedy","sortings","trees"]},{"contestId":1464,"index":"F","name":"My Beautiful Madness","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["data structures","trees"]},{"contestId":1463,"index":"E","name":"Plan of Lectures","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","dsu","graphs","implementation","sortings","trees"]},{"contestId":1458,"index":"F","name":"Range Diameter Sum","type":"PROGRAMMING","points":3500.0,"rating":3500,"tags":["data structures","trees"]},{"contestId":1454,"index":"E","name":"Number of Simple Paths","type":"PROGRAMMING","rating":2000,"tags":["combinatorics","dfs and similar","graphs","trees"]},{"contestId":1453,"index":"E","name":"Dog Snacks","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["binary search","dfs and similar","dp","greedy","trees"]},{"contestId":1452,"index":"G","name":"Game On Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1450,"index":"G","name":"Communism","type":"PROGRAMMING","points":3750.0,"rating":3500,"tags":["bitmasks","dp","trees"]},{"contestId":1446,"index":"C","name":"Xor Tree","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["binary search","bitmasks","data structures","divide and conquer","dp","trees"]},{"contestId":1444,"index":"E","name":"Finding the Vertex","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["brute force","dfs and similar","dp","interactive","trees"]},{"contestId":1442,"index":"E","name":"Black, White and Grey Tree","type":"PROGRAMMING","points":1750.0,"rating":3000,"tags":["binary search","constructive algorithms","dfs and similar","dp","greedy","trees"]},{"contestId":1439,"index":"E","name":"Cheat and Win","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["bitmasks","data structures","games","trees"]},{"contestId":1438,"index":"F","name":"Olha and Igor","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["interactive","probabilities","trees"]},{"contestId":1437,"index":"G","name":"Death DBMS","type":"PROGRAMMING","rating":2600,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":1437,"index":"D","name":"Minimal Height Tree","type":"PROGRAMMING","rating":1600,"tags":["graphs","greedy","shortest paths","trees"]},{"contestId":1436,"index":"D","name":"Bandit in a City","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["binary search","dfs and similar","graphs","greedy","trees"]},{"contestId":1427,"index":"F","name":"Boring Card Game","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","greedy","trees"]},{"contestId":1423,"index":"C","name":"Du≈°an\u0027s Railway","type":"PROGRAMMING","rating":3500,"tags":["divide and conquer","graphs","trees"]},{"contestId":1416,"index":"D","name":"Graph and Queries","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","dsu","graphs","implementation","trees"]},{"contestId":1416,"index":"C","name":"XOR Inverse","type":"PROGRAMMING","points":1250.0,"rating":2000,"tags":["bitmasks","data structures","divide and conquer","dp","greedy","math","sortings","strings","trees"]},{"contestId":1413,"index":"F","name":"Roads and Ramen","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","trees"]},{"contestId":1408,"index":"G","name":"Clusterization Counting","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["combinatorics","dp","dsu","fft","graphs","trees"]},{"contestId":1408,"index":"E","name":"Avoid Rainbow Cycles","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dsu","graphs","greedy","sortings","trees"]},{"contestId":1406,"index":"C","name":"Link Cut Centroids","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":1404,"index":"B","name":"Tree Tag","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["dfs and similar","dp","games","trees"]},{"contestId":1403,"index":"B","name":"Spring cleaning","type":"PROGRAMMING","rating":2300,"tags":["*special","data structures","dfs and similar","graphs","trees"]},{"contestId":1402,"index":"C","name":"Star Trek","type":"PROGRAMMING","rating":2600,"tags":["*special","combinatorics","dfs and similar","dp","games","graphs","matrices","trees"]},{"contestId":1401,"index":"D","name":"Maximum Distributed Tree","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["dfs and similar","dp","greedy","implementation","math","number theory","sortings","trees"]},{"contestId":1399,"index":"E2","name":"Weights Division (hard version)","type":"PROGRAMMING","rating":2200,"tags":["binary search","dfs and similar","greedy","sortings","trees","two pointers"]},{"contestId":1399,"index":"E1","name":"Weights Division (easy version)","type":"PROGRAMMING","rating":2000,"tags":["data structures","dfs and similar","greedy","trees"]},{"contestId":1396,"index":"E","name":"Distance Matching","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":1394,"index":"D","name":"Boboniu and Jianghu","type":"PROGRAMMING","points":1750.0,"rating":2800,"tags":["dp","greedy","sortings","trees"]},{"contestId":1391,"index":"E","name":"Pairs of Pairs","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1389,"index":"G","name":"Directing Edges","type":"PROGRAMMING","rating":2800,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":1388,"index":"D","name":"Captain Flint and Treasure","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","graphs","greedy","implementation","trees"]},{"contestId":1388,"index":"C","name":"Uncle Bogdan and Country Happiness","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["dfs and similar","greedy","math","trees"]},{"contestId":1387,"index":"B2","name":"Village (Maximum)","type":"PROGRAMMING","rating":2500,"tags":["*special","dfs and similar","trees"]},{"contestId":1387,"index":"B1","name":"Village (Minimum)","type":"PROGRAMMING","rating":2100,"tags":["*special","dp","greedy","trees"]},{"contestId":1385,"index":"F","name":"Removing Leaves","type":"PROGRAMMING","rating":2300,"tags":["data structures","greedy","implementation","trees"]},{"contestId":1383,"index":"C","name":"String Transformation 2","type":"PROGRAMMING","points":1750.0,"rating":3100,"tags":["bitmasks","dp","graphs","trees"]},{"contestId":1383,"index":"A","name":"String Transformation 1","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["dsu","graphs","greedy","sortings","strings","trees","two pointers"]},{"contestId":1381,"index":"D","name":"The Majestic Brown Tree Snake","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["dfs and similar","dp","greedy","trees","two pointers"]},{"contestId":1380,"index":"E","name":"Merging Towers","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","implementation","trees"]},{"contestId":1379,"index":"E","name":"Inverse Genealogy","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["constructive algorithms","divide and conquer","dp","math","trees"]},{"contestId":1375,"index":"G","name":"Tree Modification","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["brute force","constructive algorithms","dfs and similar","graph matchings","graphs","trees"]},{"contestId":1370,"index":"F2","name":"The Hidden Pair (Hard Version)","type":"PROGRAMMING","points":1250.0,"rating":2700,"tags":["binary search","dfs and similar","graphs","interactive","shortest paths","trees"]},{"contestId":1370,"index":"F1","name":"The Hidden Pair (Easy Version)","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["binary search","dfs and similar","graphs","interactive","shortest paths","trees"]},{"contestId":1369,"index":"D","name":"TediousLee","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["dp","graphs","greedy","math","trees"]},{"contestId":1368,"index":"G","name":"Shifting Dominoes","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["data structures","geometry","graphs","trees"]},{"contestId":1364,"index":"D","name":"Ehab\u0027s Last Corollary","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","graphs","greedy","implementation","trees"]},{"contestId":1363,"index":"E","name":"Tree Shuffling","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":1363,"index":"C","name":"Game On Leaves","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["games","trees"]},{"contestId":1361,"index":"E","name":"James and the Chase","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["dfs and similar","graphs","probabilities","trees"]},{"contestId":1361,"index":"D","name":"Johnny and James","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["greedy","implementation","math","trees"]},{"contestId":1344,"index":"E","name":"Train Tracks","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","trees"]},{"contestId":1340,"index":"D","name":"Nastya and Time Machine","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":1338,"index":"D","name":"Nested Rubber Bands","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","dfs and similar","dp","math","trees"]},{"contestId":1338,"index":"B","name":"Edge Weight Assignment","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["bitmasks","constructive algorithms","dfs and similar","greedy","math","trees"]},{"contestId":1336,"index":"F","name":"Journey","type":"PROGRAMMING","points":3250.0,"rating":3500,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":1336,"index":"A","name":"Linova and Kingdom","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["dfs and similar","dp","greedy","sortings","trees"]},{"contestId":1332,"index":"F","name":"Independent Set","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["dfs and similar","dp","trees"]},{"contestId":1328,"index":"E","name":"Tree Queries","type":"PROGRAMMING","rating":1900,"tags":["dfs and similar","graphs","trees"]},{"contestId":1326,"index":"G","name":"Spiderweb Trees","type":"PROGRAMMING","points":4000.0,"rating":3500,"tags":["dp","geometry","trees"]},{"contestId":1325,"index":"C","name":"Ehab and Path-etic MEXs","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1324,"index":"F","name":"Maximum White Subtree","type":"PROGRAMMING","rating":1800,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":1322,"index":"F","name":"Assigning Fares","type":"PROGRAMMING","points":3000.0,"rating":3500,"tags":["dp","trees"]},{"contestId":1320,"index":"E","name":"Treeland and Viruses","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dfs and similar","dp","shortest paths","trees"]},{"contestId":1311,"index":"E","name":"Construct the Binary Tree","type":"PROGRAMMING","rating":2200,"tags":["brute force","constructive algorithms","trees"]},{"contestId":1307,"index":"F","name":"Cow and Vacation","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["dfs and similar","dsu","trees"]},{"contestId":1305,"index":"D","name":"Kuroni and the Celebration","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["constructive algorithms","dfs and similar","interactive","trees"]},{"contestId":1304,"index":"E","name":"1-Trees and Queries","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dfs and similar","shortest paths","trees"]},{"contestId":1303,"index":"G","name":"Sum of Prefix Sums","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","geometry","trees"]},{"contestId":1299,"index":"D","name":"Around the World","type":"PROGRAMMING","points":1750.0,"rating":3000,"tags":["bitmasks","combinatorics","dfs and similar","dp","graphs","graphs","math","trees"]},{"contestId":1297,"index":"E","name":"Modernization of Treeland","type":"PROGRAMMING","tags":["*special","dfs and similar","trees"]},{"contestId":1296,"index":"F","name":"Berland Beauty","type":"PROGRAMMING","rating":2100,"tags":["constructive algorithms","dfs and similar","greedy","sortings","trees"]},{"contestId":1294,"index":"F","name":"Three Paths on a Tree","type":"PROGRAMMING","rating":2000,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":1292,"index":"D","name":"Chaotic V.","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["dp","graphs","greedy","math","number theory","trees"]},{"contestId":1292,"index":"C","name":"Xenon\u0027s Attack on the Gangs","type":"PROGRAMMING","points":1250.0,"rating":2300,"tags":["combinatorics","dfs and similar","dp","greedy","trees"]},{"contestId":1286,"index":"B","name":"Numbers on Tree","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["constructive algorithms","data structures","dfs and similar","graphs","greedy","trees"]},{"contestId":1285,"index":"E","name":"Delete a Segment","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["brute force","constructive algorithms","data structures","dp","graphs","sortings","trees","two pointers"]},{"contestId":1285,"index":"D","name":"Dr. Evil Underscores","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["bitmasks","brute force","dfs and similar","divide and conquer","dp","greedy","strings","trees"]},{"contestId":1284,"index":"F","name":"New Year and Social Network","type":"PROGRAMMING","points":4000.0,"rating":3200,"tags":["data structures","graph matchings","graphs","math","trees"]},{"contestId":1283,"index":"F","name":"DIY Garland","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","greedy","trees"]},{"contestId":1280,"index":"D","name":"Miss Punyverse","type":"PROGRAMMING","points":1750.0,"rating":2500,"tags":["dp","greedy","trees"]},{"contestId":1280,"index":"C","name":"Jeremy Bearimy","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dfs and similar","graphs","greedy","trees"]},{"contestId":1278,"index":"E","name":"Tests for problem D","type":"PROGRAMMING","rating":2200,"tags":["constructive algorithms","dfs and similar","divide and conquer","trees"]},{"contestId":1278,"index":"D","name":"Segment Tree","type":"PROGRAMMING","rating":2100,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1276,"index":"D","name":"Tree Elimination","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["dp","trees"]},{"contestId":1263,"index":"F","name":"Economic Difficulties","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dfs and similar","dp","flows","graphs","trees"]},{"contestId":1260,"index":"F","name":"Colored Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","trees"]},{"contestId":1254,"index":"E","name":"Send Tree to Charlie","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["combinatorics","dfs and similar","dsu","trees"]},{"contestId":1254,"index":"D","name":"Tree Queries","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","probabilities","trees"]},{"contestId":1253,"index":"F","name":"Cheap Robot","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["binary search","dsu","graphs","shortest paths","trees"]},{"contestId":1252,"index":"F","name":"Regular Forestation","type":"PROGRAMMING","rating":2400,"tags":["hashing","trees"]},{"contestId":1252,"index":"D","name":"Find String in a Grid","type":"PROGRAMMING","rating":3000,"tags":["data structures","dp","strings","trees"]},{"contestId":1252,"index":"B","name":"Cleaning Robots","type":"PROGRAMMING","rating":2300,"tags":["dp","trees"]},{"contestId":1249,"index":"F","name":"Maximum Weight Subset","type":"PROGRAMMING","rating":2200,"tags":["dp","trees"]},{"contestId":1245,"index":"D","name":"Shichikuji and Power Grid","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["dsu","graphs","greedy","shortest paths","trees"]},{"contestId":1244,"index":"D","name":"Paint the Tree","type":"PROGRAMMING","points":1750.0,"rating":1800,"tags":["brute force","constructive algorithms","dp","graphs","implementation","trees"]},{"contestId":1238,"index":"F","name":"The Maximum Subtree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":1228,"index":"F","name":"One Node is Gone","type":"PROGRAMMING","points":2750.0,"rating":2500,"tags":["constructive algorithms","implementation","trees"]},{"contestId":1225,"index":"F","name":"Tree Factory","type":"PROGRAMMING","points":3250.0,"rating":2500,"tags":["constructive algorithms","greedy","trees"]},{"contestId":1223,"index":"E","name":"Paint the Tree","type":"PROGRAMMING","points":2250.0,"rating":2100,"tags":["dp","sortings","trees"]},{"contestId":1220,"index":"E","name":"Tourism","type":"PROGRAMMING","points":2750.0,"rating":2200,"tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"contestId":1217,"index":"F","name":"Forced Online Queries Problem","type":"PROGRAMMING","rating":2600,"tags":["data structures","divide and conquer","dsu","graphs","trees"]},{"contestId":1214,"index":"H","name":"Tiles Placement","type":"PROGRAMMING","points":3500.0,"rating":2800,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":1214,"index":"E","name":"Petya and Construction Set","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["constructive algorithms","graphs","math","sortings","trees"]},{"contestId":1213,"index":"G","name":"Path Queries","type":"PROGRAMMING","rating":1800,"tags":["divide and conquer","dsu","graphs","sortings","trees"]},{"contestId":1211,"index":"H","name":"Road Repair in Treeland","type":"PROGRAMMING","rating":3100,"tags":["*special","binary search","dp","trees"]},{"contestId":1211,"index":"G","name":"King\u0027s Path","type":"PROGRAMMING","rating":2500,"tags":["*special","math","trees"]},{"contestId":1210,"index":"C","name":"Kamil and Making a Stream","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["math","number theory","trees"]},{"contestId":1209,"index":"F","name":"Koala and Notebook","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["data structures","dfs and similar","graphs","shortest paths","strings","trees"]},{"contestId":1208,"index":"H","name":"Red Blue Tree","type":"PROGRAMMING","points":3750.0,"rating":3500,"tags":["data structures","implementation","trees"]},{"contestId":1207,"index":"G","name":"Indie Album","type":"PROGRAMMING","rating":2700,"tags":["data structures","dfs and similar","hashing","string suffix structures","strings","trees"]},{"contestId":1205,"index":"D","name":"Almost All","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["constructive algorithms","trees"]},{"contestId":1193,"index":"B","name":"Magic Tree","type":"PROGRAMMING","tags":["*special","data structures","dp","trees"]},{"contestId":1192,"index":"B","name":"Dynamic Diameter","type":"PROGRAMMING","tags":["*special","data structures","dfs and similar","divide and conquer","trees"]},{"contestId":1188,"index":"A2","name":"Add on a Tree: Revolution","type":"PROGRAMMING","points":750.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","implementation","trees"]},{"contestId":1188,"index":"A1","name":"Add on a Tree","type":"PROGRAMMING","points":250.0,"rating":1600,"tags":["trees"]},{"contestId":1187,"index":"E","name":"Tree Painting","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","dp","trees"]},{"contestId":1184,"index":"E3","name":"Daleks\u0027 Invasion (hard)","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":1184,"index":"E2","name":"Daleks\u0027 Invasion (medium)","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","graphs","shortest paths","trees"]},{"contestId":1184,"index":"E1","name":"Daleks\u0027 Invasion (easy)","type":"PROGRAMMING","rating":1900,"tags":["graphs","trees"]},{"contestId":1182,"index":"D","name":"Complete Mirror","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["constructive algorithms","dfs and similar","dp","hashing","implementation","trees"]},{"contestId":1181,"index":"D","name":"Irrigation","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","data structures","implementation","sortings","trees","two pointers"]},{"contestId":1179,"index":"D","name":"Fedor Runs for President","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dp","trees"]},{"contestId":1179,"index":"C","name":"Serge and Dining Room","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["binary search","data structures","graph matchings","greedy","implementation","math","trees"]},{"contestId":1176,"index":"E","name":"Cover it!","type":"PROGRAMMING","rating":1700,"tags":["dfs and similar","dsu","graphs","shortest paths","trees"]},{"contestId":1175,"index":"E","name":"Minimal Segment Cover","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","divide and conquer","dp","greedy","implementation","trees"]},{"contestId":1174,"index":"F","name":"Ehab and the Big Finale","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["constructive algorithms","divide and conquer","graphs","implementation","interactive","trees"]},{"contestId":1172,"index":"B","name":"Nauuo and Circle","type":"PROGRAMMING","points":750.0,"rating":1900,"tags":["combinatorics","dfs and similar","dp","trees"]},{"contestId":1168,"index":"D","name":"Anagram Paths","type":"PROGRAMMING","points":2000.0,"rating":3000,"tags":["dp","implementation","trees"]},{"contestId":1158,"index":"E","name":"Strange device","type":"PROGRAMMING","points":2250.0,"rating":3400,"tags":["binary search","interactive","math","trees"]},{"contestId":1156,"index":"D","name":"0-1-Tree","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","divide and conquer","dp","dsu","trees"]},{"contestId":1153,"index":"D","name":"Serval and Rooted Tree","type":"PROGRAMMING","points":1750.0,"rating":1900,"tags":["binary search","dfs and similar","dp","greedy","trees"]},{"contestId":1152,"index":"D","name":"Neko and Aki\u0027s Prank","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["dp","greedy","trees"]},{"contestId":1149,"index":"C","name":"Tree Generator‚Ñ¢","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","implementation","trees"]},{"contestId":1146,"index":"F","name":"Leaf Partition","type":"PROGRAMMING","points":3250.0,"rating":2500,"tags":["dp","trees"]},{"contestId":1143,"index":"C","name":"Queen","type":"PROGRAMMING","points":1000.0,"rating":1400,"tags":["dfs and similar","trees"]},{"contestId":1142,"index":"B","name":"Lynyrd Skynyrd","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["data structures","dfs and similar","dp","math","trees"]},{"contestId":1141,"index":"G","name":"Privatization of Roads in Treeland","type":"PROGRAMMING","rating":1900,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1140,"index":"G","name":"Double Tree","type":"PROGRAMMING","rating":2700,"tags":["data structures","divide and conquer","shortest paths","trees"]},{"contestId":1139,"index":"C","name":"Edgy Trees","type":"PROGRAMMING","points":1750.0,"rating":1500,"tags":["dfs and similar","dsu","graphs","math","trees"]},{"contestId":1137,"index":"F","name":"Matches Are Not a Child\u0027s Play ","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["data structures","trees"]},{"contestId":1132,"index":"G","name":"Greedy Subsequences","type":"PROGRAMMING","rating":2400,"tags":["data structures","dp","trees"]},{"contestId":1129,"index":"E","name":"Legendary Tree","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["binary search","interactive","trees"]},{"contestId":1120,"index":"D","name":"Power Tree","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["dfs and similar","dp","dsu","graphs","greedy","trees"]},{"contestId":1119,"index":"F","name":"Niyaz and Small Degrees","type":"PROGRAMMING","points":3250.0,"rating":3400,"tags":["data structures","dp","trees"]},{"contestId":1118,"index":"F2","name":"Tree Cutting (Hard Version)","type":"PROGRAMMING","rating":2700,"tags":["combinatorics","dfs and similar","dp","trees"]},{"contestId":1118,"index":"F1","name":"Tree Cutting (Easy Version)","type":"PROGRAMMING","rating":1800,"tags":["dfs and similar","trees"]},{"contestId":1111,"index":"E","name":"Tree","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["data structures","dfs and similar","dp","graphs","trees"]},{"contestId":1110,"index":"G","name":"Tree-Tac-Toe ","type":"PROGRAMMING","points":3500.0,"rating":3100,"tags":["constructive algorithms","games","trees"]},{"contestId":1110,"index":"F","name":"Nearest Leaf","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":1109,"index":"F","name":"Sasha and Algorithm of Silence\u0027s Sounds","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["data structures","trees"]},{"contestId":1109,"index":"D","name":"Sasha and Interesting Fact from Graph Theory","type":"PROGRAMMING","points":1750.0,"rating":2400,"tags":["brute force","combinatorics","dp","math","trees"]},{"contestId":1101,"index":"D","name":"GCD Counting","type":"PROGRAMMING","rating":2000,"tags":["data structures","dfs and similar","dp","number theory","trees"]},{"contestId":1099,"index":"F","name":"Cookies","type":"PROGRAMMING","points":2250.0,"rating":2400,"tags":["binary search","data structures","dfs and similar","dp","games","trees"]},{"contestId":1098,"index":"C","name":"Construct a tree","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["binary search","constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":1098,"index":"A","name":"Sum in the tree","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1097,"index":"G","name":"Vladislav and a Great Legend","type":"PROGRAMMING","points":3500.0,"rating":3000,"tags":["combinatorics","dp","trees"]},{"contestId":1092,"index":"F","name":"Tree with Maximum Cost","type":"PROGRAMMING","rating":1900,"tags":["dfs and similar","dp","trees"]},{"contestId":1092,"index":"E","name":"Minimal Diameter Forest","type":"PROGRAMMING","rating":2000,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":1088,"index":"F","name":"Ehab and a weird weight formula","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","trees"]},{"contestId":1088,"index":"E","name":"Ehab and a component choosing problem","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["dp","greedy","math","trees"]},{"contestId":1085,"index":"D","name":"Minimum Diameter Tree","type":"PROGRAMMING","points":1750.0,"rating":1700,"tags":["constructive algorithms","implementation","trees"]},{"contestId":1083,"index":"C","name":"Max Mex","type":"PROGRAMMING","points":1500.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":1083,"index":"A","name":"The Fair Nut and the Best Path","type":"PROGRAMMING","points":500.0,"rating":1800,"tags":["data structures","dp","trees"]},{"contestId":1082,"index":"F","name":"Speed Dial","type":"PROGRAMMING","rating":2800,"tags":["dp","strings","trees"]},{"contestId":1076,"index":"E","name":"Vasya and a Tree","type":"PROGRAMMING","rating":1900,"tags":["data structures","trees"]},{"contestId":1073,"index":"F","name":"Choosing Two Paths","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":1067,"index":"E","name":"Random Forest Rank","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["dp","graph matchings","math","trees"]},{"contestId":1065,"index":"F","name":"Up and Down the Tree","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","dp","trees"]},{"contestId":1062,"index":"E","name":"Company","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"contestId":1060,"index":"E","name":"Sergey and Subway","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["dfs and similar","dp","trees"]},{"contestId":1059,"index":"E","name":"Split the Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","dp","greedy","trees"]},{"contestId":1057,"index":"A","name":"Bmail Computer Network","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["*special","dfs and similar","trees"]},{"contestId":1056,"index":"D","name":"Decorate Apple Tree","type":"PROGRAMMING","points":2000.0,"rating":1600,"tags":["constructive algorithms","dfs and similar","dp","graphs","greedy","sortings","trees"]},{"contestId":1055,"index":"F","name":"Tree and XOR","type":"PROGRAMMING","points":3500.0,"rating":2900,"tags":["strings","trees"]},{"contestId":1053,"index":"E","name":"Euler tour","type":"PROGRAMMING","points":2500.0,"rating":3500,"tags":["constructive algorithms","trees"]},{"contestId":1051,"index":"F","name":"The Shortest Statement","type":"PROGRAMMING","rating":2400,"tags":["graphs","shortest paths","trees"]},{"contestId":1045,"index":"J","name":"Moonwalk challenge","type":"PROGRAMMING","rating":2600,"tags":["data structures","strings","trees"]},{"contestId":1045,"index":"D","name":"Interstellar battle","type":"PROGRAMMING","rating":2200,"tags":["math","probabilities","trees"]},{"contestId":1045,"index":"C","name":"Hyperspace Highways","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","graphs","trees"]},{"contestId":1045,"index":"A","name":"Last chance","type":"PROGRAMMING","rating":2500,"tags":["data structures","flows","graph matchings","graphs","trees"]},{"contestId":1044,"index":"B","name":"Intersecting Subtrees","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["dfs and similar","interactive","trees"]},{"contestId":1042,"index":"F","name":"Leaf Sets","type":"PROGRAMMING","points":2750.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","graphs","greedy","sortings","trees"]},{"contestId":1039,"index":"D","name":"You Are Given a Tree","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["data structures","dp","trees"]},{"contestId":1037,"index":"D","name":"Valid BFS?","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["dfs and similar","graphs","shortest paths","trees"]},{"contestId":1034,"index":"C","name":"Region Separation","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["combinatorics","dp","number theory","trees"]},{"contestId":1032,"index":"F","name":"Vasya and Maximum Matching","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["dp","trees"]},{"contestId":1025,"index":"D","name":"Recovering BST","type":"PROGRAMMING","points":1750.0,"rating":2100,"tags":["brute force","dp","math","number theory","trees"]},{"contestId":1023,"index":"G","name":"Pisces","type":"PROGRAMMING","points":4000.0,"rating":3400,"tags":["data structures","flows","trees"]},{"contestId":1023,"index":"F","name":"Mobile Phone Network","type":"PROGRAMMING","points":3250.0,"rating":2600,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":1019,"index":"E","name":"Raining season","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["data structures","divide and conquer","trees"]},{"contestId":1016,"index":"F","name":"Road Projects","type":"PROGRAMMING","rating":2600,"tags":["dfs and similar","dp","trees"]},{"contestId":1010,"index":"F","name":"Tree","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["fft","graphs","trees"]},{"contestId":1010,"index":"D","name":"Mars rover","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dfs and similar","graphs","implementation","trees"]},{"contestId":1009,"index":"F","name":"Dominant Indices","type":"PROGRAMMING","rating":2300,"tags":["data structures","dsu","trees"]},{"contestId":1007,"index":"D","name":"Ants","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["2-sat","data structures","trees"]},{"contestId":1006,"index":"E","name":"Military Problem","type":"PROGRAMMING","rating":1600,"tags":["dfs and similar","graphs","trees"]},{"contestId":1004,"index":"E","name":"Sonya and Ice Cream","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["binary search","data structures","dp","greedy","shortest paths","trees"]},{"contestId":1000,"index":"G","name":"Two-Paths","type":"PROGRAMMING","rating":2700,"tags":["data structures","dp","trees"]},{"contestId":1000,"index":"E","name":"We Need More Bosses","type":"PROGRAMMING","rating":2100,"tags":["dfs and similar","graphs","trees"]},{"contestId":997,"index":"D","name":"Cycles in product","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["combinatorics","divide and conquer","trees"]},{"contestId":995,"index":"F","name":"Cowmpany Cowmpensation","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["combinatorics","dp","math","trees"]},{"contestId":990,"index":"G","name":"GCD Counting","type":"PROGRAMMING","rating":2400,"tags":["divide and conquer","dp","dsu","number theory","trees"]},{"contestId":990,"index":"F","name":"Flow Control","type":"PROGRAMMING","rating":2400,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":986,"index":"E","name":"Prince\u0027s Problem","type":"PROGRAMMING","points":2750.0,"rating":2800,"tags":["brute force","data structures","math","number theory","trees"]},{"contestId":983,"index":"E","name":"NN country","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","data structures","trees"]},{"contestId":982,"index":"D","name":"Shark","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["brute force","data structures","dsu","trees"]},{"contestId":982,"index":"C","name":"Cut \u0027em all!","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["dfs and similar","dp","graphs","greedy","trees"]},{"contestId":981,"index":"C","name":"Useful Decomposition","type":"PROGRAMMING","points":1250.0,"rating":1400,"tags":["implementation","trees"]},{"contestId":980,"index":"F","name":"Cactus to Tree","type":"PROGRAMMING","points":3000.0,"rating":2900,"tags":["dp","graphs","trees"]},{"contestId":980,"index":"E","name":"The Number Games","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","greedy","trees"]},{"contestId":979,"index":"D","name":"Kuro and GCD and XOR and SUM","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["binary search","bitmasks","brute force","data structures","dp","dsu","greedy","math","number theory","strings","trees"]},{"contestId":979,"index":"C","name":"Kuro and Walking Route","type":"PROGRAMMING","points":1250.0,"rating":1600,"tags":["dfs and similar","trees"]},{"contestId":965,"index":"E","name":"Short Code","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dp","greedy","strings","trees"]},{"contestId":963,"index":"B","name":"Destruction of a Tree","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","dp","greedy","trees"]},{"contestId":962,"index":"G","name":"Visible Black Areas","type":"PROGRAMMING","rating":2800,"tags":["data structures","dsu","geometry","trees"]},{"contestId":962,"index":"F","name":"Simple Cycles Edges","type":"PROGRAMMING","rating":2400,"tags":["dfs and similar","graphs","trees"]},{"contestId":960,"index":"H","name":"Santa\u0027s Gift","type":"PROGRAMMING","points":3500.0,"rating":3100,"tags":["data structures","trees"]},{"contestId":960,"index":"E","name":"Alternating Tree","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["combinatorics","dfs and similar","divide and conquer","dp","probabilities","trees"]},{"contestId":960,"index":"D","name":"Full Binary Tree Queries","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["brute force","implementation","trees"]},{"contestId":959,"index":"C","name":"Mahmoud and Ehab and the wrong algorithm","type":"PROGRAMMING","points":1250.0,"rating":1500,"tags":["constructive algorithms","trees"]},{"contestId":958,"index":"B2","name":"Maximum Control (medium)","type":"PROGRAMMING","rating":2200,"tags":["data structures","dfs and similar","graphs","greedy","trees"]},{"contestId":955,"index":"F","name":"Heaps","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["dp","trees"]},{"contestId":936,"index":"E","name":"Iqea","type":"PROGRAMMING","points":2500.0,"rating":3400,"tags":["data structures","dfs and similar","divide and conquer","dsu","shortest paths","trees"]},{"contestId":935,"index":"E","name":"Fafa and Ancient Mathematics","type":"PROGRAMMING","points":2250.0,"rating":2300,"tags":["dfs and similar","dp","trees"]},{"contestId":932,"index":"D","name":"Tree","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["binary search","dp","trees"]},{"contestId":930,"index":"A","name":"Peculiar apple-tree","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["dfs and similar","graphs","trees"]},{"contestId":928,"index":"D","name":"Autocompletion","type":"PROGRAMMING","points":2250.0,"rating":1900,"tags":["*special","strings","trees"]},{"contestId":925,"index":"E","name":"May Holidays","type":"PROGRAMMING","points":2750.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":923,"index":"F","name":"Public Service","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["constructive algorithms","graphs","trees"]},{"contestId":923,"index":"C","name":"Perfect Security","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["data structures","greedy","strings","trees"]},{"contestId":917,"index":"E","name":"Upside Down","type":"PROGRAMMING","points":2750.0,"rating":3400,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":917,"index":"D","name":"Stranger Trees","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["dp","math","matrices","trees"]},{"contestId":916,"index":"E","name":"Jamie and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","trees"]},{"contestId":916,"index":"D","name":"Jamie and To-do List","type":"PROGRAMMING","points":2250.0,"rating":2200,"tags":["data structures","interactive","trees"]},{"contestId":915,"index":"F","name":"Imbalance Value of a Tree","type":"PROGRAMMING","rating":2400,"tags":["data structures","dsu","graphs","trees"]},{"contestId":914,"index":"H","name":"Ember and Storm\u0027s Tree Game","type":"PROGRAMMING","points":3750.0,"rating":3400,"tags":["combinatorics","dp","games","trees"]},{"contestId":914,"index":"E","name":"Palindromes in a Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["bitmasks","data structures","divide and conquer","trees"]},{"contestId":913,"index":"B","name":"Christmas Spruce","type":"PROGRAMMING","points":750.0,"rating":1200,"tags":["implementation","trees"]},{"contestId":911,"index":"F","name":"Tree Destruction","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":901,"index":"A","name":"Hashing Trees","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["constructive algorithms","trees"]},{"contestId":894,"index":"D","name":"Ralph And His Tour in Binary Country","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["brute force","data structures","trees"]},{"contestId":893,"index":"F","name":"Subtree Minimum Query","type":"PROGRAMMING","rating":2300,"tags":["data structures","trees"]},{"contestId":891,"index":"D","name":"Sloth","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["dfs and similar","dp","graph matchings","trees"]},{"contestId":886,"index":"C","name":"Petya and Catacombs","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["dsu","greedy","implementation","trees"]},{"contestId":877,"index":"E","name":"Danil and a Part-time Job","type":"PROGRAMMING","points":2250.0,"rating":2000,"tags":["bitmasks","data structures","trees"]},{"contestId":871,"index":"E","name":"Restore the Tree","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["graphs","greedy","trees"]},{"contestId":870,"index":"E","name":"Points, Lines and Ready-made Titles","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":868,"index":"E","name":"Policeman and a Tree","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["dp","graphs","trees"]},{"contestId":864,"index":"F","name":"Cities Excursions","type":"PROGRAMMING","points":3000.0,"rating":2700,"tags":["dfs and similar","graphs","trees"]},{"contestId":862,"index":"B","name":"Mahmoud and Ehab and the bipartiteness","type":"PROGRAMMING","points":1000.0,"rating":1300,"tags":["dfs and similar","graphs","trees"]},{"contestId":860,"index":"E","name":"Arkady and a Nobody-men","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["data structures","dfs and similar","trees"]},{"contestId":859,"index":"E","name":"Desk Disorder","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["combinatorics","dfs and similar","dsu","graphs","trees"]},{"contestId":859,"index":"D","name":"Third Month Insanity","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dp","probabilities","trees"]},{"contestId":856,"index":"D","name":"Masha and Cactus","type":"PROGRAMMING","rating":2400,"tags":["dp","trees"]},{"contestId":856,"index":"B","name":"Similar Words","type":"PROGRAMMING","rating":2300,"tags":["dp","hashing","strings","trees"]},{"contestId":855,"index":"G","name":"Harry Vs Voldemort","type":"PROGRAMMING","points":3500.0,"rating":3300,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":855,"index":"D","name":"Rowena Ravenclaw\u0027s Diadem","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["trees"]},{"contestId":855,"index":"C","name":"Helga Hufflepuff\u0027s Cup","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dp","trees"]},{"contestId":852,"index":"I","name":"Dating","type":"PROGRAMMING","rating":2300,"tags":["brute force","dfs and similar","graphs","trees"]},{"contestId":847,"index":"L","name":"Berland SU Computer Network","type":"PROGRAMMING","rating":2400,"tags":["constructive algorithms","dfs and similar","graphs","hashing","trees"]},{"contestId":846,"index":"E","name":"Chemistry in Berland","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","greedy","trees"]},{"contestId":843,"index":"C","name":"Upgrading Tree","type":"PROGRAMMING","points":1750.0,"rating":2600,"tags":["constructive algorithms","dfs and similar","graphs","math","trees"]},{"contestId":842,"index":"E","name":"Nikita and game","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["binary search","dfs and similar","divide and conquer","graphs","trees"]},{"contestId":842,"index":"C","name":"Ilya And The Tree","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dfs and similar","graphs","math","number theory","trees"]},{"contestId":840,"index":"E","name":"In a Trap","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["trees"]},{"contestId":839,"index":"C","name":"Journey","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["dfs and similar","dp","graphs","probabilities","trees"]},{"contestId":838,"index":"B","name":"Diverging Directions","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","trees"]},{"contestId":835,"index":"F","name":"Roads in the Kingdom","type":"PROGRAMMING","points":2250.0,"rating":2500,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":833,"index":"D","name":"Red-Black Cobweb","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":832,"index":"D","name":"Misha, Grisha and Underground","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["dfs and similar","graphs","trees"]},{"contestId":830,"index":"E","name":"Perpetual Motion Machine","type":"PROGRAMMING","points":2250.0,"rating":3100,"tags":["constructive algorithms","dp","graphs","implementation","math","trees"]},{"contestId":830,"index":"D","name":"Singer House","type":"PROGRAMMING","points":2250.0,"rating":2800,"tags":["combinatorics","dp","graphs","trees"]},{"contestId":827,"index":"D","name":"Best Edge Weight","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":827,"index":"B","name":"High Load","type":"PROGRAMMING","points":750.0,"rating":1800,"tags":["constructive algorithms","greedy","implementation","trees"]},{"contestId":825,"index":"G","name":"Tree Queries","type":"PROGRAMMING","rating":2500,"tags":["dfs and similar","graphs","trees"]},{"contestId":822,"index":"F","name":"Madness","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":821,"index":"C","name":"Okabe and Boxes","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["data structures","greedy","trees"]},{"contestId":817,"index":"F","name":"MEX Queries","type":"PROGRAMMING","rating":2300,"tags":["binary search","data structures","trees"]},{"contestId":817,"index":"E","name":"Choosing The Commander","type":"PROGRAMMING","rating":2000,"tags":["bitmasks","data structures","trees"]},{"contestId":815,"index":"C","name":"Karen and Supermarket","type":"PROGRAMMING","points":1500.0,"rating":2400,"tags":["brute force","dp","trees"]},{"contestId":814,"index":"D","name":"An overnight dance in discotheque","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["dfs and similar","dp","geometry","greedy","trees"]},{"contestId":812,"index":"E","name":"Sagheer and Apple Tree","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["games","trees"]},{"contestId":812,"index":"D","name":"Sagheer and Kindergarten","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["dfs and similar","graphs","implementation","trees"]},{"contestId":809,"index":"E","name":"Surprise me!","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["divide and conquer","math","number theory","trees"]},{"contestId":804,"index":"D","name":"Expected diameter of a tree","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["binary search","brute force","dfs and similar","dp","sortings","trees"]},{"contestId":802,"index":"L","name":"Send the Fool Further! (hard)","type":"PROGRAMMING","rating":2400,"tags":["dfs and similar","dp","math","trees"]},{"contestId":802,"index":"K","name":"Send the Fool Further! (medium)","type":"PROGRAMMING","rating":2100,"tags":["dp","trees"]},{"contestId":802,"index":"J","name":"Send the Fool Further! (easy)","type":"PROGRAMMING","rating":1400,"tags":["dfs and similar","graphs","trees"]},{"contestId":796,"index":"D","name":"Police Stations","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","dp","graphs","shortest paths","trees"]},{"contestId":796,"index":"C","name":"Bank Hacking","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["constructive algorithms","data structures","dp","trees"]},{"contestId":793,"index":"E","name":"Problem of offices","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["constructive algorithms","dfs and similar","dp","trees"]},{"contestId":792,"index":"D","name":"Paths in a Complete Binary Tree","type":"PROGRAMMING","rating":1900,"tags":["bitmasks","trees"]},{"contestId":786,"index":"E","name":"ALT","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","flows","graphs","trees"]},{"contestId":786,"index":"D","name":"Rap God","type":"PROGRAMMING","points":2000.0,"rating":3400,"tags":["data structures","dfs and similar","hashing","strings","trees"]},{"contestId":780,"index":"C","name":"Andryusha and Colored Balloons","type":"PROGRAMMING","points":1250.0,"rating":1600,"tags":["dfs and similar","graphs","greedy","trees"]},{"contestId":778,"index":"C","name":"Peterson Polyglot","type":"PROGRAMMING","points":1500.0,"rating":2500,"tags":["brute force","dfs and similar","dsu","hashing","strings","trees"]},{"contestId":776,"index":"F","name":"Sherlock\u0027s bet to Moriarty","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","data structures","divide and conquer","geometry","graphs","implementation","trees"]},{"contestId":772,"index":"E","name":"Verifying Kingdom","type":"PROGRAMMING","points":2250.0,"rating":3200,"tags":["binary search","divide and conquer","interactive","trees"]},{"contestId":771,"index":"C","name":"Bear and Tree Jumps","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["dfs and similar","dp","trees"]},{"contestId":767,"index":"C","name":"Garland","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["dfs and similar","graphs","greedy","trees"]},{"contestId":766,"index":"E","name":"Mahmoud and a xor trip","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["bitmasks","constructive algorithms","data structures","dfs and similar","dp","math","trees"]},{"contestId":765,"index":"E","name":"Tree Folding","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["dfs and similar","dp","greedy","implementation","trees"]},{"contestId":763,"index":"D","name":"Timofey and a flat tree","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","graphs","hashing","shortest paths","trees"]},{"contestId":763,"index":"A","name":"Timofey and a tree","type":"PROGRAMMING","points":500.0,"rating":1600,"tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"contestId":762,"index":"F","name":"Tree nesting","type":"PROGRAMMING","rating":2800,"tags":["combinatorics","graphs","trees"]},{"contestId":761,"index":"E","name":"Dasha and Puzzle","type":"PROGRAMMING","points":2500.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","greedy","trees"]},{"contestId":758,"index":"E","name":"Broken Tree","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["dfs and similar","dp","graphs","greedy","trees"]},{"contestId":757,"index":"G","name":"Can Bash Save the Day?","type":"PROGRAMMING","points":3500.0,"rating":3400,"tags":["data structures","divide and conquer","graphs","trees"]},{"contestId":755,"index":"C","name":"PolandBall and Forest","type":"PROGRAMMING","points":1500.0,"rating":1300,"tags":["dfs and similar","dsu","graphs","interactive","trees"]},{"contestId":754,"index":"E","name":"Dasha and cyclic table","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["bitmasks","brute force","fft","strings","trees"]},{"contestId":750,"index":"F","name":"New Year and Finding Roots","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["constructive algorithms","implementation","interactive","trees"]},{"contestId":748,"index":"F","name":"Santa Clauses and a Soccer Championship","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":746,"index":"G","name":"New Roads","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["constructive algorithms","graphs","trees"]},{"contestId":743,"index":"D","name":"Chloe and pleasant prizes","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":741,"index":"D","name":"Arpa‚Äôs letter-marked tree and Mehrdad‚Äôs Dokhtar-kosh paths","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","dfs and similar","trees"]},{"contestId":739,"index":"B","name":"Alyona and a tree","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["binary search","data structures","dfs and similar","graphs","trees"]},{"contestId":735,"index":"E","name":"Ostap and Tree","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["dp","trees"]},{"contestId":734,"index":"E","name":"Anton and Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["dfs and similar","dp","trees"]},{"contestId":733,"index":"F","name":"Drivers Dissatisfaction","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["data structures","dsu","graphs","trees"]},{"contestId":724,"index":"G","name":"Xor-matic Number of the Graph","type":"PROGRAMMING","points":2500.0,"rating":2600,"tags":["bitmasks","graphs","math","number theory","trees"]},{"contestId":724,"index":"F","name":"Uniformly Branched Trees","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["combinatorics","dp","trees"]},{"contestId":722,"index":"D","name":"Generating Sets","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["binary search","data structures","dfs and similar","greedy","strings","trees"]},{"contestId":718,"index":"D","name":"Andrew and Chemistry","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["dp","hashing","trees"]},{"contestId":715,"index":"C","name":"Digit Tree","type":"PROGRAMMING","points":1500.0,"rating":2700,"tags":["dfs and similar","divide and conquer","dsu","trees"]},{"contestId":708,"index":"C","name":"Centroids","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["data structures","dfs and similar","dp","graphs","greedy","trees"]},{"contestId":706,"index":"D","name":"Vasiliy\u0027s Multiset","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["binary search","bitmasks","data structures","trees"]},{"contestId":704,"index":"E","name":"Iron Man","type":"PROGRAMMING","points":2500.0,"rating":3300,"tags":["data structures","geometry","trees"]},{"contestId":700,"index":"B","name":"Connecting Universities","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":698,"index":"B","name":"Fix a Tree","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["constructive algorithms","dfs and similar","dsu","graphs","trees"]},{"contestId":696,"index":"E","name":"...Wait for it...","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["data structures","dsu","trees"]},{"contestId":696,"index":"B","name":"Puzzles","type":"PROGRAMMING","points":1000.0,"rating":1700,"tags":["dfs and similar","math","probabilities","trees"]},{"contestId":696,"index":"A","name":"Lorenzo Von Matterhorn","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["brute force","data structures","implementation","trees"]},{"contestId":690,"index":"F3","name":"Tree of Life (hard)","type":"PROGRAMMING","rating":3200,"tags":["trees"]},{"contestId":690,"index":"F2","name":"Tree of Life (medium)","type":"PROGRAMMING","rating":2700,"tags":["constructive algorithms","hashing","trees"]},{"contestId":690,"index":"C3","name":"Brain Network (hard)","type":"PROGRAMMING","rating":2200,"tags":["trees"]},{"contestId":690,"index":"C2","name":"Brain Network (medium)","type":"PROGRAMMING","rating":1500,"tags":["dfs and similar","graphs","trees"]},{"contestId":685,"index":"B","name":"Kay and Snowflake","type":"PROGRAMMING","points":1250.0,"rating":1900,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":682,"index":"C","name":"Alyona and the Tree","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":681,"index":"D","name":"Gifts by the List","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":675,"index":"D","name":"Tree Construction","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","trees"]},{"contestId":665,"index":"E","name":"Beautiful Subarrays","type":"PROGRAMMING","rating":2100,"tags":["data structures","divide and conquer","strings","trees"]},{"contestId":653,"index":"E","name":"Bear and Forgotten Tree 2","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":652,"index":"E","name":"Pursuit For Artifacts","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":650,"index":"E","name":"Clockwork Bomb","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dfs and similar","dsu","greedy","trees"]},{"contestId":643,"index":"E","name":"Bear and Destroying Subtrees","type":"PROGRAMMING","points":2250.0,"rating":2700,"tags":["dp","math","probabilities","trees"]},{"contestId":639,"index":"F","name":"Bear and Chemistry","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":639,"index":"B","name":"Bear and Forgotten Tree 3","type":"PROGRAMMING","points":750.0,"rating":1600,"tags":["constructive algorithms","graphs","trees"]},{"contestId":638,"index":"C","name":"Road Improvement","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["*special","dfs and similar","graphs","greedy","trees"]},{"contestId":633,"index":"F","name":"The Chocolate Spree","type":"PROGRAMMING","points":2750.0,"rating":2600,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":632,"index":"F","name":"Magic Matrix","type":"PROGRAMMING","rating":2400,"tags":["brute force","divide and conquer","graphs","matrices","trees"]},{"contestId":629,"index":"E","name":"Famil Door and Roads","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["combinatorics","data structures","dfs and similar","dp","probabilities","trees"]},{"contestId":627,"index":"F","name":"Island Puzzle","type":"PROGRAMMING","points":3000.0,"rating":3400,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":627,"index":"D","name":"Preorder Test","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["binary search","dfs and similar","dp","graphs","greedy","trees"]},{"contestId":622,"index":"E","name":"Ants in Leaves","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","greedy","sortings","trees"]},{"contestId":620,"index":"F","name":"Xors on Segments","type":"PROGRAMMING","rating":2800,"tags":["data structures","strings","trees"]},{"contestId":620,"index":"E","name":"New Year Tree","type":"PROGRAMMING","rating":2100,"tags":["bitmasks","data structures","trees"]},{"contestId":618,"index":"D","name":"Hamiltonian Spanning Tree","type":"PROGRAMMING","points":1750.0,"rating":2200,"tags":["dfs and similar","dp","graph matchings","greedy","trees"]},{"contestId":615,"index":"C","name":"Running Track","type":"PROGRAMMING","points":1750.0,"rating":2000,"tags":["dp","greedy","strings","trees"]},{"contestId":613,"index":"D","name":"Kingdom and its Cities","type":"PROGRAMMING","points":2000.0,"rating":2800,"tags":["dfs and similar","divide and conquer","dp","graphs","sortings","trees"]},{"contestId":609,"index":"E","name":"Minimum spanning tree for each edge","type":"PROGRAMMING","rating":2100,"tags":["data structures","dfs and similar","dsu","graphs","trees"]},{"contestId":607,"index":"D","name":"Power Tree","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":603,"index":"E","name":"Pastoral Oddities","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["data structures","divide and conquer","dsu","math","trees"]},{"contestId":601,"index":"D","name":"Acyclic Organic Compounds","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dfs and similar","dsu","hashing","strings","trees"]},{"contestId":600,"index":"E","name":"Lomsat gelral","type":"PROGRAMMING","rating":2300,"tags":["data structures","dfs and similar","dsu","trees"]},{"contestId":599,"index":"E","name":"Sandy and Nuts","type":"PROGRAMMING","points":3000.0,"rating":2600,"tags":["bitmasks","dp","trees"]},{"contestId":593,"index":"D","name":"Happy Tree Party","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","dfs and similar","graphs","math","trees"]},{"contestId":592,"index":"D","name":"Super M","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":587,"index":"C","name":"Duff in the Army","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["data structures","trees"]},{"contestId":581,"index":"F","name":"Zublicanes and Mumocrates","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["dp","trees","two pointers"]},{"contestId":580,"index":"C","name":"Kefa and Park","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["dfs and similar","graphs","trees"]},{"contestId":578,"index":"F","name":"Mirror Box","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["matrices","trees"]},{"contestId":576,"index":"B","name":"Invariance of Tree","type":"PROGRAMMING","points":1250.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","greedy","trees"]},{"contestId":575,"index":"B","name":"Bribes","type":"PROGRAMMING","rating":2200,"tags":["dfs and similar","graphs","trees"]},{"contestId":573,"index":"C","name":"Bear and Drawing","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":571,"index":"D","name":"Campus","type":"PROGRAMMING","points":2000.0,"rating":3100,"tags":["binary search","data structures","dsu","trees"]},{"contestId":570,"index":"D","name":"Tree Requests","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["binary search","bitmasks","constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":566,"index":"E","name":"Restoring Map","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["bitmasks","constructive algorithms","trees"]},{"contestId":566,"index":"C","name":"Logistical Questions","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["dfs and similar","divide and conquer","trees"]},{"contestId":566,"index":"A","name":"Matching Names","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["dfs and similar","strings","trees"]},{"contestId":557,"index":"E","name":"Ann and Half-Palindrome","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["data structures","dp","graphs","string suffix structures","strings","trees"]},{"contestId":555,"index":"E","name":"Case of Computer Network","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["dfs and similar","graphs","trees"]},{"contestId":547,"index":"E","name":"Mike and Friends","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","string suffix structures","strings","trees"]},{"contestId":543,"index":"D","name":"Road Improvement","type":"PROGRAMMING","points":1750.0,"rating":2300,"tags":["dp","trees"]},{"contestId":540,"index":"E","name":"Infinite Inversions","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","implementation","sortings","trees"]},{"contestId":538,"index":"E","name":"Demiurges Play Again","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["dfs and similar","dp","math","trees"]},{"contestId":536,"index":"E","name":"Tavas on the Path","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","divide and conquer","trees"]},{"contestId":533,"index":"B","name":"Work Group","type":"PROGRAMMING","points":750.0,"rating":2000,"tags":["dfs and similar","dp","graphs","strings","trees"]},{"contestId":533,"index":"A","name":"Berland Miners","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","data structures","dfs and similar","greedy","trees"]},{"contestId":526,"index":"G","name":"Spiders Evil Plan","type":"PROGRAMMING","points":3000.0,"rating":3300,"tags":["greedy","trees"]},{"contestId":522,"index":"A","name":"Reposts","type":"PROGRAMMING","points":500.0,"rating":1200,"tags":["*special","dfs and similar","dp","graphs","trees"]},{"contestId":519,"index":"E","name":"A and B and Lecture Rooms","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["binary search","data structures","dfs and similar","dp","trees"]},{"contestId":516,"index":"D","name":"Drazil and Morning Exercise","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["dfs and similar","dp","dsu","trees","two pointers"]},{"contestId":512,"index":"D","name":"Fox And Travelling","type":"PROGRAMMING","points":2250.0,"rating":2900,"tags":["dp","trees"]},{"contestId":509,"index":"F","name":"Progress Monitoring","type":"PROGRAMMING","rating":2300,"tags":["dp","trees"]},{"contestId":507,"index":"C","name":"Guess Your Way Out!","type":"PROGRAMMING","points":1500.0,"rating":1700,"tags":["implementation","math","trees"]},{"contestId":504,"index":"E","name":"Misha and LCP on Tree","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","dfs and similar","hashing","string suffix structures","trees"]},{"contestId":501,"index":"C","name":"Misha and Forest","type":"PROGRAMMING","points":1500.0,"rating":1500,"tags":["constructive algorithms","data structures","greedy","sortings","trees"]},{"contestId":500,"index":"G","name":"New Year Running","type":"PROGRAMMING","points":3500.0,"rating":3200,"tags":["number theory","trees"]},{"contestId":500,"index":"D","name":"New Year Santa Network","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["combinatorics","dfs and similar","graphs","trees"]},{"contestId":494,"index":"D","name":"Birthday","type":"PROGRAMMING","points":1750.0,"rating":2700,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":490,"index":"F","name":"Treeland Tour","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["data structures","dfs and similar","dp","trees"]},{"contestId":487,"index":"E","name":"Tourists","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":486,"index":"D","name":"Valid Sets","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["dfs and similar","dp","math","trees"]},{"contestId":482,"index":"E","name":"ELCA","type":"PROGRAMMING","points":2500.0,"rating":3200,"tags":["data structures","trees"]},{"contestId":482,"index":"D","name":"Random Function and Tree","type":"PROGRAMMING","points":2000.0,"rating":2700,"tags":["combinatorics","dp","trees"]},{"contestId":482,"index":"B","name":"Interesting Array","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["constructive algorithms","data structures","trees"]},{"contestId":474,"index":"E","name":"Pillars","type":"PROGRAMMING","points":3000.0,"rating":2000,"tags":["binary search","data structures","dp","sortings","trees"]},{"contestId":472,"index":"D","name":"Design Tutorial: Inverse the Problem","type":"PROGRAMMING","points":2000.0,"rating":1900,"tags":["dfs and similar","dsu","shortest paths","trees"]},{"contestId":466,"index":"E","name":"Information Graph","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":463,"index":"E","name":"Caisa and Tree","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["brute force","dfs and similar","math","number theory","trees"]},{"contestId":461,"index":"B","name":"Appleman and Tree","type":"PROGRAMMING","points":1000.0,"rating":2000,"tags":["dfs and similar","dp","trees"]},{"contestId":457,"index":"F","name":"An easy problem about trees","type":"PROGRAMMING","points":3000.0,"rating":3200,"tags":["dp","games","greedy","trees"]},{"contestId":455,"index":"C","name":"Civilization","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dp","dsu","ternary search","trees"]},{"contestId":455,"index":"B","name":"A Lot of Games","type":"PROGRAMMING","points":1000.0,"rating":1900,"tags":["dfs and similar","dp","games","implementation","strings","trees"]},{"contestId":452,"index":"B","name":"4-point polyline","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["brute force","constructive algorithms","geometry","trees"]},{"contestId":444,"index":"E","name":"DZY Loves Planting","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["binary search","dsu","trees"]},{"contestId":442,"index":"D","name":"Adam and Tree","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["data structures","trees"]},{"contestId":440,"index":"D","name":"Berland Federalization","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["dp","trees"]},{"contestId":436,"index":"C","name":"Dungeons and Candies","type":"PROGRAMMING","points":1500.0,"rating":1800,"tags":["dsu","graphs","greedy","trees"]},{"contestId":434,"index":"E","name":"Furukawa Nagisa\u0027s Tree","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","divide and conquer","sortings","trees"]},{"contestId":431,"index":"C","name":"k-Tree","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["dp","implementation","trees"]},{"contestId":429,"index":"C","name":"Guess the Tree","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["bitmasks","constructive algorithms","dp","greedy","trees"]},{"contestId":429,"index":"A","name":"Xor-tree","type":"PROGRAMMING","points":500.0,"rating":1300,"tags":["dfs and similar","trees"]},{"contestId":418,"index":"D","name":"Big Problems for Organizers","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","graphs","trees"]},{"contestId":414,"index":"D","name":"Mashmokh and Water Tanks","type":"PROGRAMMING","points":1500.0,"rating":2300,"tags":["binary search","data structures","greedy","trees","two pointers"]},{"contestId":406,"index":"D","name":"Hill Climbing","type":"PROGRAMMING","points":2000.0,"rating":2200,"tags":["dfs and similar","geometry","trees"]},{"contestId":403,"index":"E","name":"Two Rooted Trees","type":"PROGRAMMING","points":2000.0,"rating":2900,"tags":["data structures","implementation","trees"]},{"contestId":396,"index":"C","name":"On Changing Tree","type":"PROGRAMMING","points":1500.0,"tags":["data structures","graphs","trees"]},{"contestId":383,"index":"C","name":"Propagating tree","type":"PROGRAMMING","points":1500.0,"rating":2000,"tags":["data structures","dfs and similar","trees"]},{"contestId":382,"index":"D","name":"Ksenia and Pawns","type":"PROGRAMMING","points":3000.0,"rating":2200,"tags":["dfs and similar","graphs","implementation","trees"]},{"contestId":379,"index":"F","name":"New Year Tree","type":"PROGRAMMING","points":3000.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":375,"index":"D","name":"Tree and Queries","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["data structures","dfs and similar","trees"]},{"contestId":374,"index":"D","name":"Inna and Sequence ","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["binary search","data structures","dp","trees"]},{"contestId":372,"index":"D","name":"Choosing Subtree is Fun","type":"PROGRAMMING","points":2000.0,"rating":2600,"tags":["binary search","data structures","dfs and similar","trees","two pointers"]},{"contestId":371,"index":"D","name":"Vessels","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["data structures","dsu","implementation","trees"]},{"contestId":369,"index":"C","name":"Valera and Elections","type":"PROGRAMMING","points":1500.0,"rating":1600,"tags":["dfs and similar","graphs","trees"]},{"contestId":348,"index":"E","name":"Pilgrims","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["dfs and similar","dp","trees"]},{"contestId":348,"index":"B","name":"Apple Tree","type":"PROGRAMMING","points":1000.0,"rating":2100,"tags":["dfs and similar","number theory","trees"]},{"contestId":343,"index":"E","name":"Pumping Stations","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["brute force","dfs and similar","divide and conquer","flows","graphs","greedy","trees"]},{"contestId":343,"index":"D","name":"Water Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dfs and similar","graphs","trees"]},{"contestId":342,"index":"E","name":"Xenia and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","divide and conquer","trees"]},{"contestId":339,"index":"D","name":"Xenia and Bit Operations","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["data structures","trees"]},{"contestId":337,"index":"E","name":"Divisor Tree","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["brute force","number theory","trees"]},{"contestId":337,"index":"D","name":"Book of Evil","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dfs and similar","divide and conquer","dp","trees"]},{"contestId":331,"index":"D3","name":"Escaping on Beaveractor","type":"PROGRAMMING","points":40.0,"rating":3000,"tags":["data structures","implementation","trees"]},{"contestId":321,"index":"C","name":"Ciel the Commander","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["constructive algorithms","dfs and similar","divide and conquer","greedy","trees"]},{"contestId":317,"index":"C","name":"Balance","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["constructive algorithms","dfs and similar","graphs","trees"]},{"contestId":294,"index":"E","name":"Shaass the Great","type":"PROGRAMMING","points":2500.0,"rating":2300,"tags":["dp","trees"]},{"contestId":293,"index":"E","name":"Close Vertices","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["data structures","divide and conquer","trees"]},{"contestId":290,"index":"C","name":"WTF?","type":"PROGRAMMING","rating":1700,"tags":["*special","graph matchings","implementation","trees"]},{"contestId":288,"index":"D","name":"Polo the Penguin and Trees ","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["combinatorics","dfs and similar","trees"]},{"contestId":282,"index":"E","name":"Sausage Maximization","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["bitmasks","data structures","trees"]},{"contestId":280,"index":"C","name":"Game on Tree","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["implementation","math","probabilities","trees"]},{"contestId":277,"index":"E","name":"Binary Tree on Plane","type":"PROGRAMMING","points":2000.0,"rating":2400,"tags":["flows","trees"]},{"contestId":276,"index":"E","name":"Little Girl and Problem on Trees","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","graphs","trees"]},{"contestId":274,"index":"B","name":"Zero Tree","type":"PROGRAMMING","points":1000.0,"rating":1800,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":260,"index":"D","name":"Black and White Tree","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["constructive algorithms","dsu","graphs","greedy","trees"]},{"contestId":258,"index":"E","name":"Little Elephant and Tree","type":"PROGRAMMING","points":2500.0,"rating":2400,"tags":["data structures","dfs and similar","trees"]},{"contestId":251,"index":"E","name":"Tree and Table","type":"PROGRAMMING","points":2500.0,"rating":3000,"tags":["dfs and similar","dp","implementation","trees"]},{"contestId":238,"index":"C","name":"World Eater Brothers","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dp","greedy","trees"]},{"contestId":237,"index":"D","name":"T-decomposition","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["dfs and similar","graphs","greedy","trees"]},{"contestId":231,"index":"E","name":"Cactus","type":"PROGRAMMING","points":2500.0,"rating":2100,"tags":["data structures","dfs and similar","dp","graphs","trees"]},{"contestId":226,"index":"E","name":"Noble Knight\u0027s Path","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","trees"]},{"contestId":219,"index":"D","name":"Choosing Capital for Treeland","type":"PROGRAMMING","points":2000.0,"rating":1700,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":217,"index":"E","name":"Alien DNA","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["data structures","dsu","trees"]},{"contestId":212,"index":"E","name":"IT Restaurants","type":"PROGRAMMING","points":500.0,"rating":1500,"tags":["dfs and similar","dp","trees"]},{"contestId":208,"index":"E","name":"Blood Cousins","type":"PROGRAMMING","points":3000.0,"rating":2100,"tags":["binary search","data structures","dfs and similar","trees"]},{"contestId":196,"index":"C","name":"Paint Tree","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["constructive algorithms","divide and conquer","geometry","sortings","trees"]},{"contestId":193,"index":"A","name":"Cutting Figure","type":"PROGRAMMING","points":500.0,"rating":1700,"tags":["constructive algorithms","graphs","trees"]},{"contestId":191,"index":"E","name":"Thwarting Demonstrations","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["binary search","data structures","trees"]},{"contestId":191,"index":"C","name":"Fools and Roads","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","dfs and similar","trees"]},{"contestId":176,"index":"E","name":"Archaeology","type":"PROGRAMMING","points":2500.0,"rating":3100,"tags":["data structures","dfs and similar","trees"]},{"contestId":165,"index":"D","name":"Beard Graph","type":"PROGRAMMING","points":2000.0,"rating":2100,"tags":["data structures","dsu","trees"]},{"contestId":163,"index":"E","name":"e-Government","type":"PROGRAMMING","points":2500.0,"rating":2800,"tags":["data structures","dfs and similar","dp","strings","trees"]},{"contestId":161,"index":"D","name":"Distance in Tree","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["dfs and similar","dp","trees"]},{"contestId":152,"index":"E","name":"Garden","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["bitmasks","dp","graphs","trees"]},{"contestId":150,"index":"E","name":"Freezing with Style","type":"PROGRAMMING","points":3000.0,"rating":3000,"tags":["binary search","data structures","divide and conquer","trees"]},{"contestId":123,"index":"E","name":"Maze","type":"PROGRAMMING","points":2500.0,"rating":2500,"tags":["dfs and similar","dp","probabilities","trees"]},{"contestId":120,"index":"F","name":"Spiders","type":"PROGRAMMING","rating":1400,"tags":["dp","greedy","trees"]},{"contestId":117,"index":"E","name":"Tree or not Tree","type":"PROGRAMMING","points":2500.0,"rating":2900,"tags":["data structures","divide and conquer","implementation","trees"]},{"contestId":115,"index":"A","name":"Party","type":"PROGRAMMING","points":500.0,"rating":900,"tags":["dfs and similar","graphs","trees"]},{"contestId":109,"index":"C","name":"Lucky Tree","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["dp","dsu","trees"]},{"contestId":101,"index":"D","name":"Castle","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["dp","greedy","probabilities","sortings","trees"]},{"contestId":98,"index":"B","name":"Help King","type":"PROGRAMMING","points":1000.0,"rating":2200,"tags":["implementation","probabilities","trees"]},{"contestId":97,"index":"E","name":"Leaders","type":"PROGRAMMING","points":2500.0,"rating":2200,"tags":["dfs and similar","dsu","graphs","trees"]},{"contestId":87,"index":"D","name":"Beautiful Road","type":"PROGRAMMING","points":2000.0,"rating":2300,"tags":["dfs and similar","dp","dsu","graphs","implementation","sortings","trees"]},{"contestId":86,"index":"C","name":"Genetic engineering","type":"PROGRAMMING","points":2000.0,"rating":2500,"tags":["dp","string suffix structures","trees"]},{"contestId":85,"index":"C","name":"Petya and Tree","type":"PROGRAMMING","points":1500.0,"rating":2200,"tags":["binary search","dfs and similar","probabilities","sortings","trees"]},{"contestId":81,"index":"E","name":"Pairs","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["dfs and similar","dp","dsu","graphs","implementation","trees"]},{"contestId":77,"index":"C","name":"Beavermuncher-0xFF","type":"PROGRAMMING","points":1500.0,"rating":2100,"tags":["dfs and similar","dp","dsu","greedy","trees"]},{"contestId":76,"index":"A","name":"Gift","type":"PROGRAMMING","rating":2200,"tags":["dsu","graphs","sortings","trees"]},{"contestId":75,"index":"D","name":"Big Maximum Sum","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["data structures","dp","greedy","implementation","math","trees"]},{"contestId":70,"index":"E","name":"Information Reform","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["dp","implementation","trees"]},{"contestId":61,"index":"E","name":"Enemy is weak","type":"PROGRAMMING","points":2500.0,"rating":1900,"tags":["data structures","trees"]},{"contestId":61,"index":"D","name":"Eternal Victory","type":"PROGRAMMING","points":2000.0,"rating":1800,"tags":["dfs and similar","graphs","greedy","shortest paths","trees"]},{"contestId":51,"index":"F","name":"Caterpillar","type":"PROGRAMMING","points":3000.0,"rating":2800,"tags":["dfs and similar","dp","graphs","trees"]},{"contestId":48,"index":"G","name":"Galaxy Union","type":"PROGRAMMING","rating":2700,"tags":["dp","trees","two pointers"]},{"contestId":42,"index":"E","name":"Baldman and the military","type":"PROGRAMMING","points":2500.0,"rating":2700,"tags":["dfs and similar","graphs","trees"]},{"contestId":37,"index":"C","name":"Old Berland Language","type":"PROGRAMMING","points":1500.0,"rating":1900,"tags":["data structures","greedy","trees"]},{"contestId":29,"index":"D","name":"Ant on the Tree","type":"PROGRAMMING","points":2000.0,"rating":2000,"tags":["constructive algorithms","dfs and similar","trees"]},{"contestId":25,"index":"D","name":"Roads not only in Berland","type":"PROGRAMMING","rating":1900,"tags":["dsu","graphs","trees"]},{"contestId":22,"index":"E","name":"Scheme","type":"PROGRAMMING","rating":2300,"tags":["dfs and similar","graphs","trees"]},{"contestId":14,"index":"D","name":"Two Paths","type":"PROGRAMMING","rating":1900,"tags":["dfs and similar","dp","graphs","shortest paths","trees","two pointers"]},{"contestId":6,"index":"E","name":"Exposition","type":"PROGRAMMING","rating":1900,"tags":["binary search","data structures","dsu","trees","two pointers"]}],"problemStatistics":[{"contestId":1559,"index":"D2","solvedCount":1305},{"contestId":1559,"index":"D1","solvedCount":7384},{"contestId":1555,"index":"F","solvedCount":464},{"contestId":1555,"index":"E","solvedCount":2381},{"contestId":1553,"index":"H","solvedCount":267},{"contestId":1551,"index":"F","solvedCount":930},{"contestId":1547,"index":"G","solvedCount":1731},{"contestId":1540,"index":"B","solvedCount":1506},{"contestId":1535,"index":"E","solvedCount":1855},{"contestId":1535,"index":"D","solvedCount":5278},{"contestId":1534,"index":"H","solvedCount":70},{"contestId":1534,"index":"D","solvedCount":4104},{"contestId":1528,"index":"E","solvedCount":258},{"contestId":1528,"index":"C","solvedCount":1744},{"contestId":1528,"index":"A","solvedCount":8836},{"contestId":1527,"index":"D","solvedCount":1191},{"contestId":1523,"index":"C","solvedCount":6515},{"contestId":1521,"index":"D","solvedCount":1160},{"contestId":1519,"index":"E","solvedCount":597},{"contestId":1517,"index":"F","solvedCount":195},{"contestId":1515,"index":"F","solvedCount":1033},{"contestId":1511,"index":"C","solvedCount":15389},{"contestId":1508,"index":"E","solvedCount":204},{"contestId":1508,"index":"C","solvedCount":869},{"contestId":1499,"index":"F","solvedCount":656},{"contestId":1498,"index":"F","solvedCount":421},{"contestId":1495,"index":"F","solvedCount":137},{"contestId":1495,"index":"D","solvedCount":784},{"contestId":1494,"index":"D","solvedCount":1906},{"contestId":1491,"index":"H","solvedCount":276},{"contestId":1491,"index":"E","solvedCount":1509},{"contestId":1486,"index":"F","solvedCount":393},{"contestId":1485,"index":"E","solvedCount":908},{"contestId":1482,"index":"H","solvedCount":135},{"contestId":1481,"index":"F","solvedCount":219},{"contestId":1479,"index":"D","solvedCount":474},{"contestId":1467,"index":"E","solvedCount":906},{"contestId":1466,"index":"D","solvedCount":8691},{"contestId":1464,"index":"F","solvedCount":66},{"contestId":1463,"index":"E","solvedCount":1032},{"contestId":1458,"index":"F","solvedCount":98},{"contestId":1454,"index":"E","solvedCount":4040},{"contestId":1453,"index":"E","solvedCount":1545},{"contestId":1452,"index":"G","solvedCount":205},{"contestId":1450,"index":"G","solvedCount":103},{"contestId":1446,"index":"C","solvedCount":2308},{"contestId":1444,"index":"E","solvedCount":65},{"contestId":1442,"index":"E","solvedCount":276},{"contestId":1439,"index":"E","solvedCount":68},{"contestId":1438,"index":"F","solvedCount":302},{"contestId":1437,"index":"G","solvedCount":564},{"contestId":1437,"index":"D","solvedCount":8565},{"contestId":1436,"index":"D","solvedCount":4412},{"contestId":1427,"index":"F","solvedCount":110},{"contestId":1423,"index":"C","solvedCount":35},{"contestId":1416,"index":"D","solvedCount":1064},{"contestId":1416,"index":"C","solvedCount":2782},{"contestId":1413,"index":"F","solvedCount":449},{"contestId":1408,"index":"G","solvedCount":512},{"contestId":1408,"index":"E","solvedCount":1470},{"contestId":1406,"index":"C","solvedCount":7306},{"contestId":1404,"index":"B","solvedCount":5577},{"contestId":1403,"index":"B","solvedCount":281},{"contestId":1402,"index":"C","solvedCount":141},{"contestId":1401,"index":"D","solvedCount":6709},{"contestId":1399,"index":"E2","solvedCount":1729},{"contestId":1399,"index":"E1","solvedCount":4522},{"contestId":1396,"index":"E","solvedCount":200},{"contestId":1394,"index":"D","solvedCount":375},{"contestId":1391,"index":"E","solvedCount":941},{"contestId":1389,"index":"G","solvedCount":228},{"contestId":1388,"index":"D","solvedCount":4896},{"contestId":1388,"index":"C","solvedCount":7511},{"contestId":1387,"index":"B2","solvedCount":388},{"contestId":1387,"index":"B1","solvedCount":657},{"contestId":1385,"index":"F","solvedCount":1616},{"contestId":1383,"index":"C","solvedCount":299},{"contestId":1383,"index":"A","solvedCount":8405},{"contestId":1381,"index":"D","solvedCount":258},{"contestId":1380,"index":"E","solvedCount":1430},{"contestId":1379,"index":"E","solvedCount":206},{"contestId":1375,"index":"G","solvedCount":1123},{"contestId":1370,"index":"F2","solvedCount":930},{"contestId":1370,"index":"F1","solvedCount":1047},{"contestId":1369,"index":"D","solvedCount":6754},{"contestId":1368,"index":"G","solvedCount":179},{"contestId":1364,"index":"D","solvedCount":3028},{"contestId":1363,"index":"E","solvedCount":5115},{"contestId":1363,"index":"C","solvedCount":12715},{"contestId":1361,"index":"E","solvedCount":275},{"contestId":1361,"index":"D","solvedCount":233},{"contestId":1344,"index":"E","solvedCount":104},{"contestId":1340,"index":"D","solvedCount":577},{"contestId":1338,"index":"D","solvedCount":545},{"contestId":1338,"index":"B","solvedCount":6494},{"contestId":1336,"index":"F","solvedCount":106},{"contestId":1336,"index":"A","solvedCount":13838},{"contestId":1332,"index":"F","solvedCount":781},{"contestId":1328,"index":"E","solvedCount":5934},{"contestId":1326,"index":"G","solvedCount":35},{"contestId":1325,"index":"C","solvedCount":10417},{"contestId":1324,"index":"F","solvedCount":5420},{"contestId":1322,"index":"F","solvedCount":43},{"contestId":1320,"index":"E","solvedCount":386},{"contestId":1311,"index":"E","solvedCount":1535},{"contestId":1307,"index":"F","solvedCount":318},{"contestId":1305,"index":"D","solvedCount":3832},{"contestId":1304,"index":"E","solvedCount":3547},{"contestId":1303,"index":"G","solvedCount":425},{"contestId":1299,"index":"D","solvedCount":260},{"contestId":1297,"index":"E","solvedCount":172},{"contestId":1296,"index":"F","solvedCount":2054},{"contestId":1294,"index":"F","solvedCount":3686},{"contestId":1292,"index":"D","solvedCount":581},{"contestId":1292,"index":"C","solvedCount":1470},{"contestId":1286,"index":"B","solvedCount":3537},{"contestId":1285,"index":"E","solvedCount":1271},{"contestId":1285,"index":"D","solvedCount":5451},{"contestId":1284,"index":"F","solvedCount":190},{"contestId":1283,"index":"F","solvedCount":1103},{"contestId":1280,"index":"D","solvedCount":539},{"contestId":1280,"index":"C","solvedCount":1886},{"contestId":1278,"index":"E","solvedCount":1318},{"contestId":1278,"index":"D","solvedCount":2805},{"contestId":1276,"index":"D","solvedCount":230},{"contestId":1263,"index":"F","solvedCount":626},{"contestId":1260,"index":"F","solvedCount":301},{"contestId":1254,"index":"E","solvedCount":161},{"contestId":1254,"index":"D","solvedCount":658},{"contestId":1253,"index":"F","solvedCount":847},{"contestId":1252,"index":"F","solvedCount":605},{"contestId":1252,"index":"D","solvedCount":186},{"contestId":1252,"index":"B","solvedCount":402},{"contestId":1249,"index":"F","solvedCount":1374},{"contestId":1245,"index":"D","solvedCount":4207},{"contestId":1244,"index":"D","solvedCount":5656},{"contestId":1238,"index":"F","solvedCount":1211},{"contestId":1228,"index":"F","solvedCount":342},{"contestId":1225,"index":"F","solvedCount":640},{"contestId":1223,"index":"E","solvedCount":2028},{"contestId":1220,"index":"E","solvedCount":1913},{"contestId":1217,"index":"F","solvedCount":300},{"contestId":1214,"index":"H","solvedCount":283},{"contestId":1214,"index":"E","solvedCount":2087},{"contestId":1213,"index":"G","solvedCount":4156},{"contestId":1211,"index":"H","solvedCount":29},{"contestId":1211,"index":"G","solvedCount":51},{"contestId":1210,"index":"C","solvedCount":2635},{"contestId":1209,"index":"F","solvedCount":675},{"contestId":1208,"index":"H","solvedCount":61},{"contestId":1207,"index":"G","solvedCount":519},{"contestId":1205,"index":"D","solvedCount":434},{"contestId":1193,"index":"B","solvedCount":278},{"contestId":1192,"index":"B","solvedCount":447},{"contestId":1188,"index":"A2","solvedCount":876},{"contestId":1188,"index":"A1","solvedCount":6671},{"contestId":1187,"index":"E","solvedCount":3968},{"contestId":1184,"index":"E3","solvedCount":333},{"contestId":1184,"index":"E2","solvedCount":674},{"contestId":1184,"index":"E1","solvedCount":1234},{"contestId":1182,"index":"D","solvedCount":612},{"contestId":1181,"index":"D","solvedCount":1472},{"contestId":1179,"index":"D","solvedCount":498},{"contestId":1179,"index":"C","solvedCount":1366},{"contestId":1176,"index":"E","solvedCount":6465},{"contestId":1175,"index":"E","solvedCount":1860},{"contestId":1174,"index":"F","solvedCount":908},{"contestId":1172,"index":"B","solvedCount":3073},{"contestId":1168,"index":"D","solvedCount":189},{"contestId":1158,"index":"E","solvedCount":67},{"contestId":1156,"index":"D","solvedCount":2307},{"contestId":1153,"index":"D","solvedCount":3460},{"contestId":1152,"index":"D","solvedCount":1777},{"contestId":1149,"index":"C","solvedCount":711},{"contestId":1146,"index":"F","solvedCount":689},{"contestId":1143,"index":"C","solvedCount":7632},{"contestId":1142,"index":"B","solvedCount":1854},{"contestId":1141,"index":"G","solvedCount":1641},{"contestId":1140,"index":"G","solvedCount":214},{"contestId":1139,"index":"C","solvedCount":8531},{"contestId":1137,"index":"F","solvedCount":257},{"contestId":1132,"index":"G","solvedCount":619},{"contestId":1129,"index":"E","solvedCount":248},{"contestId":1120,"index":"D","solvedCount":604},{"contestId":1119,"index":"F","solvedCount":358},{"contestId":1118,"index":"F2","solvedCount":299},{"contestId":1118,"index":"F1","solvedCount":3873},{"contestId":1111,"index":"E","solvedCount":508},{"contestId":1110,"index":"G","solvedCount":361},{"contestId":1110,"index":"F","solvedCount":1246},{"contestId":1109,"index":"F","solvedCount":158},{"contestId":1109,"index":"D","solvedCount":923},{"contestId":1101,"index":"D","solvedCount":3012},{"contestId":1099,"index":"F","solvedCount":672},{"contestId":1098,"index":"C","solvedCount":691},{"contestId":1098,"index":"A","solvedCount":6683},{"contestId":1097,"index":"G","solvedCount":359},{"contestId":1092,"index":"F","solvedCount":3676},{"contestId":1092,"index":"E","solvedCount":1094},{"contestId":1088,"index":"F","solvedCount":329},{"contestId":1088,"index":"E","solvedCount":1084},{"contestId":1085,"index":"D","solvedCount":4525},{"contestId":1083,"index":"C","solvedCount":486},{"contestId":1083,"index":"A","solvedCount":3821},{"contestId":1082,"index":"F","solvedCount":297},{"contestId":1076,"index":"E","solvedCount":2828},{"contestId":1073,"index":"F","solvedCount":370},{"contestId":1067,"index":"E","solvedCount":232},{"contestId":1065,"index":"F","solvedCount":836},{"contestId":1062,"index":"E","solvedCount":1144},{"contestId":1060,"index":"E","solvedCount":2193},{"contestId":1059,"index":"E","solvedCount":944},{"contestId":1057,"index":"A","solvedCount":3811},{"contestId":1056,"index":"D","solvedCount":4221},{"contestId":1055,"index":"F","solvedCount":313},{"contestId":1053,"index":"E","solvedCount":129},{"contestId":1051,"index":"F","solvedCount":1547},{"contestId":1045,"index":"J","solvedCount":105},{"contestId":1045,"index":"D","solvedCount":436},{"contestId":1045,"index":"C","solvedCount":472},{"contestId":1045,"index":"A","solvedCount":214},{"contestId":1044,"index":"B","solvedCount":1357},{"contestId":1042,"index":"F","solvedCount":919},{"contestId":1039,"index":"D","solvedCount":736},{"contestId":1037,"index":"D","solvedCount":8981},{"contestId":1034,"index":"C","solvedCount":488},{"contestId":1032,"index":"F","solvedCount":577},{"contestId":1025,"index":"D","solvedCount":2545},{"contestId":1023,"index":"G","solvedCount":53},{"contestId":1023,"index":"F","solvedCount":621},{"contestId":1019,"index":"E","solvedCount":208},{"contestId":1016,"index":"F","solvedCount":543},{"contestId":1010,"index":"F","solvedCount":146},{"contestId":1010,"index":"D","solvedCount":1970},{"contestId":1009,"index":"F","solvedCount":2407},{"contestId":1007,"index":"D","solvedCount":126},{"contestId":1006,"index":"E","solvedCount":6583},{"contestId":1004,"index":"E","solvedCount":715},{"contestId":1000,"index":"G","solvedCount":310},{"contestId":1000,"index":"E","solvedCount":2053},{"contestId":997,"index":"D","solvedCount":299},{"contestId":995,"index":"F","solvedCount":599},{"contestId":990,"index":"G","solvedCount":1062},{"contestId":990,"index":"F","solvedCount":619},{"contestId":986,"index":"E","solvedCount":479},{"contestId":983,"index":"E","solvedCount":476},{"contestId":982,"index":"D","solvedCount":1904},{"contestId":982,"index":"C","solvedCount":7729},{"contestId":981,"index":"C","solvedCount":3989},{"contestId":980,"index":"F","solvedCount":99},{"contestId":980,"index":"E","solvedCount":1376},{"contestId":979,"index":"D","solvedCount":1211},{"contestId":979,"index":"C","solvedCount":4701},{"contestId":965,"index":"E","solvedCount":863},{"contestId":963,"index":"B","solvedCount":2088},{"contestId":962,"index":"G","solvedCount":77},{"contestId":962,"index":"F","solvedCount":705},{"contestId":960,"index":"H","solvedCount":115},{"contestId":960,"index":"E","solvedCount":1148},{"contestId":960,"index":"D","solvedCount":1408},{"contestId":959,"index":"C","solvedCount":4772},{"contestId":958,"index":"B2","solvedCount":474},{"contestId":955,"index":"F","solvedCount":151},{"contestId":936,"index":"E","solvedCount":136},{"contestId":935,"index":"E","solvedCount":745},{"contestId":932,"index":"D","solvedCount":1315},{"contestId":930,"index":"A","solvedCount":5365},{"contestId":928,"index":"D","solvedCount":748},{"contestId":925,"index":"E","solvedCount":254},{"contestId":923,"index":"F","solvedCount":44},{"contestId":923,"index":"C","solvedCount":3519},{"contestId":917,"index":"E","solvedCount":72},{"contestId":917,"index":"D","solvedCount":522},{"contestId":916,"index":"E","solvedCount":814},{"contestId":916,"index":"D","solvedCount":331},{"contestId":915,"index":"F","solvedCount":1326},{"contestId":914,"index":"H","solvedCount":84},{"contestId":914,"index":"E","solvedCount":834},{"contestId":913,"index":"B","solvedCount":11521},{"contestId":911,"index":"F","solvedCount":935},{"contestId":901,"index":"A","solvedCount":4479},{"contestId":894,"index":"D","solvedCount":937},{"contestId":893,"index":"F","solvedCount":1009},{"contestId":891,"index":"D","solvedCount":91},{"contestId":886,"index":"C","solvedCount":4865},{"contestId":877,"index":"E","solvedCount":2916},{"contestId":871,"index":"E","solvedCount":86},{"contestId":870,"index":"E","solvedCount":812},{"contestId":868,"index":"E","solvedCount":290},{"contestId":864,"index":"F","solvedCount":483},{"contestId":862,"index":"B","solvedCount":10015},{"contestId":860,"index":"E","solvedCount":319},{"contestId":859,"index":"E","solvedCount":1265},{"contestId":859,"index":"D","solvedCount":728},{"contestId":856,"index":"D","solvedCount":265},{"contestId":856,"index":"B","solvedCount":384},{"contestId":855,"index":"G","solvedCount":145},{"contestId":855,"index":"D","solvedCount":411},{"contestId":855,"index":"C","solvedCount":1408},{"contestId":852,"index":"I","solvedCount":400},{"contestId":847,"index":"L","solvedCount":263},{"contestId":846,"index":"E","solvedCount":568},{"contestId":843,"index":"C","solvedCount":282},{"contestId":842,"index":"E","solvedCount":216},{"contestId":842,"index":"C","solvedCount":2898},{"contestId":840,"index":"E","solvedCount":228},{"contestId":839,"index":"C","solvedCount":10983},{"contestId":838,"index":"B","solvedCount":351},{"contestId":835,"index":"F","solvedCount":548},{"contestId":833,"index":"D","solvedCount":238},{"contestId":832,"index":"D","solvedCount":2653},{"contestId":830,"index":"E","solvedCount":145},{"contestId":830,"index":"D","solvedCount":478},{"contestId":827,"index":"D","solvedCount":715},{"contestId":827,"index":"B","solvedCount":2972},{"contestId":825,"index":"G","solvedCount":615},{"contestId":822,"index":"F","solvedCount":212},{"contestId":821,"index":"C","solvedCount":5312},{"contestId":817,"index":"F","solvedCount":1209},{"contestId":817,"index":"E","solvedCount":1512},{"contestId":815,"index":"C","solvedCount":1541},{"contestId":814,"index":"D","solvedCount":1708},{"contestId":812,"index":"E","solvedCount":841},{"contestId":812,"index":"D","solvedCount":271},{"contestId":809,"index":"E","solvedCount":422},{"contestId":804,"index":"D","solvedCount":920},{"contestId":802,"index":"L","solvedCount":157},{"contestId":802,"index":"K","solvedCount":468},{"contestId":802,"index":"J","solvedCount":2418},{"contestId":796,"index":"D","solvedCount":3122},{"contestId":796,"index":"C","solvedCount":2562},{"contestId":793,"index":"E","solvedCount":181},{"contestId":792,"index":"D","solvedCount":2321},{"contestId":786,"index":"E","solvedCount":338},{"contestId":786,"index":"D","solvedCount":91},{"contestId":780,"index":"C","solvedCount":7193},{"contestId":778,"index":"C","solvedCount":705},{"contestId":776,"index":"F","solvedCount":298},{"contestId":772,"index":"E","solvedCount":84},{"contestId":771,"index":"C","solvedCount":2180},{"contestId":767,"index":"C","solvedCount":3031},{"contestId":766,"index":"E","solvedCount":2010},{"contestId":765,"index":"E","solvedCount":1094},{"contestId":763,"index":"D","solvedCount":332},{"contestId":763,"index":"A","solvedCount":7862},{"contestId":762,"index":"F","solvedCount":163},{"contestId":761,"index":"E","solvedCount":1553},{"contestId":758,"index":"E","solvedCount":342},{"contestId":757,"index":"G","solvedCount":228},{"contestId":755,"index":"C","solvedCount":7962},{"contestId":754,"index":"E","solvedCount":363},{"contestId":750,"index":"F","solvedCount":346},{"contestId":748,"index":"F","solvedCount":523},{"contestId":746,"index":"G","solvedCount":1074},{"contestId":743,"index":"D","solvedCount":3553},{"contestId":741,"index":"D","solvedCount":1268},{"contestId":739,"index":"B","solvedCount":3606},{"contestId":735,"index":"E","solvedCount":639},{"contestId":734,"index":"E","solvedCount":2457},{"contestId":733,"index":"F","solvedCount":874},{"contestId":724,"index":"G","solvedCount":639},{"contestId":724,"index":"F","solvedCount":264},{"contestId":722,"index":"D","solvedCount":2754},{"contestId":718,"index":"D","solvedCount":272},{"contestId":715,"index":"C","solvedCount":1265},{"contestId":708,"index":"C","solvedCount":1664},{"contestId":706,"index":"D","solvedCount":5992},{"contestId":704,"index":"E","solvedCount":173},{"contestId":700,"index":"B","solvedCount":2941},{"contestId":698,"index":"B","solvedCount":4580},{"contestId":696,"index":"E","solvedCount":311},{"contestId":696,"index":"B","solvedCount":2888},{"contestId":696,"index":"A","solvedCount":5288},{"contestId":690,"index":"F3","solvedCount":33},{"contestId":690,"index":"F2","solvedCount":56},{"contestId":690,"index":"C3","solvedCount":715},{"contestId":690,"index":"C2","solvedCount":2296},{"contestId":685,"index":"B","solvedCount":2787},{"contestId":682,"index":"C","solvedCount":5650},{"contestId":681,"index":"D","solvedCount":1543},{"contestId":675,"index":"D","solvedCount":2963},{"contestId":665,"index":"E","solvedCount":1756},{"contestId":653,"index":"E","solvedCount":1062},{"contestId":652,"index":"E","solvedCount":1142},{"contestId":650,"index":"E","solvedCount":385},{"contestId":643,"index":"E","solvedCount":390},{"contestId":639,"index":"F","solvedCount":254},{"contestId":639,"index":"B","solvedCount":5561},{"contestId":638,"index":"C","solvedCount":1120},{"contestId":633,"index":"F","solvedCount":563},{"contestId":632,"index":"F","solvedCount":568},{"contestId":629,"index":"E","solvedCount":737},{"contestId":627,"index":"F","solvedCount":137},{"contestId":627,"index":"D","solvedCount":594},{"contestId":622,"index":"E","solvedCount":1391},{"contestId":620,"index":"F","solvedCount":442},{"contestId":620,"index":"E","solvedCount":2914},{"contestId":618,"index":"D","solvedCount":1457},{"contestId":615,"index":"C","solvedCount":1991},{"contestId":613,"index":"D","solvedCount":1307},{"contestId":609,"index":"E","solvedCount":3820},{"contestId":607,"index":"D","solvedCount":450},{"contestId":603,"index":"E","solvedCount":498},{"contestId":601,"index":"D","solvedCount":815},{"contestId":600,"index":"E","solvedCount":6027},{"contestId":599,"index":"E","solvedCount":440},{"contestId":593,"index":"D","solvedCount":929},{"contestId":592,"index":"D","solvedCount":1910},{"contestId":587,"index":"C","solvedCount":2467},{"contestId":581,"index":"F","solvedCount":590},{"contestId":580,"index":"C","solvedCount":23140},{"contestId":578,"index":"F","solvedCount":295},{"contestId":576,"index":"B","solvedCount":1393},{"contestId":575,"index":"B","solvedCount":791},{"contestId":573,"index":"C","solvedCount":849},{"contestId":571,"index":"D","solvedCount":400},{"contestId":570,"index":"D","solvedCount":3988},{"contestId":566,"index":"E","solvedCount":338},{"contestId":566,"index":"C","solvedCount":386},{"contestId":566,"index":"A","solvedCount":664},{"contestId":557,"index":"E","solvedCount":891},{"contestId":555,"index":"E","solvedCount":1304},{"contestId":547,"index":"E","solvedCount":1053},{"contestId":543,"index":"D","solvedCount":1561},{"contestId":540,"index":"E","solvedCount":1510},{"contestId":538,"index":"E","solvedCount":1324},{"contestId":536,"index":"E","solvedCount":234},{"contestId":533,"index":"B","solvedCount":1556},{"contestId":533,"index":"A","solvedCount":197},{"contestId":526,"index":"G","solvedCount":347},{"contestId":522,"index":"A","solvedCount":11089},{"contestId":519,"index":"E","solvedCount":3862},{"contestId":516,"index":"D","solvedCount":837},{"contestId":512,"index":"D","solvedCount":590},{"contestId":509,"index":"F","solvedCount":667},{"contestId":507,"index":"C","solvedCount":3653},{"contestId":504,"index":"E","solvedCount":454},{"contestId":501,"index":"C","solvedCount":4722},{"contestId":500,"index":"G","solvedCount":87},{"contestId":500,"index":"D","solvedCount":2736},{"contestId":494,"index":"D","solvedCount":449},{"contestId":490,"index":"F","solvedCount":1049},{"contestId":487,"index":"E","solvedCount":916},{"contestId":486,"index":"D","solvedCount":2973},{"contestId":482,"index":"E","solvedCount":146},{"contestId":482,"index":"D","solvedCount":345},{"contestId":482,"index":"B","solvedCount":4698},{"contestId":474,"index":"E","solvedCount":2129},{"contestId":472,"index":"D","solvedCount":3488},{"contestId":466,"index":"E","solvedCount":1520},{"contestId":463,"index":"E","solvedCount":1145},{"contestId":461,"index":"B","solvedCount":3757},{"contestId":457,"index":"F","solvedCount":59},{"contestId":455,"index":"C","solvedCount":3941},{"contestId":455,"index":"B","solvedCount":4254},{"contestId":452,"index":"B","solvedCount":1839},{"contestId":444,"index":"E","solvedCount":504},{"contestId":442,"index":"D","solvedCount":639},{"contestId":440,"index":"D","solvedCount":328},{"contestId":436,"index":"C","solvedCount":2300},{"contestId":434,"index":"E","solvedCount":172},{"contestId":431,"index":"C","solvedCount":16595},{"contestId":429,"index":"C","solvedCount":725},{"contestId":429,"index":"A","solvedCount":7356},{"contestId":418,"index":"D","solvedCount":336},{"contestId":414,"index":"D","solvedCount":577},{"contestId":406,"index":"D","solvedCount":971},{"contestId":403,"index":"E","solvedCount":139},{"contestId":396,"index":"C","solvedCount":1267},{"contestId":383,"index":"C","solvedCount":4151},{"contestId":382,"index":"D","solvedCount":567},{"contestId":379,"index":"F","solvedCount":1476},{"contestId":375,"index":"D","solvedCount":3658},{"contestId":374,"index":"D","solvedCount":705},{"contestId":372,"index":"D","solvedCount":607},{"contestId":371,"index":"D","solvedCount":3820},{"contestId":369,"index":"C","solvedCount":7009},{"contestId":348,"index":"E","solvedCount":304},{"contestId":348,"index":"B","solvedCount":1693},{"contestId":343,"index":"E","solvedCount":361},{"contestId":343,"index":"D","solvedCount":3278},{"contestId":342,"index":"E","solvedCount":4617},{"contestId":339,"index":"D","solvedCount":14800},{"contestId":337,"index":"E","solvedCount":862},{"contestId":337,"index":"D","solvedCount":3961},{"contestId":331,"index":"D3","solvedCount":117},{"contestId":321,"index":"C","solvedCount":4218},{"contestId":317,"index":"C","solvedCount":381},{"contestId":294,"index":"E","solvedCount":679},{"contestId":293,"index":"E","solvedCount":805},{"contestId":290,"index":"C","solvedCount":1184},{"contestId":288,"index":"D","solvedCount":585},{"contestId":282,"index":"E","solvedCount":2319},{"contestId":280,"index":"C","solvedCount":1931},{"contestId":277,"index":"E","solvedCount":770},{"contestId":276,"index":"E","solvedCount":1160},{"contestId":274,"index":"B","solvedCount":3837},{"contestId":260,"index":"D","solvedCount":1038},{"contestId":258,"index":"E","solvedCount":703},{"contestId":251,"index":"E","solvedCount":89},{"contestId":238,"index":"C","solvedCount":873},{"contestId":237,"index":"D","solvedCount":459},{"contestId":231,"index":"E","solvedCount":1070},{"contestId":226,"index":"E","solvedCount":332},{"contestId":219,"index":"D","solvedCount":5376},{"contestId":217,"index":"E","solvedCount":226},{"contestId":212,"index":"E","solvedCount":1169},{"contestId":208,"index":"E","solvedCount":3277},{"contestId":196,"index":"C","solvedCount":663},{"contestId":193,"index":"A","solvedCount":2647},{"contestId":191,"index":"E","solvedCount":645},{"contestId":191,"index":"C","solvedCount":4410},{"contestId":176,"index":"E","solvedCount":535},{"contestId":165,"index":"D","solvedCount":1091},{"contestId":163,"index":"E","solvedCount":812},{"contestId":161,"index":"D","solvedCount":7840},{"contestId":152,"index":"E","solvedCount":323},{"contestId":150,"index":"E","solvedCount":368},{"contestId":123,"index":"E","solvedCount":419},{"contestId":120,"index":"F","solvedCount":2774},{"contestId":117,"index":"E","solvedCount":187},{"contestId":115,"index":"A","solvedCount":21830},{"contestId":109,"index":"C","solvedCount":2225},{"contestId":101,"index":"D","solvedCount":440},{"contestId":98,"index":"B","solvedCount":74},{"contestId":97,"index":"E","solvedCount":223},{"contestId":87,"index":"D","solvedCount":661},{"contestId":86,"index":"C","solvedCount":486},{"contestId":85,"index":"C","solvedCount":476},{"contestId":81,"index":"E","solvedCount":218},{"contestId":77,"index":"C","solvedCount":769},{"contestId":76,"index":"A","solvedCount":840},{"contestId":75,"index":"D","solvedCount":1235},{"contestId":70,"index":"E","solvedCount":336},{"contestId":61,"index":"E","solvedCount":5714},{"contestId":61,"index":"D","solvedCount":4072},{"contestId":51,"index":"F","solvedCount":338},{"contestId":48,"index":"G","solvedCount":129},{"contestId":42,"index":"E","solvedCount":151},{"contestId":37,"index":"C","solvedCount":992},{"contestId":29,"index":"D","solvedCount":1534},{"contestId":25,"index":"D","solvedCount":5832},{"contestId":22,"index":"E","solvedCount":925},{"contestId":14,"index":"D","solvedCount":2963},{"contestId":6,"index":"E","solvedCount":2116}]}}

